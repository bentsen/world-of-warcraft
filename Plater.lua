
PlaterDB = {
["captured_spells"] = {
[83463] = {
["encounterName"] = "Ozumat",
["source"] = "Faceless Sapper",
["encounterID"] = 1047,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44752,
},
[12252] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tuten'kash",
["npcID"] = 7355,
},
[6136] = {
["source"] = "Twilight Dragonstalker",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 43992,
},
[14331] = {
["isChanneled"] = false,
["source"] = "Warpwood Treant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11462,
},
[79881] = {
["isChanneled"] = false,
["source"] = "Stone Trogg Berserker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43228,
},
[76171] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["encounterID"] = 1046,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40825,
},
[8270] = {
["isChanneled"] = false,
["source"] = "Razorfen Geomancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4520,
},
[8286] = {
["isChanneled"] = false,
["source"] = "Aggem Thorncurse",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4424,
},
[53646] = {
["encounterName"] = "Cho'gall",
["type"] = "BUFF",
["source"] = "Slootom",
["npcID"] = 417,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 1029,
},
[22833] = {
["isChanneled"] = false,
["source"] = "Stomper Kreeg",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 14322,
},
[12492] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Jammal'an the Prophet",
["npcID"] = 5710,
},
[33688] = {
["isChanneled"] = false,
["source"] = "Elemental Overseer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45084,
},
[12540] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Putridus Satyr",
["npcID"] = 11790,
},
[50256] = {
["isChanneled"] = false,
["source"] = "Bear",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26482,
},
[31405] = {
["source"] = "Murkblood Oracle",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17771,
},
[78859] = {
["encounterName"] = "Ozruk",
["type"] = "DEBUFF",
["source"] = "Ozruk",
["npcID"] = 42188,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 1058,
},
[95491] = {
["source"] = "Defias Cannon",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 48266,
},
[89734] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "Rotten Corn",
["encounterID"] = 1060,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48276,
},
[93956] = {
["encounterName"] = "Baron Silverlaine",
["source"] = "Baron Silverlaine",
["encounterID"] = 1070,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3887,
},
[75789] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["encounterID"] = 1049,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40484,
},
[88839] = {
["encounterName"] = "Admiral Ripsnarl",
["source"] = "Admiral Ripsnarl",
["encounterID"] = 1062,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47626,
},
[76685] = {
["isChanneled"] = false,
["source"] = "Crimsonborne Warlord",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39626,
},
[76813] = {
["isChanneled"] = false,
["source"] = "Naz'jar Spiritmender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41096,
},
[79884] = {
["isChanneled"] = false,
["source"] = "Braddok",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42858,
},
[8990] = {
["isChanneled"] = false,
["source"] = "Scarlet Commander Mograine",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3976,
},
[84490] = {
["isChanneled"] = false,
["source"] = "Pebble",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43116,
},
[76430] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Flame Tsunami",
["npcID"] = 40938,
},
[76686] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Twilight Obsidian Borer",
["npcID"] = 40019,
},
[22418] = {
["isChanneled"] = false,
["source"] = "Wildspawn Felsworn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11455,
},
[24529] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 42717,
},
[32749] = {
["isChanneled"] = false,
["source"] = "Scarlet Wizard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4300,
},
[88073] = {
["isChanneled"] = false,
["source"] = "Cloud Prince",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45917,
},
[73872] = {
["encounterName"] = "Rajh",
["source"] = "Rajh",
["npcID"] = 39378,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1078,
},
[76047] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["encounterID"] = 1044,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40765,
},
[76303] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Drahga Shadowburner",
["encounterID"] = 1048,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40319,
},
[80781] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rockwing Screecher",
["npcID"] = 10409,
},
[76815] = {
["isChanneled"] = false,
["source"] = "Naz'jar Spiritmender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41096,
},
[75024] = {
["source"] = "Fiery Tormentor",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 41396,
},
[15547] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sandfury Shadowhunter",
["npcID"] = 7246,
},
[9438] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcanist Doan",
["npcID"] = 6487,
},
[81677] = {
["encounterName"] = "Lockmaw",
["source"] = "Frenzied Crocolisk",
["encounterID"] = 1054,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43658,
},
[75664] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["encounterID"] = 1049,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40484,
},
[79886] = {
["isChanneled"] = false,
["source"] = "Stone Trogg Geomancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43234,
},
[82061] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "John J. Keeshan",
["npcID"] = 48346,
},
[76560] = {
["isChanneled"] = false,
["source"] = "Gilgoblin Aquamage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40943,
},
[76688] = {
["isChanneled"] = false,
["source"] = "Twilight Obsidian Borer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40019,
},
[76816] = {
["isChanneled"] = false,
["source"] = "Twilight Wyrmcaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39873,
},
[75025] = {
["isChanneled"] = false,
["source"] = "Fiery Tormentor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41396,
},
[31598] = {
["isChanneled"] = false,
["source"] = "Wildspawn Hellcaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11457,
},
[88075] = {
["isChanneled"] = false,
["source"] = "Cloud Prince",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45917,
},
[73874] = {
["encounterName"] = "Rajh",
["type"] = "DEBUFF",
["source"] = "Rajh",
["npcID"] = 39378,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 1078,
},
[25809] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Viper",
["npcID"] = 19921,
},
[57807] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Twisted Visage",
["npcID"] = 30623,
},
[6984] = {
["isChanneled"] = false,
["source"] = "Razorfen Beast Trainer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4531,
},
[81039] = {
["isChanneled"] = false,
["source"] = "Irradiated Slime",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 6218,
},
[58127] = {
["isChanneled"] = false,
["source"] = "Servant of Asaad",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45926,
},
[89739] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["encounterID"] = 1060,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47739,
},
[92426] = {
["encounterName"] = "Ozruk",
["source"] = "Ozruk",
["npcID"] = 42188,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1058,
},
[84494] = {
["isChanneled"] = false,
["source"] = "Aeosera",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43641,
},
[52626] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Emissary of Flame",
["npcID"] = 40755,
},
[75539] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Rom'ogg Bonecrusher",
["encounterID"] = 1040,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39665,
},
[69526] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Subjugated Inferno Lord",
["npcID"] = 40093,
},
[3589] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shrieking Banshee",
["npcID"] = 10463,
},
[82320] = {
["encounterName"] = "High Prophet Barim",
["source"] = "High Prophet Barim",
["encounterID"] = 1053,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43612,
},
[76307] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Mindbender Ghur'sha",
["encounterID"] = 1046,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40788,
},
[90764] = {
["encounterName"] = "Forgemaster Throngus",
["type"] = "DEBUFF",
["source"] = "Forgemaster Throngus",
["encounterID"] = 1050,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 40177,
},
[86798] = {
["isChanneled"] = false,
["source"] = "Elemental Overseer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45084,
},
[3621] = {
["isChanneled"] = false,
["source"] = "Skullsplitter Hunter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 669,
},
[22835] = {
["isChanneled"] = false,
["source"] = "Stomper Kreeg",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 14322,
},
[20820] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Scarlet Adept",
["npcID"] = 4296,
},
[93707] = {
["encounterName"] = "Lord Godfrey",
["source"] = "Lord Godfrey",
["npcID"] = 46964,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1072,
},
[22995] = {
["isChanneled"] = false,
["source"] = "Prince Tortheldrin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11486,
},
[75668] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Emerald Drake",
["npcID"] = 40025,
},
[79890] = {
["isChanneled"] = false,
["source"] = "Braddok",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42858,
},
[88974] = {
["encounterName"] = "Helix Gearbreaker",
["source"] = "Sticky Bomb",
["encounterID"] = 1065,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47314,
},
[76820] = {
["isChanneled"] = false,
["source"] = "Naz'jar Spiritmender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41096,
},
[83089] = {
["encounterName"] = "Siamat",
["type"] = "DEBUFF",
["source"] = "Siamat",
["encounterID"] = 1055,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 44819,
},
[25810] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Venomous Snake",
["npcID"] = 19833,
},
[76693] = {
["source"] = "Empowering Flames",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 41045,
},
[81171] = {
["encounterName"] = "Cho'gall",
["source"] = "Cho'gall",
["npcID"] = 43324,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[93581] = {
["encounterName"] = "Baron Ashbury",
["source"] = "Baron Ashbury",
["npcID"] = 46962,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1069,
},
[88080] = {
["isChanneled"] = false,
["source"] = "Whipping Wind",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47238,
},
[18070] = {
["isChanneled"] = false,
["source"] = "Earthborer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11320,
},
[15228] = {
["isChanneled"] = false,
["source"] = "Wildspawn Hellcaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11457,
},
[76822] = {
["isChanneled"] = false,
["source"] = "Twilight War-Mage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40268,
},
[87185] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gordok Captain",
["npcID"] = 11445,
},
[22356] = {
["isChanneled"] = false,
["source"] = "Phase Lasher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 13196,
},
[103817] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rising Fire Totem",
["npcID"] = 55474,
},
[77334] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Air Warden",
["npcID"] = 39803,
},
[81556] = {
["encounterName"] = "Cho'gall",
["source"] = "Cho'gall",
["npcID"] = 43324,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[75543] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Rom'ogg Bonecrusher",
["encounterID"] = 1040,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39665,
},
[13341] = {
["isChanneled"] = false,
["source"] = "Enraged Fire Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46261,
},
[16567] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Cursed Mage",
["npcID"] = 8524,
},
[86930] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["encounterID"] = 1042,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43875,
},
[89105] = {
["isChanneled"] = false,
["source"] = "Lurking Tempest",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45704,
},
[91408] = {
["isChanneled"] = false,
["source"] = "Augh",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 49045,
},
[15548] = {
["isChanneled"] = false,
["source"] = "Overlord Ramtusk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4420,
},
[16791] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Magistrate Barthilas",
["npcID"] = 10435,
},
[15580] = {
["isChanneled"] = false,
["source"] = "Wildspawn Satyr",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11451,
},
[81685] = {
["encounterName"] = "Cho'gall",
["source"] = "Corrupting Adherent",
["npcID"] = 43622,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[88082] = {
["encounterName"] = "Cho'gall",
["source"] = "Mirror Image",
["npcID"] = 47244,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[58514] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Stormwind City Patroller",
["npcID"] = 1976,
},
[76184] = {
["encounterName"] = "Anraphet",
["source"] = "Anraphet",
["npcID"] = 39788,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1075,
},
[50518] = {
["source"] = "Ravager",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 16932,
},
[101260] = {
["isChanneled"] = false,
["source"] = "Darkmoon Faire Mystic Mage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 54334,
},
[23380] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nordrassil Druid",
["npcID"] = 40956,
},
[83861] = {
["isChanneled"] = false,
["source"] = "Stonescale Matriarch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44148,
},
[79895] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Grik'nir the Cold",
["npcID"] = 808,
},
[80151] = {
["isChanneled"] = false,
["source"] = "Stonecore Magmalord",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42789,
},
[76185] = {
["encounterName"] = "Ascendant Lord Obsidius",
["source"] = "Ascendant Lord Obsidius",
["encounterID"] = 1036,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39705,
},
[7992] = {
["source"] = "Celebrian Dryad",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 11793,
},
[21749] = {
["isChanneled"] = false,
["source"] = "Phase Lasher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 13196,
},
[95248] = {
["encounterName"] = "High Prophet Barim",
["source"] = "Blaze of the Heavens",
["encounterID"] = 1053,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48906,
},
[8040] = {
["isChanneled"] = false,
["source"] = "Lady Anacondra",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3671,
},
[88084] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mirror Image",
["npcID"] = 47243,
},
[84118] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frostmane Snowstrider",
["npcID"] = 41122,
},
[16172] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ghoul Ravener",
["npcID"] = 10406,
},
[76186] = {
["encounterName"] = "Ascendant Lord Obsidius",
["source"] = "Ascendant Lord Obsidius",
["npcID"] = 39705,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1036,
},
[76314] = {
["isChanneled"] = false,
["source"] = "Crimsonborne Seer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39405,
},
[82839] = {
["isChanneled"] = false,
["source"] = "Deepstone Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43026,
},
[76826] = {
["isChanneled"] = false,
["source"] = "Twilight War-Mage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40268,
},
[38557] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frostmane Scout",
["npcID"] = 41175,
},
[22421] = {
["isChanneled"] = false,
["source"] = "Hydrospawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 13280,
},
[34655] = {
["source"] = "Viper",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 19921,
},
[16380] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Eye of Naxxramas",
["npcID"] = 42973,
},
[77978] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Patchwork Horror",
["npcID"] = 10414,
},
[8272] = {
["isChanneled"] = false,
["source"] = "Razorfen Earthbreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4525,
},
[22709] = {
["isChanneled"] = false,
["source"] = "Lethtendris",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 14327,
},
[82840] = {
["source"] = "Deepstone Elemental",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 43026,
},
[74780] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Star Shard",
["npcID"] = 40106,
},
[74908] = {
["encounterName"] = "Forgemaster Throngus",
["type"] = "BUFF",
["source"] = "Forgemaster Throngus",
["encounterID"] = 1050,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 40177,
},
[20822] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skeletal Frostweaver",
["npcID"] = 7341,
},
[81305] = {
["isChanneled"] = false,
["source"] = "Stone Trogg Rockmagus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43652,
},
[91668] = {
["isChanneled"] = false,
["source"] = "Unstable Ravager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47136,
},
[16856] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lord Aurius Rivendare",
["npcID"] = 45412,
},
[12542] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gordok Captain",
["npcID"] = 11445,
},
[31281] = {
["isChanneled"] = false,
["source"] = "Living Blood",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43123,
},
[76188] = {
["encounterName"] = "Ascendant Lord Obsidius",
["source"] = "Ascendant Lord Obsidius",
["encounterID"] = 1036,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39705,
},
[76572] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Twilight Sadist",
["encounterID"] = 1040,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39980,
},
[82841] = {
["isChanneled"] = false,
["source"] = "Deepstone Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43026,
},
[23381] = {
["isChanneled"] = false,
["source"] = "Riverpaw Shaman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46252,
},
[81306] = {
["isChanneled"] = false,
["source"] = "Stone Trogg Rockmagus",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43652,
},
[91797] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Gravebreaker",
["npcID"] = 26125,
},
[81690] = {
["encounterName"] = "Lockmaw",
["source"] = "Lockmaw",
["encounterID"] = 1054,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43614,
},
[76189] = {
["encounterName"] = "Ascendant Lord Obsidius",
["type"] = "DEBUFF",
["source"] = "Shadow of Obsidius",
["npcID"] = 40817,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 1036,
},
[10831] = {
["isChanneled"] = false,
["source"] = "Arcane Nullifier X-21",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 6232,
},
[86808] = {
["isChanneled"] = false,
["source"] = "Living Blood",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43123,
},
[77085] = {
["source"] = "Twilight Juggernaut",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 41031,
},
[89751] = {
["encounterName"] = "Cho'gall",
["source"] = "Chinilrike",
["npcID"] = 17252,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[81947] = {
["encounterName"] = "High Prophet Barim",
["source"] = "High Prophet Barim",
["encounterID"] = 1053,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43612,
},
[80028] = {
["encounterName"] = "Corborus",
["source"] = "Rock Borer",
["npcID"] = 43917,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1056,
},
[74143] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spawn of Smolderos",
["npcID"] = 39659,
},
[18072] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gordok Brute",
["npcID"] = 11441,
},
[91415] = {
["isChanneled"] = false,
["source"] = "Augh",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 49045,
},
[22422] = {
["isChanneled"] = false,
["source"] = "Massive Geyser",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 14122,
},
[93974] = {
["source"] = "Hand of Gul'dan",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 46157,
},
[9232] = {
["isChanneled"] = false,
["source"] = "High Inquisitor Whitemane",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3977,
},
[84123] = {
["isChanneled"] = false,
["source"] = "Oathsworn Scorpid Keeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45062,
},
[84507] = {
["source"] = "Naz'jar Invader",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 39616,
},
[86810] = {
["isChanneled"] = false,
["source"] = "Maziel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44967,
},
[91032] = {
["isChanneled"] = false,
["source"] = "Mine Bunny",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48338,
},
[15501] = {
["isChanneled"] = false,
["source"] = "Razorfen Earthbreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4525,
},
[20791] = {
["isChanneled"] = false,
["source"] = "Searing Blade Warlock",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11324,
},
[20823] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Death's Head Geomancer",
["npcID"] = 7335,
},
[16793] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Magistrate Barthilas",
["npcID"] = 10435,
},
[91800] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Gravebreaker",
["npcID"] = 26125,
},
[93975] = {
["source"] = "Hand of Gul'dan",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 46157,
},
[18968] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Eldreth Seether",
["npcID"] = 11469,
},
[80158] = {
["isChanneled"] = false,
["source"] = "Stonecore Warbringer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42696,
},
[90905] = {
["isChanneled"] = false,
["source"] = "Defias Pirate",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48522,
},
[11647] = {
["isChanneled"] = false,
["source"] = "High Inquisitor Fairbanks",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4542,
},
[31602] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerub'enkan",
["npcID"] = 10437,
},
[93720] = {
["encounterName"] = "Baron Ashbury",
["source"] = "Baron Ashbury",
["encounterID"] = 1069,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46962,
},
[91801] = {
["isChanneled"] = false,
["source"] = "Wailing Guardsman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3877,
},
[53273] = {
["isChanneled"] = false,
["source"] = "Brown Rabbit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 29134,
},
[84125] = {
["isChanneled"] = false,
["source"] = "Bonesnapper Scorpid",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45063,
},
[53401] = {
["isChanneled"] = false,
["source"] = "Ghostkingler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 50051,
},
[21655] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lord Vyletongue",
["npcID"] = 12236,
},
[21687] = {
["isChanneled"] = false,
["source"] = "Noxxion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 13282,
},
[23766] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sayge",
["npcID"] = 14822,
},
[91034] = {
["isChanneled"] = false,
["source"] = "Goblin Overseer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48279,
},
[4962] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerub'enkan",
["npcID"] = 10437,
},
[81439] = {
["isChanneled"] = false,
["source"] = "Millhouse Manastorm",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43391,
},
[7057] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Haunted Servitor",
["npcID"] = 3875,
},
[78113] = {
["source"] = "Twilight Dragonkin",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 41029,
},
[74787] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thol'embaar Summon Bunny",
["npcID"] = 40121,
},
[91291] = {
["isChanneled"] = false,
["source"] = "Haunted Servitor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3875,
},
[91419] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spitebone Skeleton",
["npcID"] = 47143,
},
[81440] = {
["isChanneled"] = false,
["source"] = "Millhouse Manastorm",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43391,
},
[81568] = {
["isChanneled"] = false,
["source"] = "Stonecore Berserker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43430,
},
[75683] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["encounterID"] = 1045,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40586,
},
[78114] = {
["isChanneled"] = false,
["source"] = "Twilight Dragonkin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41029,
},
[8257] = {
["isChanneled"] = false,
["source"] = "Venomlash Scorpid",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 7022,
},
[86814] = {
["isChanneled"] = false,
["source"] = "Riverpaw Basher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46248,
},
[91036] = {
["isChanneled"] = false,
["source"] = "Goblin Overseer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48279,
},
[74788] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thol'embaar",
["npcID"] = 40107,
},
[76963] = {
["isChanneled"] = false,
["source"] = "Wormwing Screecher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41027,
},
[20824] = {
["isChanneled"] = false,
["source"] = "Razorfen Geomancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4520,
},
[8385] = {
["source"] = "Farseer Nobundo",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17204,
},
[81441] = {
["isChanneled"] = false,
["source"] = "Millhouse Manastorm",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43391,
},
[89757] = {
["isChanneled"] = false,
["source"] = "Defias Cannon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48266,
},
[83872] = {
["source"] = "Zen'Kiki",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 44904,
},
[84256] = {
["isChanneled"] = false,
["source"] = "Oathsworn Axemaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44922,
},
[84768] = {
["encounterName"] = "Lockmaw",
["type"] = "DEBUFF",
["source"] = "Augh",
["encounterID"] = 1054,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 45379,
},
[93468] = {
["encounterName"] = "Baron Ashbury",
["source"] = "Baron Ashbury",
["encounterID"] = 1069,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46962,
},
[81314] = {
["isChanneled"] = false,
["source"] = "Verlok Basilisk Rider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42711,
},
[91677] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pustulant Monstrosity",
["npcID"] = 47138,
},
[93852] = {
["encounterName"] = "Commander Springvale",
["source"] = "Commander Springvale",
["encounterID"] = 1071,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4278,
},
[23511] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Iceblood Warmaster",
["npcID"] = 14773,
},
[96283] = {
["encounterName"] = "Vanessa VanCleef",
["source"] = "Vanessa VanCleef",
["encounterID"] = 1081,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 49541,
},
[53403] = {
["encounterName"] = "Cho'gall",
["type"] = "BUFF",
["source"] = "Wolf",
["npcID"] = 17280,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 1029,
},
[76325] = {
["isChanneled"] = false,
["source"] = "Twilight Flame Caller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39708,
},
[23735] = {
["source"] = "Sayge",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 14822,
},
[23767] = {
["source"] = "Sayge",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 14822,
},
[91038] = {
["isChanneled"] = false,
["source"] = "Mining Monkey",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48441,
},
[88352] = {
["encounterName"] = "Helix Gearbreaker",
["source"] = "Helix Gearbreaker",
["encounterID"] = 1065,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47296,
},
[50461] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Anti-Magic Zone",
["npcID"] = 28306,
},
[88736] = {
["source"] = "Admiral Ripsnarl",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 47626,
},
[86817] = {
["isChanneled"] = false,
["source"] = "Twilight Duskwarden",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42917,
},
[74663] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Injured Fawn",
["npcID"] = 40000,
},
[18266] = {
["isChanneled"] = false,
["source"] = "Searing Blade Cultist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11322,
},
[91807] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Beetlestalker",
["npcID"] = 26125,
},
[53148] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Riktor",
["npcID"] = 33776,
},
[88097] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sun-Touched Servant",
["npcID"] = 39366,
},
[20537] = {
["isChanneled"] = false,
["source"] = "Prince Tortheldrin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11486,
},
[88481] = {
["encounterName"] = "Foe Reaper 5000",
["source"] = "Foe Reaper 5000",
["encounterID"] = 1063,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43778,
},
[88737] = {
["encounterName"] = "Admiral Ripsnarl",
["type"] = "BUFF",
["source"] = "Admiral Ripsnarl",
["encounterID"] = 1062,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 47626,
},
[76583] = {
["isChanneled"] = false,
["source"] = "Twilight Zealot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39990,
},
[76711] = {
["isChanneled"] = false,
["source"] = "Twilight Beguiler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40167,
},
[20793] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Surena Caledon",
["npcID"] = 881,
},
[20825] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Death's Head Necromancer",
["npcID"] = 7337,
},
[81317] = {
["isChanneled"] = false,
["source"] = "Troggzor the Earthinator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43456,
},
[16827] = {
["isChanneled"] = false,
["source"] = "Ghostkingler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 50051,
},
[80038] = {
["isChanneled"] = false,
["source"] = "Stonecore Magmalord",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42789,
},
[76200] = {
["encounterName"] = "Ascendant Lord Obsidius",
["type"] = "BUFF",
["source"] = "Ascendant Lord Obsidius",
["npcID"] = 39705,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 1036,
},
[23224] = {
["encounterName"] = "Baron Silverlaine",
["source"] = "Baron Silverlaine",
["npcID"] = 3887,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1070,
},
[76584] = {
["isChanneled"] = false,
["source"] = "Twilight Zealot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39990,
},
[21337] = {
["isChanneled"] = false,
["source"] = "Deeprot Tangler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 13142,
},
[77224] = {
["isChanneled"] = false,
["source"] = "Twilight Juggernaut",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41031,
},
[17307] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ramstein the Gorger",
["npcID"] = 10439,
},
[81574] = {
["isChanneled"] = false,
["source"] = "Stonecore Berserker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43430,
},
[77736] = {
["isChanneled"] = false,
["source"] = "Child of Tortolla",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41581,
},
[75817] = {
["isChanneled"] = false,
["source"] = "Corla, Herald of Twilight",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39679,
},
[19514] = {
["source"] = "Wormwing Swifttalon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 41028,
},
[23736] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sayge",
["npcID"] = 14822,
},
[23768] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sayge",
["npcID"] = 14822,
},
[80807] = {
["encounterName"] = "Slabhide",
["source"] = "Slabhide",
["encounterID"] = 1059,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43214,
},
[55964] = {
["isChanneled"] = false,
["source"] = "Randolph Moloch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46383,
},
[91554] = {
["isChanneled"] = false,
["source"] = "Fetid Ghoul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47135,
},
[8041] = {
["isChanneled"] = false,
["source"] = "Druid of the Fang",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3840,
},
[93857] = {
["encounterName"] = "Baron Silverlaine",
["source"] = "Baron Silverlaine",
["npcID"] = 3887,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1070,
},
[88100] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sun-Touched Sprite",
["npcID"] = 39369,
},
[78121] = {
["isChanneled"] = false,
["source"] = "Twilight Dragonkin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41029,
},
[89252] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["encounterID"] = 1060,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47739,
},
[81576] = {
["isChanneled"] = false,
["source"] = "Stonecore Earthshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43537,
},
[6146] = {
["isChanneled"] = false,
["source"] = "Scarlet Sorcerer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4294,
},
[86182] = {
["source"] = "Rohash",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 45872,
},
[8242] = {
["isChanneled"] = false,
["source"] = "Searing Blade Enforcer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11323,
},
[8258] = {
["isChanneled"] = false,
["source"] = "Scarlet Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4292,
},
[8274] = {
["isChanneled"] = false,
["source"] = "Razorfen Beast Trainer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4531,
},
[22713] = {
["isChanneled"] = false,
["source"] = "Pimgib",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 14349,
},
[76715] = {
["isChanneled"] = false,
["source"] = "Twilight Beguiler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40167,
},
[3110] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unknown",
["npcID"] = 416,
},
[12480] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Jammal'an the Prophet",
["npcID"] = 5710,
},
[43939] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Valgarde Priest",
["npcID"] = 24099,
},
[12544] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mosh'Ogg Spellcrafter",
["npcID"] = 710,
},
[33832] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dread Scryer",
["npcID"] = 47141,
},
[76332] = {
["isChanneled"] = false,
["source"] = "Crimsonborne Seer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39405,
},
[76460] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Emerald Drake",
["npcID"] = 40025,
},
[76588] = {
["isChanneled"] = false,
["source"] = "Twilight Zealot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39990,
},
[91045] = {
["isChanneled"] = false,
["source"] = "Ogre Henchman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48230,
},
[81194] = {
["encounterName"] = "Cho'gall",
["type"] = "BUFF",
["source"] = "Fire Elemental",
["npcID"] = 43406,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 1029,
},
[89766] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Okinkilig",
["npcID"] = 17252,
},
[81706] = {
["encounterName"] = "Lockmaw",
["source"] = "Lockmaw",
["encounterID"] = 1054,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43614,
},
[31765] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earthcaller Yevaa",
["npcID"] = 42573,
},
[19579] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 8764,
},
[84521] = {
["encounterName"] = "Siamat",
["source"] = "Servant of Siamat",
["encounterID"] = 1055,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45259,
},
[19643] = {
["isChanneled"] = false,
["source"] = "Hyjal Warden",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 38915,
},
[76589] = {
["isChanneled"] = false,
["source"] = "Twilight Zealot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39990,
},
[76717] = {
["isChanneled"] = false,
["source"] = "Defiled Earth Rager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40023,
},
[3242] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Unstable Ravager",
["npcID"] = 47136,
},
[75054] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Shadow of Obsidius",
["npcID"] = 40817,
},
[15039] = {
["isChanneled"] = false,
["source"] = "Earthen Ring Shaman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44998,
},
[15087] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Putridus Shadowstalker",
["npcID"] = 11792,
},
[33833] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dread Scryer",
["npcID"] = 47141,
},
[58461] = {
["isChanneled"] = false,
["source"] = "Twilight Laborer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42924,
},
[76590] = {
["isChanneled"] = false,
["source"] = "Faceless Watcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40936,
},
[76718] = {
["isChanneled"] = false,
["source"] = "Incendiary Spark",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40021,
},
[87081] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Anvilrage Overseer",
["npcID"] = 8889,
},
[91303] = {
["encounterName"] = "Cho'gall",
["source"] = "Cho'gall",
["npcID"] = 43324,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[22426] = {
["isChanneled"] = false,
["source"] = "Warpwood Crusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 13021,
},
[87721] = {
["source"] = "Grounding Field",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 47085,
},
[85802] = {
["isChanneled"] = false,
["source"] = "Stonescale Matriarch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44148,
},
[75823] = {
["encounterName"] = "Corla, Herald of Twilight",
["source"] = "Corla, Herald of Twilight",
["npcID"] = 39679,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1038,
},
[76335] = {
["source"] = "Crimsonborne Seer",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 39405,
},
[22714] = {
["isChanneled"] = false,
["source"] = "Hydrospawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 13280,
},
[76591] = {
["isChanneled"] = false,
["source"] = "Twilight Zealot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39990,
},
[76719] = {
["isChanneled"] = false,
["source"] = "Incendiary Spark",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40021,
},
[75056] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["encounterID"] = 1050,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40177,
},
[22938] = {
["isChanneled"] = false,
["source"] = "Twilight Binder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44619,
},
[89769] = {
["isChanneled"] = false,
["source"] = "Mining Powder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48284,
},
[15615] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gordok Brute",
["npcID"] = 11441,
},
[75824] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Twilight Enforcer",
["npcID"] = 39749,
},
[78127] = {
["source"] = "Twilight Dragonkin Armorer",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 41030,
},
[88490] = {
["encounterName"] = "Foe Reaper 5000",
["source"] = "Foe Reaper 5000",
["encounterID"] = 1063,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43778,
},
[76592] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Twilight Zealot",
["npcID"] = 39990,
},
[19196] = {
["isChanneled"] = false,
["source"] = "Lava Surger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46911,
},
[13728] = {
["isChanneled"] = false,
["source"] = "Avalanchion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44372,
},
[91561] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fetid Ghoul",
["npcID"] = 47135,
},
[75441] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Twilight Sadist",
["encounterID"] = 1040,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40447,
},
[75569] = {
["encounterName"] = "General Umbriss",
["source"] = "Faceless Corruptor",
["encounterID"] = 1051,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39392,
},
[75697] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Twilight Zealot",
["npcID"] = 50284,
},
[78128] = {
["isChanneled"] = false,
["source"] = "Twilight Dragonkin Armorer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41030,
},
[23738] = {
["source"] = "Sayge",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 14822,
},
[63900] = {
["isChanneled"] = false,
["source"] = "Bear",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 26482,
},
[76721] = {
["isChanneled"] = false,
["source"] = "Naz'jar Sentinel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40577,
},
[21787] = {
["source"] = "Thessala Hydra",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 12207,
},
[39592] = {
["isChanneled"] = false,
["source"] = "Summoned Searing Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 22895,
},
[11969] = {
["isChanneled"] = false,
["source"] = "Galgann Firehammer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 7291,
},
[11985] = {
["isChanneled"] = false,
["source"] = "Young Stone Drake",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44038,
},
[879] = {
["isChanneled"] = false,
["source"] = "Mercurial Ooze",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43158,
},
[81711] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Unbound Earth Rager",
["npcID"] = 43662,
},
[16143] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Mangled Cadaver",
["npcID"] = 10382,
},
[78129] = {
["isChanneled"] = false,
["source"] = "Twilight Dragonkin Armorer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41030,
},
[7074] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wailing Guardsman",
["npcID"] = 3877,
},
[76594] = {
["isChanneled"] = false,
["source"] = "Twilight Zealot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39990,
},
[91563] = {
["isChanneled"] = false,
["source"] = "Sorcerous Skeleton",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47140,
},
[30615] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stone Sleeper",
["npcID"] = 3870,
},
[7154] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sandfury Soul Eater",
["npcID"] = 7247,
},
[75571] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Rom'ogg Bonecrusher",
["encounterID"] = 1040,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39665,
},
[10258] = {
["isChanneled"] = false,
["source"] = "Archaedas",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 2748,
},
[8259] = {
["isChanneled"] = false,
["source"] = "Razorfen Spearhide",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4438,
},
[76339] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Mindbender Ghur'sha",
["encounterID"] = 1046,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40788,
},
[80561] = {
["isChanneled"] = false,
["source"] = "Charbringer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40336,
},
[77235] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earth Warden",
["npcID"] = 39801,
},
[424340] = {
["encounterName"] = "Cho'gall",
["source"] = "Greater Fire Elemental",
["npcID"] = 15438,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[87854] = {
["encounterName"] = "Asaad",
["source"] = "Skyfall Star",
["encounterID"] = 1042,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 52019,
},
[77747] = {
["encounterName"] = "Cho'gall",
["type"] = "BUFF",
["source"] = "Fire Elemental Totem",
["npcID"] = 15439,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 1029,
},
[79922] = {
["isChanneled"] = false,
["source"] = "Stonecore Flayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42808,
},
[76596] = {
["isChanneled"] = false,
["source"] = "Twilight Earthshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39890,
},
[91053] = {
["isChanneled"] = false,
["source"] = "Ogre Bodyguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48262,
},
[80563] = {
["isChanneled"] = false,
["source"] = "Agitated Tunneler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43031,
},
[35244] = {
["isChanneled"] = false,
["source"] = "Fungal Terror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43954,
},
[89263] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["encounterID"] = 1060,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47739,
},
[81459] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stonecore Earthshaper",
["npcID"] = 43537,
},
[80180] = {
["isChanneled"] = false,
["source"] = "Stonecore Bruiser",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42692,
},
[84402] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ragnaros",
["npcID"] = 41634,
},
[80564] = {
["encounterName"] = "Lady Naz'jar",
["type"] = "DEBUFF",
["source"] = "Lady Naz'jar",
["encounterID"] = 1045,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 40586,
},
[74551] = {
["isChanneled"] = false,
["source"] = "Twilight Firecatcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39870,
},
[15248] = {
["isChanneled"] = false,
["source"] = "Riverpaw Looter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46251,
},
[3826] = {
["source"] = "Ward of Laze",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 2667,
},
[75447] = {
["source"] = "QT",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 21723,
},
[79797] = {
["isChanneled"] = false,
["source"] = "Earthcaller Torunscar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42730,
},
[34925] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Nexus Terror",
["npcID"] = 19307,
},
[90928] = {
["isChanneled"] = false,
["source"] = "Defias Enforcer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48502,
},
[76727] = {
["isChanneled"] = false,
["source"] = "Twilight Armsmaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41073,
},
[22876] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wandering Eye of Kilrogg",
["npcID"] = 14386,
},
[87474] = {
["encounterName"] = "Asaad",
["type"] = "BUFF",
["source"] = "Grounding Field",
["encounterID"] = 1042,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 47000,
},
[22940] = {
["isChanneled"] = false,
["source"] = "Residual Monstrosity",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11484,
},
[9459] = {
["source"] = "Corrosive Lurker",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 6219,
},
[80182] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mosh'Ogg Mauler",
["npcID"] = 678,
},
[19134] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Captain Kromcrush",
["npcID"] = 14325,
},
[90929] = {
["isChanneled"] = false,
["source"] = "Defias Enforcer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48502,
},
[15744] = {
["isChanneled"] = false,
["source"] = "Searing Destroyer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46260,
},
[78903] = {
["encounterName"] = "Ozruk",
["source"] = "Ozruk",
["encounterID"] = 1058,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42188,
},
[13729] = {
["isChanneled"] = false,
["source"] = "Fiery Tormentor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41396,
},
[83381] = {
["isChanneled"] = false,
["source"] = "Ghostkingler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 50051,
},
[87859] = {
["encounterName"] = "Glubtok",
["source"] = "Glubtok",
["encounterID"] = 1064,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47162,
},
[79927] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stonesplinter Geomancer",
["npcID"] = 1165,
},
[76473] = {
["isChanneled"] = false,
["source"] = "Twilight Flame Caller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39708,
},
[76729] = {
["isChanneled"] = false,
["source"] = "Twilight Armsmaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41073,
},
[78904] = {
["isChanneled"] = false,
["source"] = "Crag Boar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47311,
},
[74938] = {
["encounterName"] = "Temple Guardian Anhuur",
["source"] = "Temple Guardian Anhuur",
["npcID"] = 39425,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1080,
},
[77241] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flame Warden",
["npcID"] = 39800,
},
[11986] = {
["isChanneled"] = false,
["source"] = "Skullsplitter Spiritchaser",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 672,
},
[62305] = {
["isChanneled"] = false,
["source"] = "Ghostkingler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 50051,
},
[48168] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Matron Alesso",
["npcID"] = 50163,
},
[14145] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gordok Mage-Lord",
["npcID"] = 11444,
},
[86581] = {
["isChanneled"] = false,
["source"] = "Jadecrest Basilisk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43981,
},
[89652] = {
["isChanneled"] = false,
["source"] = "Ogre Henchman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48230,
},
[12258] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skeletal Summoner",
["npcID"] = 7342,
},
[77626] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Enslaved Alliance Mage",
["npcID"] = 41527,
},
[24604] = {
["encounterName"] = "Cho'gall",
["source"] = "Wolf",
["npcID"] = 17280,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[16448] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Plagued Rat",
["npcID"] = 10441,
},
[8260] = {
["isChanneled"] = false,
["source"] = "Herod",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3975,
},
[86582] = {
["isChanneled"] = false,
["source"] = "Scalesworn Cultist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44221,
},
[8292] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Grimlok",
["npcID"] = 4854,
},
[30937] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Shadowmoon Channeler",
["npcID"] = 17653,
},
[20798] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sandfury Cretin",
["npcID"] = 7789,
},
[12466] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mordresh Fire Eye",
["npcID"] = 7357,
},
[77627] = {
["isChanneled"] = false,
["source"] = "Twilight Scorchlord",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41500,
},
[31289] = {
["isChanneled"] = false,
["source"] = "Shadowmaw Panther",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 684,
},
[6307] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bizmat",
["npcID"] = 416,
},
[38254] = {
["source"] = "Spirit Raven",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 21324,
},
[76604] = {
["isChanneled"] = false,
["source"] = "Faceless Watcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40936,
},
[55078] = {
["source"] = "Rune Weapon",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 27893,
},
[76093] = {
["source"] = "Ascended Rockbreaker",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 40272,
},
[82362] = {
["isChanneled"] = false,
["source"] = "Evolved Twilight Zealot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39987,
},
[19615] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Riktor",
["npcID"] = 33776,
},
[19647] = {
["isChanneled"] = false,
["source"] = "Khaajhom",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 417,
},
[8852] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mosshide Basher",
["npcID"] = 44162,
},
[77373] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stone Trogg Brute",
["npcID"] = 40251,
},
[91830] = {
["encounterName"] = "Foe Reaper 5000",
["source"] = "Molten Slag",
["encounterID"] = 1063,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 49229,
},
[35760] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Greater Bogstrok",
["npcID"] = 17817,
},
[76094] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["encounterID"] = 1044,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40765,
},
[76478] = {
["isChanneled"] = false,
["source"] = "Twilight Torturer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39978,
},
[18368] = {
["isChanneled"] = false,
["source"] = "Warpwood Treant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11462,
},
[13298] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Putridus Trickster",
["npcID"] = 11791,
},
[53480] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dan",
["npcID"] = 48442,
},
[90680] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["encounterID"] = 1060,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47739,
},
[91064] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frantic Geist",
["npcID"] = 47131,
},
[37488] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Horrorguard",
["npcID"] = 39724,
},
[95542] = {
["encounterName"] = "Vanessa VanCleef",
["source"] = "Vanessa VanCleef",
["encounterID"] = 1081,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 49541,
},
[75328] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Valiona",
["encounterID"] = 1048,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40320,
},
[9460] = {
["isChanneled"] = false,
["source"] = "Corrosive Lurker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 6219,
},
[23038] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bloodmage Thalnos",
["npcID"] = 4543,
},
[79934] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Examiner Rowe",
["npcID"] = 44823,
},
[31290] = {
["isChanneled"] = false,
["source"] = "Riverpaw Poacher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46250,
},
[33970] = {
["isChanneled"] = false,
["source"] = "Helm's Bed Surger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41762,
},
[74561] = {
["isChanneled"] = false,
["source"] = "Twilight Stormbreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39962,
},
[13730] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rockwing Screecher",
["npcID"] = 10409,
},
[85692] = {
["encounterName"] = "Cho'gall",
["source"] = "Doomguard",
["npcID"] = 11859,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[92857] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Blackrock Spy",
["npcID"] = 49874,
},
[90938] = {
["isChanneled"] = false,
["source"] = "Defias Blood Wizard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48417,
},
[82878] = {
["isChanneled"] = false,
["source"] = "Abyssion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44289,
},
[33395] = {
["isChanneled"] = false,
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 510,
},
[11971] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Anvilrage Guardsman",
["npcID"] = 8891,
},
[14034] = {
["isChanneled"] = false,
["source"] = "Stonevault Geomancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4853,
},
[75842] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Karsh Steelbender",
["npcID"] = 39698,
},
[33907] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Hyjal Protector",
["npcID"] = 52213,
},
[90555] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["encounterID"] = 1060,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47739,
},
[80576] = {
["isChanneled"] = false,
["source"] = "Ashtail",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45380,
},
[76610] = {
["isChanneled"] = false,
["source"] = "Enslaved Rock Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39900,
},
[22271] = {
["isChanneled"] = false,
["source"] = "Fel Lash",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 13197,
},
[52778] = {
["isChanneled"] = false,
["source"] = "Mekgineer Thermaplugg",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 7800,
},
[81216] = {
["isChanneled"] = false,
["source"] = "Millhouse Manastorm",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43391,
},
[84031] = {
["isChanneled"] = false,
["source"] = "Oathsworn Skinner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44981,
},
[90556] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["encounterID"] = 1060,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47739,
},
[5164] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rockjaw Bonesnapper",
["npcID"] = 1117,
},
[78530] = {
["isChanneled"] = false,
["source"] = "Petrified Treant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11458,
},
[76611] = {
["isChanneled"] = false,
["source"] = "Twilight Zealot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39990,
},
[57832] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Twisted Visage",
["npcID"] = 30623,
},
[51755] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Monkey",
["npcID"] = 43050,
},
[91324] = {
["isChanneled"] = false,
["source"] = "Shadowy Attendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47231,
},
[14514] = {
["isChanneled"] = false,
["source"] = "Mana Remnant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11483,
},
[10452] = {
["isChanneled"] = false,
["source"] = "Earthen Stonecarver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 7397,
},
[83776] = {
["isChanneled"] = false,
["source"] = "Pygmy Firebreather",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44898,
},
[84032] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Temple Fireshaper",
["npcID"] = 48143,
},
[76100] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["encounterID"] = 1044,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40765,
},
[12611] = {
["isChanneled"] = false,
["source"] = "Dread Scryer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47141,
},
[84544] = {
["encounterName"] = "Siamat",
["source"] = "Servant of Siamat",
["encounterID"] = 1055,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45268,
},
[82625] = {
["isChanneled"] = false,
["source"] = "Boss Galgosh",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1398,
},
[76612] = {
["isChanneled"] = false,
["source"] = "Twilight Zealot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39990,
},
[91325] = {
["isChanneled"] = false,
["source"] = "Shadowy Attendant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47231,
},
[75077] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Conflagration",
["npcID"] = 39994,
},
[12739] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thuzadin Shadowcaster",
["npcID"] = 10398,
},
[77508] = {
["isChanneled"] = false,
["source"] = "Fiery Tormentor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41396,
},
[59304] = {
["isChanneled"] = false,
["source"] = "Glubtok",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 49670,
},
[79811] = {
["isChanneled"] = false,
["source"] = "Needlerock Mystic",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43995,
},
[31803] = {
["source"] = "Earthen Champion",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 43232,
},
[80195] = {
["isChanneled"] = false,
["source"] = "Stonecore Bruiser",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42692,
},
[78660] = {
["isChanneled"] = false,
["source"] = "Executor of the Caliph",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45928,
},
[80835] = {
["isChanneled"] = false,
["source"] = "Raging Crystal-walker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43373,
},
[81219] = {
["isChanneled"] = false,
["source"] = "Needlerock Rider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43250,
},
[93629] = {
["encounterName"] = "Lord Godfrey",
["source"] = "Lord Godfrey",
["npcID"] = 46964,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1072,
},
[89663] = {
["isChanneled"] = false,
["source"] = "Kobold Digger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48229,
},
[83778] = {
["isChanneled"] = false,
["source"] = "Pygmy Firebreather",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44898,
},
[90047] = {
["isChanneled"] = false,
["source"] = "Defias Envoker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48418,
},
[75846] = {
["encounterName"] = "Karsh Steelbender",
["type"] = "BUFF",
["source"] = "Karsh Steelbender",
["npcID"] = 39698,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 1039,
},
[90559] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["encounterID"] = 1060,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47739,
},
[58729] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Dwarven Spirit Guide",
["npcID"] = 31842,
},
[82883] = {
["isChanneled"] = false,
["source"] = "Abyssion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44289,
},
[81220] = {
["isChanneled"] = false,
["source"] = "Millhouse Manastorm",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43391,
},
[32731] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spitebone Flayer",
["npcID"] = 47146,
},
[84163] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Energized Geode",
["npcID"] = 43254,
},
[90560] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["encounterID"] = 1060,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47739,
},
[80453] = {
["isChanneled"] = false,
["source"] = "Agitated Tunneler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43031,
},
[76487] = {
["isChanneled"] = false,
["source"] = "Twilight Torturer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39978,
},
[7739] = {
["isChanneled"] = false,
["source"] = "Stonevault Flameweaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 7321,
},
[84931] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["encounterID"] = 1046,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40825,
},
[83012] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Vale Howler",
["npcID"] = 43050,
},
[11428] = {
["isChanneled"] = false,
["source"] = "Wildspawn Betrayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11454,
},
[87618] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["encounterID"] = 1042,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43875,
},
[83780] = {
["isChanneled"] = false,
["source"] = "Pygmy Scout",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44897,
},
[15618] = {
["isChanneled"] = false,
["source"] = "Furious Hyjal Warden",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43427,
},
[21057] = {
["isChanneled"] = false,
["source"] = "Theradrim Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11784,
},
[13619] = {
["source"] = "Twilight's Hammer Torturer",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 8912,
},
[92608] = {
["isChanneled"] = false,
["source"] = "Calissa Harrington",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 49536,
},
[36213] = {
["isChanneled"] = false,
["source"] = "Greater Earth Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 15352,
},
[31516] = {
["isChanneled"] = false,
["source"] = "Twilight Saboteur",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42885,
},
[89538] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Temple Fireshaper",
["npcID"] = 48143,
},
[7947] = {
["isChanneled"] = false,
["source"] = "Deviate Viper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 5755,
},
[86340] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Grand Vizier Ertan",
["encounterID"] = 1043,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43878,
},
[76233] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arch Druid Hamuul Runetotem",
["npcID"] = 41630,
},
[82630] = {
["encounterName"] = "Cho'gall",
["source"] = "Cho'gall",
["npcID"] = 43324,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[76617] = {
["isChanneled"] = false,
["source"] = "Conflagration",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39994,
},
[81095] = {
["source"] = "Red Mist",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 43370,
},
[93505] = {
["encounterName"] = "Lord Walden",
["source"] = "Lord Walden",
["npcID"] = 46963,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1073,
},
[11972] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Anvilrage Warden",
["npcID"] = 8890,
},
[9941] = {
["isChanneled"] = false,
["source"] = "Obsidian Sentinel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 7023,
},
[75722] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["encounterID"] = 1045,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40586,
},
[14099] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Magistrate Barthilas",
["npcID"] = 10435,
},
[76234] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Mindbender Ghur'sha",
["encounterID"] = 1046,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40788,
},
[84550] = {
["encounterName"] = "Siamat",
["type"] = "BUFF",
["source"] = "Minion of Siamat",
["encounterID"] = 1055,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 44704,
},
[76618] = {
["isChanneled"] = false,
["source"] = "Conflagration",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39994,
},
[44530] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Small Crag Boar",
["npcID"] = 708,
},
[8147] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mosh'Ogg Warmonger",
["npcID"] = 709,
},
[95809] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Unknown",
["npcID"] = 26125,
},
[81608] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Stone Trogg Earthrager",
["npcID"] = 43616,
},
[83783] = {
["isChanneled"] = false,
["source"] = "Pygmy Brute",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44896,
},
[10277] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skullsplitter Axe Thrower",
["npcID"] = 696,
},
[78154] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Tharm Wildfire",
["npcID"] = 44350,
},
[8262] = {
["isChanneled"] = false,
["source"] = "Death's Head Sage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4518,
},
[76363] = {
["encounterName"] = "Ozumat",
["source"] = "Unstable Corruption",
["encounterID"] = 1047,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40923,
},
[10341] = {
["isChanneled"] = false,
["source"] = "Irradiated Slime",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 6218,
},
[82760] = {
["isChanneled"] = false,
["source"] = "Neferset Darkcaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44982,
},
[12420] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thuzadin Necromancer",
["npcID"] = 10400,
},
[79050] = {
["encounterName"] = "High Priestess Azil",
["source"] = "High Priestess Azil",
["encounterID"] = 1057,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42333,
},
[8374] = {
["isChanneled"] = false,
["source"] = "Ironaya",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 7228,
},
[87622] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["encounterID"] = 1042,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43875,
},
[3131] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wendigo",
["npcID"] = 40941,
},
[6268] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Withered Warrior",
["npcID"] = 7327,
},
[92100] = {
["isChanneled"] = false,
["source"] = "Vanessa VanCleef",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 49429,
},
[35895] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Garnoth, Fist of the Legion",
["npcID"] = 39726,
},
[90309] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 20931,
},
[72014] = {
["isChanneled"] = false,
["source"] = "Earthcaller Torunscar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42730,
},
[91077] = {
["isChanneled"] = false,
["source"] = "Frantic Geist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47131,
},
[89542] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Temple Fireshaper",
["npcID"] = 48143,
},
[89798] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Lord Victor Nefarius",
["npcID"] = 49799,
},
[83785] = {
["isChanneled"] = false,
["source"] = "Pygmy Brute",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44896,
},
[1604] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["type"] = "DEBUFF",
["source"] = "Angered Earth",
["npcID"] = 50376,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 1040,
},
[82506] = {
["encounterName"] = "High Prophet Barim",
["source"] = "High Prophet Barim",
["encounterID"] = 1053,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43612,
},
[90950] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Valiona",
["encounterID"] = 1048,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40320,
},
[83018] = {
["isChanneled"] = false,
["source"] = "Molten Tormentor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41565,
},
[15043] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gordok Mage-Lord",
["npcID"] = 11444,
},
[77389] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Stone Trogg Rock Flinger",
["npcID"] = 40252,
},
[6524] = {
["isChanneled"] = false,
["source"] = "Stone Steward",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4860,
},
[83914] = {
["encounterName"] = "Ozumat",
["source"] = "Vicious Mindlasher",
["encounterID"] = 1047,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44715,
},
[92614] = {
["encounterName"] = "Vanessa VanCleef",
["source"] = "Vanessa VanCleef",
["encounterID"] = 1081,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 49541,
},
[86729] = {
["isChanneled"] = false,
["source"] = "Randolph Moloch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46383,
},
[90951] = {
["isChanneled"] = false,
["source"] = "Defias Shadowguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48505,
},
[38391] = {
["isChanneled"] = false,
["source"] = "Searing Destroyer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46260,
},
[91463] = {
["isChanneled"] = false,
["source"] = "Tormented Officer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3873,
},
[77262] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Flame Warden",
["npcID"] = 39800,
},
[6660] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Withered Spearhide",
["npcID"] = 7332,
},
[79949] = {
["isChanneled"] = false,
["source"] = "Earthcaller Torunscar",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42730,
},
[47283] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 416,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 1040,
},
[11397] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Withered Spearhide",
["npcID"] = 7332,
},
[15507] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Golem Lord Argelmach",
["npcID"] = 8983,
},
[11445] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Death's Head Necromancer",
["npcID"] = 7337,
},
[22946] = {
["isChanneled"] = false,
["source"] = "Arcane Torrent",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 14399,
},
[25025] = {
["isChanneled"] = false,
["source"] = "War Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44118,
},
[3391] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shade of Eranikus",
["npcID"] = 5709,
},
[88010] = {
["isChanneled"] = false,
["source"] = "Wild Vortex",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45912,
},
[15667] = {
["isChanneled"] = false,
["source"] = "Wildspawn Rogue",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11452,
},
[88522] = {
["encounterName"] = "Foe Reaper 5000",
["source"] = "Foe Reaper 5000",
["encounterID"] = 1063,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43778,
},
[82765] = {
["isChanneled"] = false,
["source"] = "Neferset Darkcaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44982,
},
[17253] = {
["encounterName"] = "Cho'gall",
["source"] = "Wolf",
["npcID"] = 17280,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[9734] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Murta Grimgut",
["npcID"] = 7608,
},
[13860] = {
["isChanneled"] = false,
["source"] = "Needlerock Mystic",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43995,
},
[78160] = {
["isChanneled"] = false,
["source"] = "Sethria",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41255,
},
[9798] = {
["isChanneled"] = false,
["source"] = "Irradiated Pillager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 6329,
},
[86604] = {
["isChanneled"] = false,
["source"] = "Hogger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46254,
},
[76497] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Twilight Sadist",
["encounterID"] = 1040,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39980,
},
[90954] = {
["isChanneled"] = false,
["source"] = "Defias Shadowguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48505,
},
[89547] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Temple Fireshaper",
["npcID"] = 48143,
},
[35706] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Okinkilig",
["npcID"] = 17252,
},
[21987] = {
["isChanneled"] = false,
["source"] = "Whip Lasher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 13022,
},
[77777] = {
["isChanneled"] = false,
["source"] = "Nemesis",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41614,
},
[388127] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Pebble",
["npcID"] = 194870,
},
[76242] = {
["encounterName"] = "Ascendant Lord Obsidius",
["type"] = "BUFF",
["source"] = "Ascendant Lord Obsidius",
["npcID"] = 39705,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 1036,
},
[76370] = {
["isChanneled"] = false,
["source"] = "Azureborne Seer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39855,
},
[86733] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rockslice Flayer",
["npcID"] = 42606,
},
[76626] = {
["isChanneled"] = false,
["source"] = "Azureborne Warlord",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39909,
},
[40504] = {
["isChanneled"] = false,
["source"] = "Razorlash",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 12258,
},
[83151] = {
["encounterName"] = "Siamat",
["source"] = "Siamat",
["encounterID"] = 1055,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44819,
},
[22371] = {
["isChanneled"] = false,
["source"] = "Wildspawn Trickster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11453,
},
[89548] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rune of Healing",
["npcID"] = 39258,
},
[91723] = {
["isChanneled"] = false,
["source"] = "Prototype Reaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 49208,
},
[3583] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Twilight Striker",
["npcID"] = 44808,
},
[102726] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Asira Dawnslayer",
["npcID"] = 54968,
},
[92619] = {
["encounterName"] = "Vanessa VanCleef",
["source"] = "Vanessa VanCleef",
["encounterID"] = 1081,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 49541,
},
[92747] = {
["isChanneled"] = false,
["source"] = "Ogre Henchman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48230,
},
[86734] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rockslice Flayer",
["npcID"] = 42606,
},
[90956] = {
["isChanneled"] = false,
["source"] = "Defias Shadowguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48505,
},
[14516] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Guard Slip'kik",
["npcID"] = 14323,
},
[3639] = {
["isChanneled"] = false,
["source"] = "Scarlet Defender",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4298,
},
[75604] = {
["encounterName"] = "Anraphet",
["source"] = "Anraphet",
["npcID"] = 39788,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1075,
},
[75732] = {
["encounterName"] = "Corla, Herald of Twilight",
["source"] = "Corla, Herald of Twilight",
["encounterID"] = 1038,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39679,
},
[80594] = {
["isChanneled"] = false,
["source"] = "Charbringer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40336,
},
[76628] = {
["isChanneled"] = false,
["source"] = "Buster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40013,
},
[54770] = {
["isChanneled"] = false,
["source"] = "Bonescythe Ravager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28108,
},
[91213] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mindless Horror",
["npcID"] = 47137,
},
[19365] = {
["source"] = "Core Hound",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 11673,
},
[91853] = {
["encounterName"] = "Siamat",
["source"] = "Siamat",
["encounterID"] = 1055,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44819,
},
[75861] = {
["encounterName"] = "Erudax",
["type"] = "DEBUFF",
["source"] = "Erudax",
["encounterID"] = 1049,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 40484,
},
[14900] = {
["isChanneled"] = false,
["source"] = "Aggem Thorncurse",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4424,
},
[5413] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Corruptor",
["npcID"] = 12217,
},
[80467] = {
["encounterName"] = "Ozruk",
["source"] = "Ozruk",
["encounterID"] = 1058,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42188,
},
[86736] = {
["isChanneled"] = false,
["source"] = "Hogger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46254,
},
[90958] = {
["isChanneled"] = false,
["source"] = "Defias Shadowguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48505,
},
[79060] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Tallonkai Swiftroot",
["npcID"] = 3567,
},
[89551] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Temple Runecaster",
["npcID"] = 48140,
},
[91726] = {
["isChanneled"] = false,
["source"] = "Prototype Reaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 49208,
},
[33661] = {
["isChanneled"] = false,
["source"] = "Murkstone Trogg",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44936,
},
[92622] = {
["encounterName"] = "Vanessa VanCleef",
["source"] = "Vanessa VanCleef",
["encounterID"] = 1081,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 49541,
},
[24259] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Fzuugrym",
["npcID"] = 417,
},
[82771] = {
["source"] = "Elemental Gate Credit",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 44931,
},
[3815] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ironspine",
["npcID"] = 6489,
},
[15284] = {
["encounterName"] = "Karsh Steelbender",
["source"] = "Karsh Steelbender",
["encounterID"] = 1039,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39698,
},
[3827] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mosh'Ogg Witch Doctor",
["npcID"] = 1144,
},
[91727] = {
["isChanneled"] = false,
["source"] = "Prototype Reaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 49208,
},
[87761] = {
["isChanneled"] = false,
["source"] = "Executor of the Caliph",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45928,
},
[83795] = {
["isChanneled"] = false,
["source"] = "Haethen Kaul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44835,
},
[22660] = {
["isChanneled"] = false,
["source"] = "Alzzin the Wildshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11492,
},
[86738] = {
["isChanneled"] = false,
["source"] = "Vicious Thug",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46379,
},
[90960] = {
["isChanneled"] = false,
["source"] = "Defias Shadowguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48505,
},
[91088] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Corpse Eater",
["npcID"] = 47134,
},
[14033] = {
["isChanneled"] = false,
["source"] = "High Interrogator Gerstahn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 9018,
},
[20805] = {
["isChanneled"] = false,
["source"] = "Lord Cobrahn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3669,
},
[75096] = {
["isChanneled"] = false,
["source"] = "Twilight Thundercaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40270,
},
[82763] = {
["isChanneled"] = false,
["source"] = "Oathsworn Axemaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44922,
},
[15572] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "King Gordok",
["npcID"] = 11501,
},
[87762] = {
["isChanneled"] = false,
["source"] = "Minister of Air",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45930,
},
[75608] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Twilight Zealot",
["npcID"] = 50284,
},
[12468] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Jammal'an the Prophet",
["npcID"] = 5710,
},
[84052] = {
["isChanneled"] = false,
["source"] = "Abyssion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44289,
},
[75992] = {
["isChanneled"] = false,
["source"] = "Naz'jar Tempest Witch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40634,
},
[14030] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Anvilrage Warden",
["npcID"] = 8890,
},
[90920] = {
["isChanneled"] = false,
["source"] = "Monstrous Parrot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48447,
},
[9775] = {
["source"] = "Irradiated Pillager",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 6329,
},
[50550] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Emerald Drake",
["npcID"] = 40025,
},
[10093] = {
["source"] = "Sand Storm",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 7226,
},
[78807] = {
["encounterName"] = "Ozruk",
["source"] = "Ozruk",
["encounterID"] = 1058,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42188,
},
[15531] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Amnennar the Coldbringer",
["npcID"] = 7358,
},
[12097] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nightmare Wanderer",
["npcID"] = 5283,
},
[93520] = {
["encounterName"] = "Lord Godfrey",
["source"] = "Lord Godfrey",
["npcID"] = 46964,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1072,
},
[89554] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Temple Runecaster",
["npcID"] = 48140,
},
[19366] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Core Hound",
["npcID"] = 11673,
},
[83669] = {
["isChanneled"] = false,
["source"] = "Bluegill Wanderer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44176,
},
[75609] = {
["encounterName"] = "Anraphet",
["source"] = "Anraphet",
["npcID"] = 39788,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1075,
},
[15970] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nightmare Wyrmkin",
["npcID"] = 5280,
},
[7948] = {
["isChanneled"] = false,
["source"] = "Alzzin the Wildshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11492,
},
[12557] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skeletal Guardian",
["npcID"] = 10390,
},
[7964] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lord Vyletongue",
["npcID"] = 12236,
},
[90557] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["encounterID"] = 1060,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47739,
},
[96847] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Toy Cart",
["npcID"] = 52359,
},
[86740] = {
["isChanneled"] = false,
["source"] = "Rowdy Troublemaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46375,
},
[11894] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Antu'sul",
["npcID"] = 8127,
},
[17434] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lord Aurius Rivendare",
["npcID"] = 45412,
},
[80983] = {
["isChanneled"] = false,
["source"] = "Boss Galgosh",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1398,
},
[32064] = {
["source"] = "Ogre Bodyguard",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 44879,
},
[13692] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bloodhound",
["npcID"] = 8921,
},
[89555] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Temple Shadowlancer",
["npcID"] = 48141,
},
[17143] = {
["isChanneled"] = false,
["source"] = "Scarlet Champion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4302,
},
[33663] = {
["isChanneled"] = false,
["source"] = "Earth Elemental Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 15430,
},
[75610] = {
["isChanneled"] = false,
["source"] = "Corla, Herald of Twilight",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39679,
},
[83926] = {
["encounterName"] = "Ozumat",
["source"] = "Vicious Mindlasher",
["encounterID"] = 1047,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44715,
},
[16866] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Venom Belcher",
["npcID"] = 10417,
},
[11980] = {
["isChanneled"] = false,
["source"] = "Mosh'Ogg Witch Doctor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1144,
},
[82263] = {
["encounterName"] = "High Prophet Barim",
["source"] = "Soul Fragment",
["encounterID"] = 1053,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43934,
},
[80344] = {
["isChanneled"] = false,
["source"] = "Imp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43014,
},
[76378] = {
["isChanneled"] = false,
["source"] = "Azureborne Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39854,
},
[80600] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "King Moltron",
["npcID"] = 40998,
},
[76634] = {
["isChanneled"] = false,
["source"] = "Tainted Sentry",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40925,
},
[24187] = {
["isChanneled"] = false,
["source"] = "Dreadsaber",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28001,
},
[31601] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crypt Crawler",
["npcID"] = 10412,
},
[8148] = {
["isChanneled"] = false,
["source"] = "Razorfen Spearhide",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4438,
},
[22373] = {
["isChanneled"] = false,
["source"] = "Warpwood Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11461,
},
[16324] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ravaged Cadaver",
["npcID"] = 10381,
},
[91731] = {
["source"] = "Prototype Reaper",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 49208,
},
[16867] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Baroness Anastari",
["npcID"] = 10436,
},
[73564] = {
["encounterName"] = "Siamat",
["source"] = "Siamat",
["encounterID"] = 1055,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44819,
},
[79833] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Hyjal Protector",
["npcID"] = 52216,
},
[19645] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wailing Banshee",
["npcID"] = 10464,
},
[12550] = {
["isChanneled"] = false,
["source"] = "Arcane Feedback",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 14400,
},
[76246] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ragnaros",
["npcID"] = 41634,
},
[8264] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sandfury Witch Doctor",
["npcID"] = 5650,
},
[22884] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cho'Rush the Observer",
["npcID"] = 14324,
},
[76507] = {
["isChanneled"] = false,
["source"] = "Trogg Dweller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39450,
},
[57780] = {
["isChanneled"] = false,
["source"] = "Earthen Ring Shaman",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44998,
},
[17620] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Maleki the Pallid",
["npcID"] = 10438,
},
[91220] = {
["isChanneled"] = false,
["source"] = "Mindless Horror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47137,
},
[91348] = {
["isChanneled"] = false,
["source"] = "Ghostly Cook",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47232,
},
[12470] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bloodmage Thalnos",
["npcID"] = 4543,
},
[17244] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Baroness Anastari",
["npcID"] = 10436,
},
[6253] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gordok Brute",
["npcID"] = 11441,
},
[83672] = {
["encounterName"] = "Ozumat",
["source"] = "Ozumat",
["encounterID"] = 1047,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44566,
},
[745] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tomb Reaver",
["npcID"] = 7351,
},
[77787] = {
["isChanneled"] = false,
["source"] = "Scarlet Commander Mograine",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3976,
},
[79962] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rulen Lightsreap",
["npcID"] = 50160,
},
[82137] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Rom'ogg Bonecrusher",
["encounterID"] = 1040,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39665,
},
[80218] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Raz the Crazed",
["npcID"] = 39670,
},
[82393] = {
["isChanneled"] = false,
["source"] = "Defiled Earth Rager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39705,
},
[18399] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gordok Mage-Lord",
["npcID"] = 11444,
},
[76508] = {
["isChanneled"] = false,
["source"] = "Crazed Mage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39982,
},
[11086] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Witch Doctor Zum'rah",
["npcID"] = 7271,
},
[80780] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shrieking Banshee",
["npcID"] = 10463,
},
[78939] = {
["encounterName"] = "Ozruk",
["source"] = "Ozruk",
["encounterID"] = 1058,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42188,
},
[11442] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Withered Quilguard",
["npcID"] = 7329,
},
[80850] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thuzadin Necromancer",
["npcID"] = 10400,
},
[12742] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gordok Warlock",
["npcID"] = 11448,
},
[19367] = {
["source"] = "Core Hound",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 11673,
},
[87861] = {
["encounterName"] = "Glubtok",
["source"] = "Glubtok",
["encounterID"] = 1064,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47162,
},
[31713] = {
["isChanneled"] = false,
["source"] = "Scarlet Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4292,
},
[10887] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Magistrate Barthilas",
["npcID"] = 10435,
},
[79963] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Rulen Lightsreap",
["npcID"] = 50160,
},
[37361] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skeletal Guardian",
["npcID"] = 10390,
},
[15471] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Crypt Crawler",
["npcID"] = 10412,
},
[84037] = {
["encounterName"] = "Ozumat",
["source"] = "Neptulon",
["encounterID"] = 1047,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40792,
},
[91009] = {
["isChanneled"] = false,
["source"] = "Defias Miner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48419,
},
[76509] = {
["isChanneled"] = false,
["source"] = "Crazed Mage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39982,
},
[13009] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Amnennar the Coldbringer",
["npcID"] = 7358,
},
[76765] = {
["isChanneled"] = false,
["source"] = "Twilight Firecatcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39870,
},
[74846] = {
["encounterName"] = "General Umbriss",
["source"] = "General Umbriss",
["encounterID"] = 1051,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39625,
},
[32065] = {
["isChanneled"] = false,
["source"] = "Stone Trogg Fungalmancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47184,
},
[30931] = {
["isChanneled"] = false,
["source"] = "Aggem Thorncurse",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4424,
},
[22886] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "King Gordok",
["npcID"] = 11501,
},
[20800] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Jergosh the Invoker",
["npcID"] = 11518,
},
[87768] = {
["isChanneled"] = false,
["source"] = "Minister of Air",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45930,
},
[53602] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Anub'ar Darter",
["npcID"] = 29213,
},
[6533] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Zerillis",
["npcID"] = 10082,
},
[18649] = {
["isChanneled"] = false,
["source"] = "Wildspawn Betrayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11454,
},
[75998] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Honor Guard",
["encounterID"] = 1045,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40633,
},
[36032] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Mirror Image",
["npcID"] = 47243,
},
[16553] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ghoul Ravener",
["npcID"] = 10406,
},
[49966] = {
["isChanneled"] = false,
["source"] = "McLovin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43417,
},
[80604] = {
["isChanneled"] = false,
["source"] = "Tortolla",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40999,
},
[9080] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skeletal Berserker",
["npcID"] = 10391,
},
[35361] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Grove Walker",
["npcID"] = 31228,
},
[52792] = {
["source"] = "Primordial Drake Egg",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 28408,
},
[20295] = {
["isChanneled"] = false,
["source"] = "Lady Anacondra",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3671,
},
[15285] = {
["isChanneled"] = false,
["source"] = "Phase Lasher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 13196,
},
[89560] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Temple Shadowlancer",
["npcID"] = 48141,
},
[55095] = {
["source"] = "Rune Weapon",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 27893,
},
[81628] = {
["encounterName"] = "Cho'gall",
["source"] = "Cho'gall",
["npcID"] = 43324,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[12531] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Frozen Soul",
["npcID"] = 7352,
},
[20831] = {
["isChanneled"] = false,
["source"] = "Mana Remnant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11483,
},
[22662] = {
["isChanneled"] = false,
["source"] = "Alzzin the Wildshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11492,
},
[90328] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Riktor",
["npcID"] = 33776,
},
[80221] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Stonecore Bruiser",
["npcID"] = 42692,
},
[61684] = {
["isChanneled"] = false,
["source"] = "Ghostkingler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 50051,
},
[82524] = {
["encounterName"] = "Cho'gall",
["source"] = "Cho'gall",
["npcID"] = 43324,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[80605] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tortolla",
["npcID"] = 40999,
},
[82780] = {
["source"] = "Twilight Gate Credit",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 44930,
},
[13446] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ravaged Cadaver",
["npcID"] = 10381,
},
[11436] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Death's Head Geomancer",
["npcID"] = 7335,
},
[74976] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["encounterID"] = 1050,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40177,
},
[93527] = {
["encounterName"] = "Lord Walden",
["source"] = "Lord Walden",
["npcID"] = 46963,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1073,
},
[93655] = {
["isChanneled"] = false,
["source"] = "Mekgineer Thermaplugg",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 7800,
},
[15716] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gordok Brute",
["npcID"] = 11441,
},
[15589] = {
["isChanneled"] = false,
["source"] = "Prince Tortheldrin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11486,
},
[81757] = {
["encounterName"] = "Cho'gall",
["source"] = "Corrupting Adherent",
["npcID"] = 43622,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[51725] = {
["isChanneled"] = false,
["source"] = "Arcane Aberration",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11480,
},
[84867] = {
["isChanneled"] = false,
["source"] = "Hill Grizzly",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44638,
},
[15653] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nightmare Wyrmkin",
["npcID"] = 5280,
},
[76514] = {
["isChanneled"] = false,
["source"] = "Ascended Flameseeker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39415,
},
[75792] = {
["encounterName"] = "Erudax",
["type"] = "DEBUFF",
["source"] = "Erudax",
["encounterID"] = 1049,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 40484,
},
[13340] = {
["isChanneled"] = false,
["source"] = "Wildspawn Imp",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 13276,
},
[80606] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Azralon the Gatekeeper",
["npcID"] = 40814,
},
[11639] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ogom the Wretched",
["npcID"] = 5711,
},
[15749] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Guard Slip'kik",
["npcID"] = 14323,
},
[11892] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Grimlok",
["npcID"] = 4854,
},
[75930] = {
["isChanneled"] = false,
["source"] = "Shadowmaw Panther",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 684,
},
[12461] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Splinterbone Captain",
["npcID"] = 7345,
},
[9672] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skeletal Guardian",
["npcID"] = 10390,
},
[91737] = {
["isChanneled"] = false,
["source"] = "Defias Watcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47404,
},
[87771] = {
["isChanneled"] = false,
["source"] = "Servant of Asaad",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45926,
},
[79877] = {
["source"] = "Stone Trogg Berserker",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 43228,
},
[22695] = {
["isChanneled"] = false,
["source"] = "Petrified Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 14303,
},
[12528] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frozen Soul",
["npcID"] = 7352,
},
[76001] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["encounterID"] = 1045,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40586,
},
[11831] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hakkari Frostwing",
["npcID"] = 5291,
},
[61685] = {
["isChanneled"] = false,
["source"] = "Ghostkingler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 50051,
},
[86620] = {
["isChanneled"] = false,
["source"] = "Hogger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46254,
},
[80607] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Twilight Augur",
["npcID"] = 40713,
},
[33912] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rockslice Ripper",
["npcID"] = 42607,
},
[16740] = {
["isChanneled"] = false,
["source"] = "Stomper Kreeg",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 14322,
},
[76512] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Mad Prisoner",
["npcID"] = 39985,
},
[12493] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ogom the Wretched",
["npcID"] = 5711,
},
[9256] = {
["isChanneled"] = false,
["source"] = "High Inquisitor Whitemane",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3977,
},
[25054] = {
["isChanneled"] = false,
["source"] = "High Inquisitor Whitemane",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3977,
},
[11443] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thuzadin Shadowcaster",
["npcID"] = 10398,
},
[87772] = {
["isChanneled"] = false,
["source"] = "Servant of Asaad",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45926,
},
[12023] = {
["isChanneled"] = false,
["source"] = "Shanda the Spinner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 14266,
},
[12039] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Atal'ai High Priest",
["npcID"] = 5273,
},
[22691] = {
["isChanneled"] = false,
["source"] = "Alzzin the Wildshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11492,
},
[22688] = {
["isChanneled"] = false,
["source"] = "Alzzin the Wildshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11492,
},
[12255] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tuten'kash",
["npcID"] = 7355,
},
[80352] = {
["encounterName"] = "Rajh",
["source"] = "Rajh",
["npcID"] = 39378,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1078,
},
[10072] = {
["isChanneled"] = false,
["source"] = "Obsidian Sentinel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 7023,
},
[7093] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mosh'Ogg Lord",
["npcID"] = 680,
},
[9128] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Splinterbone Captain",
["npcID"] = 7345,
},
[91099] = {
["isChanneled"] = false,
["source"] = "Corpse Eater",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47134,
},
[52791] = {
["isChanneled"] = false,
["source"] = "Primordial Drake",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28378,
},
[20296] = {
["isChanneled"] = false,
["source"] = "Scarlet Evoker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4289,
},
[88192] = {
["encounterName"] = "Grand Vizier Ertan",
["type"] = "BUFF",
["source"] = "Young Storm Dragon",
["encounterID"] = 1043,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 45919,
},
[91611] = {
["isChanneled"] = false,
["source"] = "Lesser Gargoyle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3869,
},
[88201] = {
["isChanneled"] = false,
["source"] = "Young Storm Dragon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45919,
},
[93914] = {
["encounterName"] = "Baron Silverlaine",
["source"] = "Razorclaw the Butcher",
["encounterID"] = 1070,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 50869,
},
[7165] = {
["isChanneled"] = false,
["source"] = "Overlord Ramtusk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4420,
},
[88029] = {
["isChanneled"] = false,
["source"] = "Wild Vortex",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45912,
},
[18100] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Eldreth Apparition",
["npcID"] = 11471,
},
[16458] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Plague Ghoul",
["npcID"] = 10405,
},
[53434] = {
["isChanneled"] = false,
["source"] = "Ghostkingler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 50051,
},
[6713] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Anvilrage Guardsman",
["npcID"] = 8891,
},
[8281] = {
["isChanneled"] = false,
["source"] = "Shrike Bat",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4861,
},
[78535] = {
["isChanneled"] = false,
["source"] = "Eldreth Phantasm",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11475,
},
[15090] = {
["isChanneled"] = false,
["source"] = "High Inquisitor Fairbanks",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4542,
},
[85072] = {
["isChanneled"] = false,
["source"] = "Nightbane Shadow Weaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 533,
},
[21331] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Deeprot Tangler",
["npcID"] = 13142,
},
[8361] = {
["isChanneled"] = false,
["source"] = "Charlga Razorflank",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4421,
},
[12471] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ogom the Wretched",
["npcID"] = 5711,
},
[51963] = {
["encounterName"] = "Cho'gall",
["source"] = "Ebon Gargoyle",
["npcID"] = 27829,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[76716] = {
["isChanneled"] = false,
["source"] = "Defiled Earth Rager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40023,
},
[87723] = {
["source"] = "Grounding Field",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 47085,
},
[76677] = {
["encounterName"] = "Ascendant Lord Obsidius",
["source"] = "Twilight Element Warden",
["encounterID"] = 1036,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40017,
},
[76582] = {
["isChanneled"] = false,
["source"] = "Twilight Zealot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39990,
},
[76516] = {
["isChanneled"] = false,
["source"] = "Gilgoblin Hunter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40935,
},
[53515] = {
["source"] = "Ravager",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 16932,
},
[22661] = {
["isChanneled"] = false,
["source"] = "Alzzin the Wildshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11492,
},
[80354] = {
["encounterName"] = "Cho'gall",
["type"] = "DEBUFF",
["source"] = "Slootom",
["npcID"] = 417,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 1029,
},
[91815] = {
["encounterName"] = "Foe Reaper 5000",
["source"] = "Molten Slag",
["encounterID"] = 1063,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 49229,
},
[80610] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Camp Coordinator Brack",
["npcID"] = 48255,
},
[19713] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Shazzrah",
["npcID"] = 12264,
},
[2602] = {
["isChanneled"] = false,
["source"] = "Earthen Stonecarver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 7397,
},
[93276] = {
["encounterName"] = "Cho'gall",
["source"] = "Fire Elemental",
["npcID"] = 43406,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[74981] = {
["encounterName"] = "Forgemaster Throngus",
["type"] = "BUFF",
["source"] = "Forgemaster Throngus",
["encounterID"] = 1050,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 40177,
},
[79203] = {
["isChanneled"] = false,
["source"] = "Marion Wormwing",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41112,
},
[15550] = {
["isChanneled"] = false,
["source"] = "Warpwood Crusher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 13021,
},
[38595] = {
["isChanneled"] = false,
["source"] = "Stone Sleeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3870,
},
[63148] = {
["isChanneled"] = false,
["source"] = "Scarlet Commander Mograine",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3976,
},
[91997] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Twilight Initiate",
["npcID"] = 40185,
},
[4971] = {
["isChanneled"] = false,
["source"] = "Death's Head Seer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4519,
},
[58025] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Twilight Element Warden",
["npcID"] = 40017,
},
[3609] = {
["isChanneled"] = false,
["source"] = "Wildspawn Trickster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11453,
},
[76133] = {
["encounterName"] = "Ozumat",
["source"] = "Neptulon",
["encounterID"] = 1047,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40792,
},
[84868] = {
["isChanneled"] = false,
["source"] = "Black Bear",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1186,
},
[86292] = {
["encounterName"] = "Grand Vizier Ertan",
["type"] = "DEBUFF",
["source"] = "Ertan's Vortex",
["encounterID"] = 1043,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 46007,
},
[76517] = {
["isChanneled"] = false,
["source"] = "Ascended Flameseeker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39415,
},
[86911] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["encounterID"] = 1042,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43875,
},
[82914] = {
["encounterName"] = "Cho'gall",
["type"] = "BUFF",
["source"] = "Corrupting Adherent",
["npcID"] = 43622,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 1029,
},
[63896] = {
["source"] = "Unknown",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 43417,
},
[21832] = {
["isChanneled"] = false,
["source"] = "Princess Theradras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 12201,
},
[31403] = {
["isChanneled"] = false,
["source"] = "Scarlet Centurion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4301,
},
[76720] = {
["isChanneled"] = false,
["source"] = "Twilight Stormbreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39962,
},
[14517] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Scarlet Gallant",
["npcID"] = 4287,
},
[76008] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["npcID"] = 40586,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1045,
},
[75622] = {
["encounterName"] = "Anraphet",
["source"] = "Anraphet",
["npcID"] = 39788,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1075,
},
[88032] = {
["isChanneled"] = false,
["source"] = "Wild Vortex",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45912,
},
[8985] = {
["isChanneled"] = false,
["source"] = "Scarlet Conjuror",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4297,
},
[88288] = {
["encounterName"] = "Helix Gearbreaker",
["source"] = "Lumbering Oaf",
["encounterID"] = 1065,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47297,
},
[22120] = {
["isChanneled"] = false,
["source"] = "Murkstone Trogg",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44936,
},
[52586] = {
["isChanneled"] = false,
["source"] = "Tentacle of the Old Ones",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 58077,
},
[92156] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cenarius Event Camera",
["npcID"] = 49413,
},
[14518] = {
["isChanneled"] = false,
["source"] = "Scarlet Commander Mograine",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3976,
},
[86881] = {
["encounterName"] = "Corborus",
["source"] = "Corborus",
["encounterID"] = 1056,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43438,
},
[80549] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Raging Firestorm",
["npcID"] = 39939,
},
[77773] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Scarlet Scryer",
["npcID"] = 4293,
},
[8377] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Earthgrab Totem",
["npcID"] = 6066,
},
[7645] = {
["isChanneled"] = false,
["source"] = "High Inquisitor Whitemane",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3977,
},
[11829] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mosh'Ogg Spellcrafter",
["npcID"] = 710,
},
[22651] = {
["isChanneled"] = false,
["source"] = "Zevrim Thornhoof",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11490,
},
[91871] = {
["encounterName"] = "Siamat",
["type"] = "DEBUFF",
["source"] = "Servant of Siamat",
["encounterID"] = 1055,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 45259,
},
[75623] = {
["encounterName"] = "Anraphet",
["type"] = "DEBUFF",
["source"] = "Anraphet",
["npcID"] = 39788,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 1075,
},
[89571] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Temple Swiftstalker",
["npcID"] = 48139,
},
[16427] = {
["source"] = "Death Lash",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 13285,
},
[9257] = {
["isChanneled"] = false,
["source"] = "Scarlet Commander Mograine",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3976,
},
[16790] = {
["isChanneled"] = false,
["source"] = "Theradrim Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11784,
},
[32736] = {
["isChanneled"] = false,
["source"] = "Needlerock Pummeller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43847,
},
[22696] = {
["source"] = "Petrified Guardian",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 14303,
},
[91050] = {
["isChanneled"] = false,
["source"] = "Ogre Bodyguard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48262,
},
[6685] = {
["isChanneled"] = false,
["source"] = "Shadowforge Sharpshooter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 7290,
},
[90337] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Monkey",
["npcID"] = 43417,
},
[76484] = {
["isChanneled"] = false,
["source"] = "Twilight Torturer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39978,
},
[74984] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["encounterID"] = 1050,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40177,
},
[22888] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Major Mattingly",
["npcID"] = 173754,
},
[22920] = {
["isChanneled"] = false,
["source"] = "Prince Tortheldrin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11486,
},
[89697] = {
["isChanneled"] = false,
["source"] = "Defias Cannon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48266,
},
[91872] = {
["encounterName"] = "Siamat",
["source"] = "Servant of Siamat",
["encounterID"] = 1055,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45259,
},
[21909] = {
["isChanneled"] = false,
["source"] = "Princess Theradras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 12201,
},
[9481] = {
["isChanneled"] = false,
["source"] = "High Inquisitor Whitemane",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3977,
},
[75907] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Honor Guard",
["encounterID"] = 1045,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40633,
},
[15654] = {
["isChanneled"] = false,
["source"] = "Wildspawn Felsworn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11455,
},
[64695] = {
["source"] = "Earthbind Totem",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 2630,
},
[10252] = {
["isChanneled"] = false,
["source"] = "Archaedas",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 2748,
},
[82533] = {
["encounterName"] = "High Prophet Barim",
["source"] = "Harbinger of Darkness",
["encounterID"] = 1053,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43927,
},
[76520] = {
["isChanneled"] = false,
["source"] = "Gilgoblin Hunter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40935,
},
[84836] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Temple Swiftstalker",
["npcID"] = 48139,
},
[85467] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Lurking Tempest",
["encounterID"] = 1043,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45704,
},
[80998] = {
["isChanneled"] = false,
["source"] = "Mor'norokk the Hateful",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42964,
},
[16100] = {
["isChanneled"] = false,
["source"] = "Wildspawn Betrayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11454,
},
[77160] = {
["isChanneled"] = false,
["source"] = "Wormwing Screecher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41027,
},
[75241] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Sun-Touched Speaker",
["npcID"] = 39373,
},
[13281] = {
["isChanneled"] = false,
["source"] = "Razorfen Groundshaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4523,
},
[87779] = {
["isChanneled"] = false,
["source"] = "Temple Adept",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45935,
},
[92001] = {
["source"] = "Defias Envoker",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 48418,
},
[22415] = {
["isChanneled"] = false,
["source"] = "Warpwood Tangler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11464,
},
[7068] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Anguished Dead",
["npcID"] = 6426,
},
[86820] = {
["isChanneled"] = false,
["source"] = "Riverpaw Looter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46251,
},
[7965] = {
["isChanneled"] = false,
["source"] = "Lord Cobrahn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3669,
},
[9081] = {
["isChanneled"] = false,
["source"] = "Shadowforge Darkcaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4848,
},
[76395] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cenarius",
["npcID"] = 41631,
},
[57723] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Unknown",
["npcID"] = 26592,
},
[90978] = {
["isChanneled"] = false,
["source"] = "Defias Reaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47403,
},
[16006] = {
["isChanneled"] = false,
["source"] = "Revelosh",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 6910,
},
[12040] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Atal'ai High Priest",
["npcID"] = 5273,
},
[21833] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tinkerer Gizlock",
["npcID"] = 13601,
},
[10966] = {
["isChanneled"] = false,
["source"] = "Noxxion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 13282,
},
[11976] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nightmare Wanderer",
["npcID"] = 5283,
},
[22592] = {
["source"] = "Princess Theradras",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 12201,
},
[87780] = {
["isChanneled"] = false,
["source"] = "Temple Adept",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45935,
},
[22857] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Captain Kromcrush",
["npcID"] = 14325,
},
[30213] = {
["isChanneled"] = false,
["source"] = "Skurikminul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 17252,
},
[54131] = {
["source"] = "WorgenBih",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 46153,
},
[76502] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Twilight Sadist",
["encounterID"] = 1040,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39980,
},
[14032] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Atal'ai Deathwalker",
["npcID"] = 5271,
},
[8399] = {
["isChanneled"] = false,
["source"] = "High Inquisitor Fairbanks",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4542,
},
[76394] = {
["isChanneled"] = false,
["source"] = "Azureborne Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39854,
},
[76522] = {
["isChanneled"] = false,
["source"] = "Evolved Twilight Zealot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39987,
},
[54049] = {
["isChanneled"] = false,
["source"] = "Khaajhom",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 417,
},
[58875] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Spirit Wolf",
["npcID"] = 29264,
},
[16000] = {
["isChanneled"] = false,
["source"] = "Celebrian Dryad",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11793,
},
[70893] = {
["encounterName"] = "Cho'gall",
["type"] = "BUFF",
["source"] = "Wolf",
["npcID"] = 17280,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 1029,
},
[76825] = {
["source"] = "Twilight War-Mage",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 40268,
},
[74699] = {
["encounterName"] = "General Umbriss",
["source"] = "Malignant Trogg",
["encounterID"] = 1051,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39984,
},
[23769] = {
["source"] = "Sayge",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 14822,
},
[35696] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Okinkilig",
["npcID"] = 17252,
},
[8376] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Jammal'an the Prophet",
["npcID"] = 5710,
},
[75755] = {
["isChanneled"] = false,
["source"] = "Faceless Corruptor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39392,
},
[82255] = {
["encounterName"] = "High Prophet Barim",
["source"] = "Harbinger of Darkness",
["encounterID"] = 1053,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43927,
},
[16460] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Plagued Insect",
["npcID"] = 10461,
},
[8276] = {
["isChanneled"] = false,
["source"] = "Razorfen Beastmaster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4532,
},
[21062] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Putridus Shadowstalker",
["npcID"] = 11792,
},
[8282] = {
["isChanneled"] = false,
["source"] = "High Inquisitor Fairbanks",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4542,
},
[84837] = {
["isChanneled"] = false,
["source"] = "Dragul Giantbutcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42921,
},
[90980] = {
["isChanneled"] = false,
["source"] = "Defias Watcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47404,
},
[78826] = {
["isChanneled"] = false,
["source"] = "Hill Fox",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44635,
},
[22678] = {
["isChanneled"] = false,
["source"] = "High Inquisitor Fairbanks",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4542,
},
[8362] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Atal'ai High Priest",
["npcID"] = 5273,
},
[5810] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Grove Warden",
["npcID"] = 39941,
},
[86331] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Grand Vizier Ertan",
["encounterID"] = 1043,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43878,
},
[79466] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["encounterID"] = 1049,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40484,
},
[82876] = {
["isChanneled"] = false,
["source"] = "Abyssion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44289,
},
[87759] = {
["isChanneled"] = false,
["source"] = "Executor of the Caliph",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45928,
},
[80676] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Blackrock Spy",
["npcID"] = 49874,
},
[75322] = {
["encounterName"] = "Temple Guardian Anhuur",
["source"] = "Temple Guardian Anhuur",
["npcID"] = 39425,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1080,
},
[3148] = {
["isChanneled"] = false,
["source"] = "Braddok",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42858,
},
[23145] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Unknown",
["npcID"] = 1553,
},
[77720] = {
["isChanneled"] = false,
["source"] = "Riverpaw Slayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46249,
},
[82411] = {
["encounterName"] = "Cho'gall",
["source"] = "Darkened Creation",
["npcID"] = 44045,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[76524] = {
["isChanneled"] = false,
["source"] = "Evolved Twilight Zealot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39987,
},
[74538] = {
["encounterName"] = "Temple Guardian Anhuur",
["source"] = "Pit Viper",
["npcID"] = 39444,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1080,
},
[15785] = {
["isChanneled"] = false,
["source"] = "Death's Head Acolyte",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4515,
},
[74552] = {
["isChanneled"] = false,
["source"] = "Twilight Earthshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39890,
},
[17228] = {
["isChanneled"] = false,
["source"] = "Phase Lasher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 13196,
},
[75323] = {
["source"] = "Temple Guardian Anhuur",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 39425,
},
[75245] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Drahga Shadowburner",
["encounterID"] = 1048,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40319,
},
[79467] = {
["isChanneled"] = false,
["source"] = "Faceless Corruptor",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39392,
},
[81642] = {
["encounterName"] = "Lockmaw",
["source"] = "Lockmaw",
["encounterID"] = 1054,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43614,
},
[81770] = {
["isChanneled"] = false,
["source"] = "Earthen Catapult",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43509,
},
[65060] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Twilight Stormwaker",
["npcID"] = 40575,
},
[80638] = {
["isChanneled"] = false,
["source"] = "Scalding Rock Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40229,
},
[50841] = {
["source"] = "Sjonnir The Ironshaper",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 27978,
},
[39591] = {
["isChanneled"] = false,
["source"] = "Braddok",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42858,
},
[76160] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sun-Touched Servant",
["npcID"] = 39366,
},
[90361] = {
["isChanneled"] = false,
["source"] = "Ghostkingler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 50051,
},
[91622] = {
["isChanneled"] = false,
["source"] = "Dread Scryer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47141,
},
[88058] = {
["source"] = "Armored Mistral",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 45915,
},
[87930] = {
["isChanneled"] = false,
["source"] = "Gust Soldier",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45477,
},
[95332] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Alliance Spirit Guide",
["npcID"] = 45066,
},
[86606] = {
["isChanneled"] = false,
["source"] = "Jade Rager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44220,
},
[3248] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nightmare Scalebane",
["npcID"] = 5277,
},
[79340] = {
["encounterName"] = "High Priestess Azil",
["source"] = "High Priestess Azil",
["encounterID"] = 1057,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42333,
},
[75590] = {
["isChanneled"] = false,
["source"] = "Twilight Sadist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39980,
},
[76579] = {
["isChanneled"] = false,
["source"] = "Twilight Thundercaller",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40270,
},
[12167] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Grimlok",
["npcID"] = 4854,
},
[31707] = {
["isChanneled"] = false,
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 510,
},
[8986] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Haunting Phantasm",
["npcID"] = 6427,
},
[84448] = {
["isChanneled"] = false,
["source"] = "Aeosera",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43641,
},
[68054] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Jeeves",
["npcID"] = 35642,
},
[9034] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Interrogator Vishas",
["npcID"] = 3983,
},
[86633] = {
["isChanneled"] = false,
["source"] = "Lord Overheat",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46264,
},
[84784] = {
["encounterName"] = "Lockmaw",
["source"] = "Augh",
["encounterID"] = 1054,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45378,
},
[82414] = {
["encounterName"] = "Cho'gall",
["source"] = "Cho'gall",
["npcID"] = 43324,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[35199] = {
["isChanneled"] = false,
["source"] = "Stormcaller Mylra",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44956,
},
[83051] = {
["encounterName"] = "Siamat",
["source"] = "Cloud Burst",
["encounterID"] = 1055,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44541,
},
[69851] = {
["isChanneled"] = false,
["source"] = "Rockjaw Goon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 37073,
},
[13589] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Anvilrage Overseer",
["npcID"] = 8889,
},
[63227] = {
["isChanneled"] = false,
["source"] = "Stone Trogg Berserker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43228,
},
[87657] = {
["encounterName"] = "Rajh",
["type"] = "DEBUFF",
["source"] = "Inferno Leap",
["npcID"] = 47040,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 1078,
},
[63619] = {
["isChanneled"] = false,
["source"] = "Shadowfiend",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 19668,
},
[92007] = {
["encounterName"] = "Admiral Ripsnarl",
["source"] = "Vapor",
["encounterID"] = 1062,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47714,
},
[77806] = {
["source"] = "Nightbane Stalker",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 44087,
},
[88169] = {
["encounterName"] = "Glubtok",
["source"] = "Glubtok",
["encounterID"] = 1064,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47162,
},
[13338] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gordok Warlock",
["npcID"] = 11448,
},
[15657] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Putridus Trickster",
["npcID"] = 11791,
},
[7054] = {
["encounterName"] = "Commander Springvale",
["source"] = "Tormented Officer",
["npcID"] = 3873,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1071,
},
[85867] = {
["isChanneled"] = false,
["source"] = "Needlerock Rider",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43250,
},
[3356] = {
["isChanneled"] = false,
["source"] = "Shadowforge Geologist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 7030,
},
[90603] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["encounterID"] = 1060,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47739,
},
[6726] = {
["isChanneled"] = false,
["source"] = "Shadowforge Relic Hunter",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4847,
},
[3368] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Murloc Forager",
["npcID"] = 46,
},
[6742] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Grimlok",
["npcID"] = 4854,
},
[22414] = {
["isChanneled"] = false,
["source"] = "Warpwood Tangler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11464,
},
[91624] = {
["isChanneled"] = false,
["source"] = "Dread Scryer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47141,
},
[46835] = {
["source"] = "Ribbon Pole Debug Target",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 17066,
},
[78143] = {
["isChanneled"] = false,
["source"] = "Sethria's Hatchling",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41226,
},
[92008] = {
["encounterName"] = "Admiral Ripsnarl",
["source"] = "Vapor",
["encounterID"] = 1062,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47714,
},
[9482] = {
["isChanneled"] = false,
["source"] = "Galgann Firehammer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 7291,
},
[88170] = {
["isChanneled"] = false,
["source"] = "Turbulent Squall",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45924,
},
[21067] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Poison Sprite",
["npcID"] = 12216,
},
[88171] = {
["isChanneled"] = false,
["source"] = "Turbulent Squall",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45924,
},
[80058] = {
["isChanneled"] = false,
["source"] = "Twilight Field Captain",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41502,
},
[80308] = {
["isChanneled"] = false,
["source"] = "Stonecore Rift Conjurer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42691,
},
[90604] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["encounterID"] = 1060,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47739,
},
[11641] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sandfury Shadowhunter",
["npcID"] = 7246,
},
[13704] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "High Interrogator Gerstahn",
["npcID"] = 9018,
},
[23737] = {
["source"] = "Sayge",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 14822,
},
[83820] = {
["isChanneled"] = false,
["source"] = "Haethen Kaul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44835,
},
[15799] = {
["isChanneled"] = false,
["source"] = "Stormcaller Mylra",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44956,
},
[76158] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sun-Touched Sprite",
["npcID"] = 39369,
},
[19372] = {
["source"] = "Core Hound",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 11673,
},
[85740] = {
["source"] = "Zephyr",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 45991,
},
[83821] = {
["isChanneled"] = false,
["source"] = "Haethen Kaul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44835,
},
[77808] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Houndmaster Loksey",
["npcID"] = 3974,
},
[92265] = {
["encounterName"] = "Slabhide",
["source"] = "Slabhide",
["npcID"] = 43214,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1059,
},
[13864] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Anvilrage Medic",
["npcID"] = 8894,
},
[82361] = {
["encounterName"] = "Cho'gall",
["source"] = "Cho'gall",
["npcID"] = 43324,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[90602] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["encounterID"] = 1060,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47739,
},
[86636] = {
["isChanneled"] = false,
["source"] = "Lord Overheat",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46264,
},
[21707] = {
["isChanneled"] = false,
["source"] = "Noxxion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 13282,
},
[88184] = {
["source"] = "Empyrean Assassin",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 45922,
},
[88056] = {
["isChanneled"] = false,
["source"] = "Armored Mistral",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45915,
},
[76622] = {
["source"] = "Executor of the Caliph",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 45928,
},
[3636] = {
["isChanneled"] = false,
["source"] = "Jadespine Basilisk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4863,
},
[37577] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Twilight Enforcer",
["npcID"] = 39749,
},
[11977] = {
["isChanneled"] = false,
["source"] = "Twilight Duskwarden",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42917,
},
[70133] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Frostmane Blade",
["npcID"] = 37507,
},
[30151] = {
["encounterName"] = "Cho'gall",
["source"] = "Chinilrike",
["npcID"] = 17252,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[83822] = {
["isChanneled"] = false,
["source"] = "Haethen Kaul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44835,
},
[74039] = {
["isChanneled"] = false,
["source"] = "Battered Red Drake",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39294,
},
[12057] = {
["isChanneled"] = false,
["source"] = "Earthen Stonebreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 7396,
},
[88300] = {
["encounterName"] = "Helix Gearbreaker",
["source"] = "Lumbering Oaf",
["encounterID"] = 1065,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47297,
},
[76369] = {
["isChanneled"] = false,
["source"] = "Azureborne Seer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40291,
},
[76274] = {
["encounterName"] = "Ascendant Lord Obsidius",
["type"] = "BUFF",
["source"] = "Ascendant Lord Obsidius",
["npcID"] = 39705,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 1036,
},
[22187] = {
["isChanneled"] = false,
["source"] = "Scarlet Chaplain",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 51660,
},
[82671] = {
["source"] = "Oathsworn Myrmidon",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 44924,
},
[76500] = {
["isChanneled"] = false,
["source"] = "Twilight Sadist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39980,
},
[12169] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Anvilrage Guardsman",
["npcID"] = 8891,
},
[81008] = {
["isChanneled"] = false,
["source"] = "Crystalspawn Giant",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42810,
},
[24394] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Riktor",
["npcID"] = 33776,
},
[93959] = {
["encounterName"] = "Siamat",
["type"] = "DEBUFF",
["source"] = "Servant of Siamat",
["encounterID"] = 1055,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 45259,
},
[79345] = {
["encounterName"] = "High Priestess Azil",
["source"] = "High Priestess Azil",
["encounterID"] = 1057,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42333,
},
[11431] = {
["isChanneled"] = false,
["source"] = "Lord Pythas",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3670,
},
[93930] = {
["encounterName"] = "Baron Silverlaine",
["source"] = "Razorclaw the Butcher",
["encounterID"] = 1070,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 50869,
},
[90606] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["encounterID"] = 1060,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47739,
},
[86000] = {
["encounterName"] = "Cho'gall",
["source"] = "Hand of Gul'dan",
["npcID"] = 46157,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[16430] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thuzadin Necromancer",
["npcID"] = 10400,
},
[92789] = {
["isChanneled"] = false,
["source"] = "Ricket Ticker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 49823,
},
[3600] = {
["encounterName"] = "Cho'gall",
["source"] = "Earthbind Totem",
["npcID"] = 2630,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[3604] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gordok Mastiff",
["npcID"] = 13036,
},
[81572] = {
["encounterName"] = "Cho'gall",
["type"] = "BUFF",
["source"] = "Shadow Lord",
["npcID"] = 43592,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 1029,
},
[86766] = {
["isChanneled"] = false,
["source"] = "Maziel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44967,
},
[74853] = {
["encounterName"] = "General Umbriss",
["source"] = "General Umbriss",
["encounterID"] = 1051,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39625,
},
[90946] = {
["isChanneled"] = false,
["source"] = "Defias Blood Wizard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48417,
},
[82139] = {
["encounterName"] = "High Prophet Barim",
["source"] = "High Prophet Barim",
["encounterID"] = 1053,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43612,
},
[57984] = {
["encounterName"] = "Cho'gall",
["source"] = "Greater Fire Elemental",
["npcID"] = 15438,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[88055] = {
["isChanneled"] = false,
["source"] = "Armored Mistral",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45915,
},
[93675] = {
["encounterName"] = "Lord Godfrey",
["source"] = "Lord Godfrey",
["npcID"] = 46964,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1072,
},
[88814] = {
["encounterName"] = "High Prophet Barim",
["type"] = "DEBUFF",
["source"] = "High Prophet Barim",
["encounterID"] = 1053,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 43612,
},
[93931] = {
["encounterName"] = "Baron Silverlaine",
["source"] = "Odo the Blindwatcher",
["encounterID"] = 1070,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 50857,
},
[11918] = {
["source"] = "Shanda the Spinner",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 14266,
},
[93812] = {
["encounterName"] = "Baron Ashbury",
["source"] = "Baron Ashbury",
["encounterID"] = 1069,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46962,
},
[12746] = {
["isChanneled"] = false,
["source"] = "Searing Blade Warlock",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11324,
},
[21068] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Corruptor",
["npcID"] = 12217,
},
[74101] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sun-Touched Servant",
["npcID"] = 39366,
},
[90605] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["encounterID"] = 1060,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47739,
},
[76404] = {
["isChanneled"] = false,
["source"] = "Crimsonborne Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39381,
},
[82673] = {
["isChanneled"] = false,
["source"] = "Oathsworn Myrmidon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44924,
},
[7896] = {
["isChanneled"] = false,
["source"] = "Wildspawn Betrayer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11454,
},
[78835] = {
["encounterName"] = "Ozruk",
["source"] = "Ozruk",
["encounterID"] = 1058,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42188,
},
[76561] = {
["isChanneled"] = false,
["source"] = "Evolved Twilight Zealot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39987,
},
[10666] = {
["isChanneled"] = false,
["source"] = "Vault Warder",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 10120,
},
[29544] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Captain Kromcrush",
["npcID"] = 14325,
},
[91629] = {
["isChanneled"] = false,
["source"] = "Spitebone Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47145,
},
[54680] = {
["source"] = "Unknown",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 32485,
},
[76823] = {
["isChanneled"] = false,
["source"] = "Twilight War-Mage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40268,
},
[92013] = {
["encounterName"] = "Admiral Ripsnarl",
["source"] = "Vapor",
["encounterID"] = 1062,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47714,
},
[77812] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cenarius",
["npcID"] = 41631,
},
[88175] = {
["isChanneled"] = false,
["source"] = "Turbulent Squall",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45924,
},
[82120] = {
["isChanneled"] = false,
["source"] = "War Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44118,
},
[16727] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "King Gordok",
["npcID"] = 11501,
},
[57601] = {
["source"] = "Twisted Visage",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 30624,
},
[12889] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Avatar of Hakkar",
["npcID"] = 8440,
},
[75592] = {
["encounterName"] = "Temple Guardian Anhuur",
["source"] = "Temple Guardian Anhuur",
["npcID"] = 39425,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1080,
},
[82425] = {
["encounterName"] = "High Prophet Barim",
["source"] = "Harbinger of Darkness",
["encounterID"] = 1053,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43927,
},
[3606] = {
["isChanneled"] = false,
["source"] = "Searing Totem",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 2523,
},
[92604] = {
["isChanneled"] = false,
["source"] = "Vanessa VanCleef",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 49671,
},
[87726] = {
["source"] = "Grounding Field",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 47085,
},
[59637] = {
["isChanneled"] = false,
["source"] = "Mirror Image",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 31216,
},
[24450] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cat",
["npcID"] = 42718,
},
[22860] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Captain Kromcrush",
["npcID"] = 14325,
},
[84799] = {
["encounterName"] = "Lockmaw",
["source"] = "Augh",
["encounterID"] = 1054,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45379,
},
[76557] = {
["isChanneled"] = false,
["source"] = "Ascended Windwalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39414,
},
[77813] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cenarius",
["npcID"] = 41631,
},
[91998] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Twilight Initiate",
["npcID"] = 40185,
},
[88348] = {
["isChanneled"] = false,
["source"] = "Foe Reaper 5000",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 49681,
},
[21071] = {
["isChanneled"] = false,
["source"] = "Primordial Behemoth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 12206,
},
[11082] = {
["isChanneled"] = false,
["source"] = "Electrocutioner 6000",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 6235,
},
[82789] = {
["isChanneled"] = false,
["source"] = "Oathsworn Skinner",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44981,
},
[82622] = {
["encounterName"] = "High Prophet Barim",
["source"] = "High Prophet Barim",
["encounterID"] = 1053,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43612,
},
[11642] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Scarlet Adept",
["npcID"] = 4296,
},
[76790] = {
["isChanneled"] = false,
["source"] = "Naz'jar Invader",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39616,
},
[54424] = {
["isChanneled"] = false,
["source"] = "Khaajhom",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 417,
},
[76232] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Malfurion Stormrage",
["npcID"] = 41632,
},
[15288] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Twilight Emissary",
["npcID"] = 8913,
},
[88177] = {
["encounterName"] = "Glubtok",
["type"] = "DEBUFF",
["source"] = "Glubtok",
["encounterID"] = 1064,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 47162,
},
[79892] = {
["isChanneled"] = false,
["source"] = "Braddok",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42858,
},
[32707] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Twilight Inferno Lord",
["npcID"] = 39974,
},
[79865] = {
["source"] = "Millhouse Manastorm",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 44875,
},
[11898] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sandfury Blood Drinker",
["npcID"] = 5649,
},
[22572] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gordok Brute",
["npcID"] = 11441,
},
[80117] = {
["isChanneled"] = false,
["source"] = "Avalanchion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44372,
},
[9275] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Scarlet Torturer",
["npcID"] = 4306,
},
[53508] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spider",
["npcID"] = 574,
},
[83799] = {
["isChanneled"] = false,
["source"] = "Haethen Kaul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44835,
},
[76535] = {
["isChanneled"] = false,
["source"] = "Gilgoblin Aquamage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40943,
},
[18670] = {
["isChanneled"] = false,
["source"] = "Ironbark Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11459,
},
[15496] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lord Aurius Rivendare",
["npcID"] = 45412,
},
[57846] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mosh'Ogg Brute",
["npcID"] = 1142,
},
[93423] = {
["encounterName"] = "Baron Ashbury",
["source"] = "Baron Ashbury",
["npcID"] = 46962,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1069,
},
[80585] = {
["isChanneled"] = false,
["source"] = "Rockslice Ripper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42607,
},
[22924] = {
["isChanneled"] = false,
["source"] = "Tendris Warpwood",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11489,
},
[9435] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcanist Doan",
["npcID"] = 6487,
},
[82858] = {
["encounterName"] = "High Priestess Azil",
["source"] = "High Priestess Azil",
["encounterID"] = 1057,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42333,
},
[86800] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Energized Geode",
["npcID"] = 43254,
},
[744] = {
["isChanneled"] = false,
["source"] = "Murkgill Forager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4457,
},
[84982] = {
["encounterName"] = "Siamat",
["type"] = "BUFF",
["source"] = "Siamat",
["encounterID"] = 1055,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 44819,
},
[21069] = {
["isChanneled"] = false,
["source"] = "Vile Larva",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 12218,
},
[8078] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Splinterbone Centurion",
["npcID"] = 7346,
},
[76779] = {
["isChanneled"] = false,
["source"] = "Ascended Rockbreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40272,
},
[88314] = {
["encounterName"] = "Altairus",
["type"] = "DEBUFF",
["source"] = "Twister",
["encounterID"] = 1041,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 47342,
},
[86771] = {
["isChanneled"] = false,
["source"] = "Rumbling Earth",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46262,
},
[7870] = {
["isChanneled"] = false,
["source"] = "Lyntai",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 1863,
},
[11658] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Mazoga",
["npcID"] = 38968,
},
[76603] = {
["isChanneled"] = false,
["source"] = "Twilight Earthshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39890,
},
[13737] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gordok Reaver",
["npcID"] = 52761,
},
[11970] = {
["isChanneled"] = false,
["source"] = "Taragaman the Hungerer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11520,
},
[29577] = {
["isChanneled"] = false,
["source"] = "Longneck Grazer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 28129,
},
[88308] = {
["encounterName"] = "Altairus",
["source"] = "Altairus",
["encounterID"] = 1041,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43873,
},
[39207] = {
["isChanneled"] = false,
["source"] = "Bound Water Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44886,
},
[92017] = {
["encounterName"] = "Admiral Ripsnarl",
["type"] = "BUFF",
["source"] = "Vapor",
["encounterID"] = 1062,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 47714,
},
[9739] = {
["isChanneled"] = false,
["source"] = "Druid of the Talon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41287,
},
[11802] = {
["isChanneled"] = false,
["source"] = "Dark Iron Agent",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 6212,
},
[76665] = {
["isChanneled"] = false,
["source"] = "Buster",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40013,
},
[82294] = {
["isChanneled"] = false,
["source"] = "Earthen Catapult",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43952,
},
[87923] = {
["isChanneled"] = false,
["source"] = "Gust Soldier",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45477,
},
[76409] = {
["source"] = "Crimsonborne Guardian",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 39381,
},
[15976] = {
["source"] = "Razorlash",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 12258,
},
[90994] = {
["isChanneled"] = false,
["source"] = "Defias Digger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48420,
},
[76794] = {
["isChanneled"] = false,
["source"] = "Ascended Waterlasher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40273,
},
[90932] = {
["isChanneled"] = false,
["source"] = "Defias Blood Wizard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48417,
},
[75002] = {
["isChanneled"] = false,
["source"] = "Shadowmaw Panther",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 684,
},
[11962] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Twilight Inferno Lord",
["npcID"] = 39974,
},
[59638] = {
["isChanneled"] = false,
["source"] = "Mirror Image",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 31216,
},
[21869] = {
["isChanneled"] = false,
["source"] = "Princess Theradras",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 12201,
},
[78678] = {
["isChanneled"] = false,
["source"] = "Blaithe",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41084,
},
[90098] = {
["isChanneled"] = false,
["source"] = "Oaf Lackey",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48445,
},
[90099] = {
["isChanneled"] = false,
["source"] = "Defias Watcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47404,
},
[12058] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mosh'Ogg Shaman",
["npcID"] = 679,
},
[76026] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["encounterID"] = 1044,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40765,
},
[76151] = {
["source"] = "Twilight Beguiler",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 40167,
},
[17173] = {
["isChanneled"] = false,
["source"] = "Mogh the Dead",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 51658,
},
[79351] = {
["encounterName"] = "High Priestess Azil",
["source"] = "High Priestess Azil",
["npcID"] = 42333,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1057,
},
[95169] = {
["source"] = "Colossal Gyreworm",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 44258,
},
[76792] = {
["isChanneled"] = false,
["source"] = "Ascended Rockbreaker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40272,
},
[12170] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sergeant Bly",
["npcID"] = 7604,
},
[8142] = {
["isChanneled"] = false,
["source"] = "Verdan the Everliving",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 5775,
},
[8150] = {
["isChanneled"] = false,
["source"] = "Mutanus the Devourer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3654,
},
[90398] = {
["isChanneled"] = false,
["source"] = "Defias Squallshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48521,
},
[77775] = {
["isChanneled"] = false,
["source"] = "Child of Tortolla",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41581,
},
[83877] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Temple Swiftstalker",
["npcID"] = 48139,
},
[8599] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Plague Ghoul",
["npcID"] = 10405,
},
[75000] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["encounterID"] = 1050,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40177,
},
[10251] = {
["isChanneled"] = false,
["source"] = "Biletoad",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3835,
},
[8267] = {
["source"] = "Rotting Agam'ar",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 4512,
},
[73976] = {
["isChanneled"] = false,
["source"] = "Neferset Plaguebringer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44976,
},
[18543] = {
["isChanneled"] = false,
["source"] = "Charbringer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40336,
},
[84471] = {
["isChanneled"] = false,
["source"] = "Aeosera",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43641,
},
[76411] = {
["isChanneled"] = false,
["source"] = "Twilight Enforcer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39956,
},
[58511] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Stormwind City Patroller",
["npcID"] = 1976,
},
[82869] = {
["isChanneled"] = false,
["source"] = "Abyssion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44289,
},
[91623] = {
["isChanneled"] = false,
["source"] = "Dread Scryer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47141,
},
[87719] = {
["isChanneled"] = false,
["source"] = "Packleader Ivar Bloodfang",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47006,
},
[8364] = {
["isChanneled"] = false,
["source"] = "Scarlet Sorcerer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4294,
},
[76748] = {
["source"] = "Mysterious Winged Spirit",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 41068,
},
[13398] = {
["isChanneled"] = false,
["source"] = "Leprous Technician",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 6222,
},
[84445] = {
["source"] = "Boulder Platform",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 45191,
},
[76575] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Evolved Twilight Zealot",
["npcID"] = 39987,
},
[12538] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thorn Eater Ghoul",
["npcID"] = 7348,
},
[95467] = {
["source"] = "Unknown",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 20728,
},
[88182] = {
["source"] = "Empyrean Assassin",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 45922,
},
[76028] = {
["encounterName"] = "Beauty",
["source"] = "Beauty",
["npcID"] = 39700,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1037,
},
[74670] = {
["encounterName"] = "General Umbriss",
["source"] = "General Umbriss",
["encounterID"] = 1051,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39625,
},
[25228] = {
["encounterName"] = "Cho'gall",
["type"] = "BUFF",
["source"] = "Chinilrike",
["npcID"] = 17252,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 1029,
},
[75603] = {
["encounterName"] = "Anraphet",
["type"] = "DEBUFF",
["source"] = "Anraphet",
["npcID"] = 39788,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 1075,
},
[86726] = {
["isChanneled"] = false,
["source"] = "Randolph Moloch",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46383,
},
[76703] = {
["source"] = "Enslaved Gronn Brute",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 40166,
},
[86765] = {
["isChanneled"] = false,
["source"] = "Slag Fury",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46263,
},
[34828] = {
["source"] = "Braddok",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 42858,
},
[75637] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Emerald Drake",
["npcID"] = 40025,
},
[82415] = {
["encounterName"] = "Corborus",
["source"] = "Corborus",
["encounterID"] = 1056,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43438,
},
[21390] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lord Vyletongue",
["npcID"] = 12236,
},
[81530] = {
["isChanneled"] = false,
["source"] = "Stonecore Earthshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43537,
},
[88009] = {
["encounterName"] = "Glubtok",
["source"] = "Glubtok",
["encounterID"] = 1064,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47162,
},
[75645] = {
["isChanneled"] = false,
["source"] = "Corla, Herald of Twilight",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39679,
},
[96243] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Water Elemental",
["npcID"] = 510,
},
[14873] = {
["isChanneled"] = false,
["source"] = "Shifty Thief",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46381,
},
[22859] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Captain Kromcrush",
["npcID"] = 14325,
},
[13443] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Smolderos the Carbonizer",
["npcID"] = 39348,
},
[87487] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flame Ascendant",
["npcID"] = 40709,
},
[12890] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shade of Eranikus",
["npcID"] = 5709,
},
[3288] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Mosshide Scout",
["npcID"] = 44161,
},
[87532] = {
["isChanneled"] = false,
["source"] = "Shadowy Apparition",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46954,
},
[76797] = {
["isChanneled"] = false,
["source"] = "Ascended Waterlasher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40273,
},
[83066] = {
["encounterName"] = "Siamat",
["source"] = "Siamat",
["encounterID"] = 1055,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44819,
},
[81147] = {
["isChanneled"] = false,
["source"] = "Avalanchion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44372,
},
[82768] = {
["isChanneled"] = false,
["source"] = "Neferset Plaguebringer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44976,
},
[93685] = {
["encounterName"] = "Commander Springvale",
["source"] = "Commander Springvale",
["npcID"] = 4278,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1071,
},
[77437] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Anraphet",
["npcID"] = 39788,
},
[93757] = {
["encounterName"] = "Baron Ashbury",
["source"] = "Baron Ashbury",
["encounterID"] = 1069,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46962,
},
[92266] = {
["isChanneled"] = false,
["source"] = "Irradiated Pillager",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 6329,
},
[11019] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hakkari Sapper",
["npcID"] = 8336,
},
[8988] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Arcanist Doan",
["npcID"] = 6487,
},
[76030] = {
["encounterName"] = "Beauty",
["source"] = "Beauty",
["encounterID"] = 1037,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39700,
},
[82299] = {
["encounterName"] = "Cho'gall",
["source"] = "Cho'gall",
["npcID"] = 43324,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[8275] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Razorfen Beastmaster",
["npcID"] = 4532,
},
[56646] = {
["isChanneled"] = false,
["source"] = "Enraged Fire Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46261,
},
[77273] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Flame Warden",
["npcID"] = 39800,
},
[84589] = {
["encounterName"] = "Siamat",
["source"] = "Siamat",
["encounterID"] = 1055,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44819,
},
[54791] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Maleki the Pallid",
["npcID"] = 10438,
},
[6607] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Avatar of Hakkar",
["npcID"] = 8440,
},
[75007] = {
["encounterName"] = "Forgemaster Throngus",
["type"] = "BUFF",
["source"] = "Forgemaster Throngus",
["encounterID"] = 1050,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 40177,
},
[76680] = {
["encounterName"] = "Ascendant Lord Obsidius",
["source"] = "Twilight Element Warden",
["encounterID"] = 1036,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40017,
},
[93686] = {
["encounterName"] = "Commander Springvale",
["type"] = "BUFF",
["source"] = "Commander Springvale",
["encounterID"] = 1071,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 4278,
},
[90914] = {
["isChanneled"] = false,
["source"] = "Defias Squallshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48521,
},
[22478] = {
["isChanneled"] = false,
["source"] = "Zevrim Thornhoof",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11490,
},
[78162] = {
["isChanneled"] = false,
["source"] = "Twilight Fissure",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41942,
},
[75775] = {
["isChanneled"] = false,
["source"] = "Frostmane Scavenger",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41146,
},
[22574] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gordok Captain",
["npcID"] = 11445,
},
[76031] = {
["encounterName"] = "Beauty",
["source"] = "Beauty",
["encounterID"] = 1037,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39700,
},
[76159] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sun-Touched Spriteling",
["npcID"] = 39370,
},
[113] = {
["isChanneled"] = false,
["source"] = "Death's Head Adept",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4516,
},
[76415] = {
["source"] = "Twilight Enforcer",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 39956,
},
[16429] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Thuzadin Shadowcaster",
["npcID"] = 10398,
},
[22766] = {
["source"] = "Shadowmaw Panther",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 684,
},
[15497] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sorcerous Skeleton",
["npcID"] = 47140,
},
[74880] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Spatial Anomaly",
["npcID"] = 40170,
},
[20815] = {
["isChanneled"] = false,
["source"] = "Scarlet Evoker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4289,
},
[81277] = {
["encounterName"] = "Cho'gall",
["type"] = "BUFF",
["source"] = "Bloodworm",
["npcID"] = 28017,
["event"] = "SPELL_AURA_APPLIED",
["encounterID"] = 1029,
},
[93687] = {
["encounterName"] = "Commander Springvale",
["source"] = "Commander Springvale",
["npcID"] = 4278,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1071,
},
[7164] = {
["isChanneled"] = false,
["source"] = "Quilguard Champion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4623,
},
[75520] = {
["encounterName"] = "Erudax",
["source"] = "Faceless Corruptor",
["encounterID"] = 1049,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40600,
},
[54216] = {
["isChanneled"] = false,
["source"] = "Ghostkingler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 50051,
},
[21007] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ironspine",
["npcID"] = 6489,
},
[88186] = {
["isChanneled"] = false,
["source"] = "Empyrean Assassin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45922,
},
[76032] = {
["encounterName"] = "Beauty",
["source"] = "Beauty",
["encounterID"] = 1037,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39700,
},
[9532] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skeletal Summoner",
["npcID"] = 7342,
},
[32133] = {
["isChanneled"] = false,
["source"] = "Troggzor the Earthinator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43456,
},
[21790] = {
["isChanneled"] = false,
["source"] = "Thessala Hydra",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 12207,
},
[17105] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Wailing Banshee",
["npcID"] = 10464,
},
[29419] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tinkerer Gizlock",
["npcID"] = 13601,
},
[54792] = {
["isChanneled"] = false,
["source"] = "Crazed Mage",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39982,
},
[17201] = {
["isChanneled"] = false,
["source"] = "Eldreth Spectre",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11473,
},
[13738] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Fleshflayer Ghoul",
["npcID"] = 10407,
},
[15801] = {
["isChanneled"] = false,
["source"] = "Revelosh",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 6910,
},
[22994] = {
["isChanneled"] = false,
["source"] = "Tendris Warpwood",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11489,
},
[22417] = {
["isChanneled"] = false,
["source"] = "Wildspawn Felsworn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11455,
},
[77568] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Mad Prisoner",
["encounterID"] = 1040,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39985,
},
[17393] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lord Aurius Rivendare",
["npcID"] = 45412,
},
[86816] = {
["isChanneled"] = false,
["source"] = "Dragul Giantbutcher",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42921,
},
[75813] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Tempest Witch",
["encounterID"] = 1045,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44404,
},
[8814] = {
["isChanneled"] = false,
["source"] = "Shadowforge Geologist",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 7030,
},
[90490] = {
["isChanneled"] = false,
["source"] = "Enslaved Water Spirit",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39961,
},
[81569] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Stonecore Berserker",
["npcID"] = 43430,
},
[6254] = {
["isChanneled"] = false,
["source"] = "Skum",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3674,
},
[90925] = {
["isChanneled"] = false,
["source"] = "Defias Enforcer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48502,
},
[11899] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sandfury Witch Doctor",
["npcID"] = 5650,
},
[74837] = {
["encounterName"] = "General Umbriss",
["type"] = "DEBUFF",
["source"] = "Trogg Dweller",
["encounterID"] = 1051,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 45467,
},
[4167] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Spider",
["npcID"] = 574,
},
[90913] = {
["isChanneled"] = false,
["source"] = "Monstrous Parrot",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48447,
},
[87420] = {
["isChanneled"] = false,
["source"] = "Shadowflame Master",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41563,
},
[93689] = {
["encounterName"] = "Lord Walden",
["source"] = "Mystery Toxin",
["encounterID"] = 1073,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 50439,
},
[79849] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Reliquary Jes'ca Darksun",
["npcID"] = 44818,
},
[58519] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Stormwind City Guard",
["npcID"] = 68,
},
[20819] = {
["isChanneled"] = false,
["source"] = "Scarlet Sorcerer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4294,
},
[79872] = {
["isChanneled"] = false,
["source"] = "Avalanchion",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44372,
},
[40505] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Plague Ghoul",
["npcID"] = 10405,
},
[90846] = {
["isChanneled"] = false,
["source"] = "Enslaved Burning Ember",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39892,
},
[56520] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Freed Crusader",
["npcID"] = 30274,
},
[81630] = {
["encounterName"] = "Lockmaw",
["source"] = "Lockmaw",
["encounterID"] = 1054,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43614,
},
[76418] = {
["isChanneled"] = false,
["source"] = "Twilight Shadow Weaver",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39954,
},
[10092] = {
["isChanneled"] = false,
["source"] = "Sand Storm",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 7226,
},
[34259] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Atal'ai Deathwalker",
["npcID"] = 5271,
},
[13584] = {
["isChanneled"] = false,
["source"] = "Theradrim Shardling",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11783,
},
[80279] = {
["isChanneled"] = false,
["source"] = "Stonecore Rift Conjurer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42691,
},
[10101] = {
["isChanneled"] = false,
["source"] = "Ironaya",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 7228,
},
[93562] = {
["encounterName"] = "Lord Walden",
["source"] = "Lord Walden",
["encounterID"] = 1073,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 46963,
},
[83455] = {
["encounterName"] = "Siamat",
["source"] = "Minion of Siamat",
["encounterID"] = 1055,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44704,
},
[12251] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Tomb Reaver",
["npcID"] = 7351,
},
[7159] = {
["isChanneled"] = false,
["source"] = "Razorfen Stalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 6035,
},
[87933] = {
["isChanneled"] = false,
["source"] = "Gust Soldier",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45477,
},
[88061] = {
["isChanneled"] = false,
["source"] = "Armored Mistral",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45915,
},
[22575] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gordok Captain",
["npcID"] = 11445,
},
[32916] = {
["isChanneled"] = false,
["source"] = "Twilight Duskwarden",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42917,
},
[86819] = {
["isChanneled"] = false,
["source"] = "Twilight Pyremaw",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44189,
},
[8269] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Guard Slip'kik",
["npcID"] = 14323,
},
[8285] = {
["isChanneled"] = false,
["source"] = "Agathelos the Raging",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4422,
},
[10348] = {
["isChanneled"] = false,
["source"] = "Leprous Technician",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 6222,
},
[91004] = {
["isChanneled"] = false,
["source"] = "Defias Envoker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 48418,
},
[22420] = {
["isChanneled"] = false,
["source"] = "Hydrospawn",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 13280,
},
[9874] = {
["isChanneled"] = false,
["source"] = "Stone Keeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4857,
},
[93435] = {
["isChanneled"] = false,
["source"] = "Ghostkingler",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 50051,
},
[81281] = {
["source"] = "Fungal Growth II",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 43484,
},
[12491] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Witch Doctor Zum'rah",
["npcID"] = 7271,
},
[10132] = {
["isChanneled"] = false,
["source"] = "Ancient Stone Keeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 7206,
},
[9906] = {
["isChanneled"] = false,
["source"] = "Jadespine Basilisk",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4863,
},
[15587] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cho'Rush the Observer",
["npcID"] = 14324,
},
[12555] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skeletal Berserker",
["npcID"] = 10391,
},
[73861] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sun-Touched Speaker",
["npcID"] = 39373,
},
[25058] = {
["isChanneled"] = false,
["source"] = "Scarlet Chaplain",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 51660,
},
[87722] = {
["source"] = "Grounding Field",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 47085,
},
[15230] = {
["isChanneled"] = false,
["source"] = "Fel Lash",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 13197,
},
[2649] = {
["isChanneled"] = false,
["source"] = "McLovin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43417,
},
[15583] = {
["isChanneled"] = false,
["source"] = "Wildspawn Rogue",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11452,
},
[46542] = {
["source"] = "Ahunite Hailstone",
["type"] = "DEBUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 25755,
},
[15979] = {
["isChanneled"] = false,
["source"] = "Arcane Aberration",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11480,
},
[19319] = {
["isChanneled"] = false,
["source"] = "Alzzin the Wildshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11492,
},
[15582] = {
["isChanneled"] = false,
["source"] = "Wildspawn Shadowstalker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11456,
},
[11981] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sandfury Acolyte",
["npcID"] = 8876,
},
[7399] = {
["isChanneled"] = false,
["source"] = "Mutanus the Devourer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3654,
},
[89753] = {
["encounterName"] = "Cho'gall",
["source"] = "Chinilrike",
["npcID"] = 17252,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[9143] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Tinkerer Gizlock",
["npcID"] = 13601,
},
[12795] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Glutton",
["npcID"] = 8567,
},
[5605] = {
["isChanneled"] = false,
["source"] = "Stonevault Oracle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4852,
},
[19505] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Pryyzhum",
["npcID"] = 417,
},
[32734] = {
["isChanneled"] = false,
["source"] = "Stone Trogg Geomancer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43234,
},
[76165] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["encounterID"] = 1046,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40825,
},
[5416] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Carrion Swarmer",
["npcID"] = 13160,
},
[12891] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shade of Eranikus",
["npcID"] = 5709,
},
[81442] = {
["isChanneled"] = false,
["source"] = "Millhouse Manastorm",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43391,
},
[88959] = {
["isChanneled"] = false,
["source"] = "Temple Adept",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45935,
},
[32011] = {
["isChanneled"] = false,
["source"] = "Bound Water Elemental",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44886,
},
[21808] = {
["isChanneled"] = false,
["source"] = "Landslide",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 12203,
},
[11922] = {
["isChanneled"] = false,
["source"] = "Constrictor Vine",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 12220,
},
[13748] = {
["isChanneled"] = false,
["source"] = "Residual Monstrosity",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11484,
},
[8909] = {
["source"] = "Morbent Fel",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 43761,
},
[28858] = {
["isChanneled"] = false,
["source"] = "Ironbark Protector",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11459,
},
[17145] = {
["isChanneled"] = false,
["source"] = "Pusillin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 14354,
},
[22945] = {
["isChanneled"] = false,
["source"] = "Arcane Torrent",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 14399,
},
[11020] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sul'lithuz Sandcrawler",
["npcID"] = 8095,
},
[8989] = {
["isChanneled"] = false,
["source"] = "Herod",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3975,
},
[69897] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rockjaw Scavenger",
["npcID"] = 37105,
},
[22128] = {
["isChanneled"] = false,
["source"] = "Alzzin the Wildshaper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11492,
},
[11084] = {
["isChanneled"] = false,
["source"] = "Electrocutioner 6000",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 6235,
},
[9053] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Mosh'Ogg Spellcrafter",
["npcID"] = 710,
},
[86785] = {
["isChanneled"] = false,
["source"] = "Greater Quicksilver Ooze",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44988,
},
[5568] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Ramstein the Gorger",
["npcID"] = 10439,
},
[77977] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Amnennar the Coldbringer",
["npcID"] = 7358,
},
[22878] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Netherwalker",
["npcID"] = 14389,
},
[8994] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gordok Warlock",
["npcID"] = 11448,
},
[34517] = {
["isChanneled"] = false,
["source"] = "Scarlet Wizard",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 4300,
},
[16868] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Baroness Anastari",
["npcID"] = 10436,
},
[10094] = {
["isChanneled"] = false,
["source"] = "Ancient Stone Keeper",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 7206,
},
[77731] = {
["isChanneled"] = false,
["source"] = "Child of Tortolla",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 41581,
},
[12946] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Plaguemaw the Rotting",
["npcID"] = 7356,
},
[13323] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gordok Mage-Lord",
["npcID"] = 11444,
},
[13339] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Twilight Inferno Lord",
["npcID"] = 39974,
},
[32918] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Snow Tracker Wolf",
["npcID"] = 41478,
},
[32982] = {
["encounterName"] = "Cho'gall",
["source"] = "Fire Elemental Totem",
["npcID"] = 15439,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[66060] = {
["isChanneled"] = false,
["source"] = "Golden Eagle",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44628,
},
[103834] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Thrall",
["npcID"] = 55779,
},
[12541] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Thorn Eater Ghoul",
["npcID"] = 7348,
},
[76679] = {
["isChanneled"] = false,
["source"] = "Crimsonborne Warlord",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39626,
},
[76807] = {
["isChanneled"] = false,
["source"] = "Naz'jar Invader",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39616,
},
[93311] = {
["encounterName"] = "Cho'gall",
["source"] = "Shadow Lord",
["npcID"] = 43592,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1029,
},
[15530] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Amnennar the Coldbringer",
["npcID"] = 7358,
},
[88282] = {
["encounterName"] = "Altairus",
["type"] = "DEBUFF",
["source"] = "Air Current",
["encounterID"] = 1041,
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 47305,
},
[75272] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Rom'ogg Bonecrusher",
["npcID"] = 39665,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1040,
},
[12642] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Amnennar the Coldbringer",
["npcID"] = 7358,
},
[77234] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Earth Warden",
["npcID"] = 39801,
},
[6725] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Death's Head Geomancer",
["npcID"] = 7335,
},
[79878] = {
["isChanneled"] = false,
["source"] = "Stone Trogg Berserker",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43228,
},
[88194] = {
["isChanneled"] = false,
["source"] = "Young Storm Dragon",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45919,
},
[58506] = {
["encounterName"] = "Baron Silverlaine",
["source"] = "Bloodfang Berserker",
["encounterID"] = 1070,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47027,
},
[388131] = {
["source"] = "Pebble",
["type"] = "BUFF",
["event"] = "SPELL_AURA_APPLIED",
["npcID"] = 194870,
},
[74720] = {
["isChanneled"] = false,
["source"] = "Mekgineer Thermaplugg",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 7800,
},
[18396] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sandfury Shadowcaster",
["npcID"] = 5648,
},
[8600] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nekrum Gutchewer",
["npcID"] = 7796,
},
[17139] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Cho'Rush the Observer",
["npcID"] = 14324,
},
[9613] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skeletal Guardian",
["npcID"] = 10390,
},
[11876] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Shade of Eranikus",
["npcID"] = 5709,
},
[17235] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerub'enkan",
["npcID"] = 10437,
},
[15802] = {
["isChanneled"] = false,
["source"] = "Eldreth Phantasm",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 11475,
},
[17467] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Lord Aurius Rivendare",
["npcID"] = 45412,
},
[13787] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Skeletal Guardian",
["npcID"] = 10390,
},
[93952] = {
["encounterName"] = "Baron Silverlaine",
["source"] = "Odo the Blindwatcher",
["encounterID"] = 1070,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 50857,
},
[96127] = {
["isChanneled"] = false,
["source"] = "Troggzor the Earthinator",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43456,
},
[18327] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Baroness Anastari",
["npcID"] = 10436,
},
[7951] = {
["isChanneled"] = false,
["source"] = "Deviate Venomwing",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 5756,
},
[11820] = {
["isChanneled"] = false,
["source"] = "Mechanized Guardian",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 6234,
},
[7967] = {
["isChanneled"] = false,
["source"] = "Mutanus the Devourer",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 3654,
},
[53517] = {
["isChanneled"] = false,
["source"] = "McLovin",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43417,
},
[16869] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Maleki the Pallid",
["npcID"] = 10438,
},
[13444] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Rockwing Gargoyle",
["npcID"] = 10408,
},
[74634] = {
["encounterName"] = "General Umbriss",
["source"] = "General Umbriss",
["encounterID"] = 1051,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 39625,
},
[17439] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Black Guard Sentry",
["npcID"] = 10394,
},
[13445] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Bloodhound",
["npcID"] = 8921,
},
[85253] = {
["isChanneled"] = false,
["source"] = "Corpseweed",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 43732,
},
[91522] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Dark Creeper",
["npcID"] = 47132,
},
[93697] = {
["encounterName"] = "Lord Walden",
["source"] = "Lord Walden",
["npcID"] = 46963,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["encounterID"] = 1073,
},
[17843] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Sandfury Witch Doctor",
["npcID"] = 5650,
},
[17687] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Ramstein the Gorger",
["npcID"] = 10439,
},
[6016] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Nerub'enkan",
["npcID"] = 10437,
},
[79880] = {
["isChanneled"] = false,
["source"] = "Haethen Kaul",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 44835,
},
[17435] = {
["isChanneled"] = false,
["source"] = "Lord Aurius Rivendare",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 45412,
},
[16170] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Gordok Mage-Lord",
["npcID"] = 11444,
},
[76170] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["encounterID"] = 1046,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40825,
},
[10061] = {
["isChanneled"] = false,
["source"] = "Obsidian Sentinel",
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 7023,
},
[5708] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hakkari Frostwing",
["npcID"] = 5291,
},
[88836] = {
["encounterName"] = "Admiral Ripsnarl",
["source"] = "Admiral Ripsnarl",
["encounterID"] = 1062,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 47626,
},
[76682] = {
["encounterName"] = "Ascendant Lord Obsidius",
["source"] = "Twilight Element Warden",
["encounterID"] = 1036,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 40017,
},
[79002] = {
["encounterName"] = "High Priestess Azil",
["source"] = "High Priestess Azil",
["encounterID"] = 1057,
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["npcID"] = 42333,
},
[33126] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "DEBUFF",
["source"] = "Avatar of Hakkar",
["npcID"] = 8440,
},
[50831] = {
["event"] = "SPELL_AURA_APPLIED",
["type"] = "BUFF",
["source"] = "Sjonnir The Ironshaper",
["npcID"] = 27978,
},
[12884] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hazzas",
["npcID"] = 5722,
},
[12882] = {
["isChanneled"] = false,
["event"] = "SPELL_CAST_SUCCESS",
["source"] = "Hazzas",
["npcID"] = 5722,
},
},
["profileKeys"] = {
["Kodun - Firemaw"] = "Default",
["Filibaba - Pyrewood Village"] = "Default",
["Inputs - Firemaw"] = "Default",
["Wunderful - Firemaw"] = "Default",
["Jonaspik - Firemaw"] = "Default",
["Aiwa - Firemaw"] = "Default",
["Ostreicher - Firemaw"] = "Default",
},
["captured_casts"] = {
[59147] = {
["source"] = "Hardened Steel Skycaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 28580,
},
[59211] = {
["source"] = "Azure Ring Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 27638,
},
[79881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Vanquisher",
["npcID"] = 38913,
},
[69774] = {
["encounterName"] = "Rotface",
["source"] = "Little Ooze",
["encounterID"] = 850,
["event"] = "SPELL_CAST_START",
["npcID"] = 36897,
},
[76171] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["encounterID"] = 1046,
["event"] = "SPELL_CAST_START",
["npcID"] = 40825,
},
[16564] = {
["source"] = "Citadel Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 31787,
},
[14443] = {
["source"] = "Weapon Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 8920,
},
[3105] = {
["source"] = "Forlorn Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 2044,
},
[3109] = {
["source"] = "Weakened Morbent Fel",
["event"] = "SPELL_CAST_START",
["npcID"] = 1200,
},
[43667] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Prince Keleseth",
["encounterID"] = 571,
["event"] = "SPELL_CAST_START",
["npcID"] = 23953,
},
[8398] = {
["source"] = "Aku'mai Servant",
["event"] = "SPELL_CAST_START",
["npcID"] = 4978,
},
[33624] = {
["source"] = "Undercity Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 18971,
},
[31405] = {
["source"] = "Murkblood Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 17771,
},
[74509] = {
["encounterName"] = "Baltharus the Warborn",
["source"] = "Baltharus the Warborn",
["encounterID"] = 890,
["event"] = "SPELL_CAST_START",
["npcID"] = 39751,
},
[84872] = {
["source"] = "Nix",
["event"] = "SPELL_CAST_START",
["npcID"] = 45402,
},
[42580] = {
["event"] = "SPELL_CAST_START",
["source"] = "Theramore Marksman",
["npcID"] = 23900,
},
[59020] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitting Cobra",
["npcID"] = 29774,
},
[42708] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["npcID"] = 23954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 575,
},
[42772] = {
["source"] = "Dragonflayer Strategist",
["event"] = "SPELL_CAST_START",
["npcID"] = 23956,
},
[59212] = {
["source"] = "Azure Spellbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 27635,
},
[10733] = {
["source"] = "Inferno Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 5852,
},
[83849] = {
["source"] = "Spirit of Venoxis",
["event"] = "SPELL_CAST_START",
["npcID"] = 43839,
},
[79883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kavem the Callous",
["npcID"] = 47567,
},
[67729] = {
["encounterName"] = "The Black Knight",
["source"] = "Risen Arelas Brightstar",
["encounterID"] = 340,
["event"] = "SPELL_CAST_START",
["npcID"] = 35564,
},
[86408] = {
["encounterName"] = "Theralion and Valiona",
["source"] = "Theralion",
["npcID"] = 45993,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1032,
},
[92677] = {
["encounterName"] = "Atramedes",
["source"] = "Obnoxious Fiend",
["npcID"] = 49740,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1022,
},
[8814] = {
["source"] = "Bloodmage Thalnos",
["event"] = "SPELL_CAST_START",
["npcID"] = 4543,
},
[59852] = {
["encounterName"] = "Sjonnir the Ironshaper",
["source"] = "Forged Iron Trogg",
["encounterID"] = 569,
["event"] = "SPELL_CAST_START",
["npcID"] = 27979,
},
[70672] = {
["encounterName"] = "Professor Putricide",
["source"] = "Gas Cloud",
["encounterID"] = 851,
["event"] = "SPELL_CAST_START",
["npcID"] = 37562,
},
[55886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fiend of Earth",
["npcID"] = 30043,
},
[37591] = {
["source"] = "Bloodmaul Brewmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 19957,
},
[32173] = {
["source"] = "Coilfang Enchantress",
["event"] = "SPELL_CAST_START",
["npcID"] = 17961,
},
[11021] = {
["event"] = "SPELL_CAST_START",
["source"] = "Searing Whelp",
["npcID"] = 4324,
},
[11085] = {
["source"] = "Electrocutioner 6000",
["event"] = "SPELL_CAST_START",
["npcID"] = 6235,
},
[48530] = {
["source"] = "7th Legion Sentinel",
["event"] = "SPELL_CAST_START",
["npcID"] = 27162,
},
[80780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shrieking Banshee",
["npcID"] = 10463,
},
[73488] = {
["encounterName"] = "The Lich King",
["source"] = "Val'kyr Shadowguard",
["encounterID"] = 856,
["event"] = "SPELL_CAST_START",
["npcID"] = 36609,
},
[32749] = {
["source"] = "Scarlet Wizard",
["event"] = "SPELL_CAST_START",
["npcID"] = 4300,
},
[32858] = {
["event"] = "SPELL_CAST_START",
["source"] = "Auchenai Soulpriest",
["npcID"] = 18493,
},
[76047] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["encounterID"] = 1044,
["event"] = "SPELL_CAST_START",
["npcID"] = 40765,
},
[84491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pebble",
["npcID"] = 43116,
},
[74384] = {
["encounterName"] = "General Zarithrian",
["source"] = "General Zarithrian",
["encounterID"] = 893,
["event"] = "SPELL_CAST_START",
["npcID"] = 39746,
},
[43413] = {
["source"] = "Skadir Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 25522,
},
[80781] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rockwing Screecher",
["npcID"] = 10409,
},
[76815] = {
["source"] = "Naz'jar Spiritmender",
["event"] = "SPELL_CAST_START",
["npcID"] = 41096,
},
[20787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lethtendris",
["npcID"] = 14327,
},
[20819] = {
["source"] = "Eliza",
["event"] = "SPELL_CAST_START",
["npcID"] = 314,
},
[15547] = {
["source"] = "Sandfury Shadowhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 7246,
},
[83596] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priestess Lorthuna",
["npcID"] = 43837,
},
[50066] = {
["encounterName"] = "Deathbringer Saurfang",
["source"] = "Pumpkin Soldier",
["encounterID"] = 848,
["event"] = "SPELL_CAST_START",
["npcID"] = 27936,
},
[96134] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stone Drake",
["npcID"] = 42522,
},
[79886] = {
["source"] = "Stone Trogg Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 43234,
},
[15659] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirestone Mystic",
["npcID"] = 9198,
},
[58702] = {
["event"] = "SPELL_CAST_START",
["source"] = "Searing Totem X",
["npcID"] = 31165,
},
[50578] = {
["source"] = "Frozen Sphere",
["event"] = "SPELL_CAST_START",
["npcID"] = 28066,
},
[13692] = {
["source"] = "Bloodhound",
["event"] = "SPELL_CAST_START",
["npcID"] = 8921,
},
[3429] = {
["source"] = "Brain Eater",
["event"] = "SPELL_CAST_START",
["npcID"] = 570,
},
[21331] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deeprot Tangler",
["npcID"] = 13142,
},
[69012] = {
["encounterName"] = "Krick",
["source"] = "Krick",
["npcID"] = 36477,
["event"] = "SPELL_CAST_START",
["encounterID"] = 835,
},
[83597] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priestess Lorthuna",
["npcID"] = 43837,
},
[34842] = {
["source"] = "Uncontrolled Voidwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 16975,
},
[80015] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackrock Worg Captain",
["npcID"] = 43341,
},
[13900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Incendius",
["npcID"] = 9017,
},
[59726] = {
["encounterName"] = "Maiden of Grief",
["source"] = "Maiden of Grief",
["event"] = "SPELL_CAST_START",
["npcID"] = 27975,
},
[15979] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Aberration",
["npcID"] = 11480,
},
[59854] = {
["encounterName"] = "Novos the Summoner",
["source"] = "Novos the Summoner",
["npcID"] = 26631,
["event"] = "SPELL_CAST_START",
["encounterID"] = 371,
},
[6984] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razorfen Beast Trainer",
["npcID"] = 4531,
},
[81039] = {
["source"] = "Irradiated Slime",
["event"] = "SPELL_CAST_START",
["npcID"] = 6218,
},
[93449] = {
["event"] = "SPELL_CAST_START",
["source"] = "Schnottz Air Trooper",
["npcID"] = 46979,
},
[11981] = {
["source"] = "Sandfury Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 8876,
},
[89739] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["npcID"] = 47739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1060,
},
[48276] = {
["encounterName"] = "Svala Sorrowgrave",
["source"] = "Svala Sorrowgrave",
["event"] = "SPELL_CAST_START",
["npcID"] = 26668,
},
[54673] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zim'Torga Defender",
["npcID"] = 28387,
},
[54801] = {
["encounterName"] = "Drakkari Colossus",
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Elemental",
["npcID"] = 29573,
},
[83087] = {
["encounterName"] = "Ascendant Council",
["source"] = "Arion",
["npcID"] = 43688,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1028,
},
[71189] = {
["encounterName"] = "Valithria Dreamwalker",
["source"] = "Valithria Dreamwalker",
["encounterID"] = 854,
["event"] = "SPELL_CAST_START",
["npcID"] = 36789,
},
[59215] = {
["source"] = "Greater Ley-Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 28276,
},
[61326] = {
["source"] = "Azure Scale-Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 26735,
},
[51219] = {
["source"] = "Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 23689,
},
[32860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Auchenai Soulpriest",
["npcID"] = 18493,
},
[78098] = {
["encounterName"] = "Atramedes",
["source"] = "Atramedes",
["npcID"] = 41442,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1022,
},
[3605] = {
["source"] = "Goblin Engineer",
["event"] = "SPELL_CAST_START",
["npcID"] = 622,
},
[59727] = {
["encounterName"] = "Maiden of Grief",
["source"] = "Maiden of Grief",
["event"] = "SPELL_CAST_START",
["npcID"] = 27975,
},
[59855] = {
["encounterName"] = "Novos the Summoner",
["source"] = "Novos the Summoner",
["npcID"] = 26631,
["event"] = "SPELL_CAST_START",
["encounterID"] = 371,
},
[43543] = {
["source"] = "Ice Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 23919,
},
[20820] = {
["source"] = "High Priest Mu'funu",
["event"] = "SPELL_CAST_START",
["npcID"] = 28752,
},
[8399] = {
["source"] = "Twilight Lord Kelris",
["event"] = "SPELL_CAST_START",
["npcID"] = 4832,
},
[75412] = {
["source"] = "Charscale Invoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 40417,
},
[37786] = {
["source"] = "Bloodmaul Skirmisher",
["event"] = "SPELL_CAST_START",
["npcID"] = 19948,
},
[69527] = {
["event"] = "SPELL_CAST_START",
["source"] = "Iceborn Proto-Drake",
["npcID"] = 36891,
},
[54290] = {
["encounterName"] = "Hadronox",
["source"] = "Anub'ar Webspinner",
["encounterID"] = 217,
["event"] = "SPELL_CAST_START",
["npcID"] = 29335,
},
[52307] = {
["source"] = "Bittertide Hydra",
["event"] = "SPELL_CAST_START",
["npcID"] = 28003,
},
[31407] = {
["source"] = "Murkblood Spearman",
["event"] = "SPELL_CAST_START",
["npcID"] = 17729,
},
[68504] = {
["encounterName"] = "Grand Champions",
["source"] = "Mokra the Skullcrusher",
["encounterID"] = 334,
["event"] = "SPELL_CAST_START",
["npcID"] = 35572,
},
[17174] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarren Mill Lookout",
["npcID"] = 23178,
},
[59024] = {
["source"] = "Dark Rune Elementalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 27962,
},
[38618] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Commander",
["npcID"] = 27947,
},
[59152] = {
["source"] = "Stormforged Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 28835,
},
[75413] = {
["source"] = "Charscale Invoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 40417,
},
[59280] = {
["source"] = "Snowflake",
["event"] = "SPELL_CAST_START",
["npcID"] = 28153,
},
[69528] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ymirjar Deathbringer",
["npcID"] = 36892,
},
[88079] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Elementalist",
["npcID"] = 47152,
},
[5401] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thunderhead",
["npcID"] = 3239,
},
[43416] = {
["event"] = "SPELL_CAST_START",
["source"] = "Winterskorn Shield-Maiden",
["npcID"] = 23663,
},
[84881] = {
["source"] = "Haywire Battle-Chicken",
["event"] = "SPELL_CAST_START",
["npcID"] = 44616,
},
[93325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bound Rumbler",
["npcID"] = 49826,
},
[88080] = {
["source"] = "Whipping Wind",
["event"] = "SPELL_CAST_START",
["npcID"] = 47238,
},
[56402] = {
["source"] = "Icemane Yeti",
["event"] = "SPELL_CAST_START",
["npcID"] = 29875,
},
[70425] = {
["encounterName"] = "Overlrod Tyrannus",
["source"] = "Freed Alliance Slave",
["npcID"] = 37575,
["event"] = "SPELL_CAST_START",
["encounterID"] = 837,
},
[15228] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wildspawn Hellcaller",
["npcID"] = 11457,
},
[59281] = {
["encounterName"] = "Cyanigosa",
["source"] = "Cyanigosa",
["encounterID"] = 545,
["event"] = "SPELL_CAST_START",
["npcID"] = 31134,
},
[49110] = {
["source"] = "Wyrmrest Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 26933,
},
[74136] = {
["encounterName"] = "Isiset",
["source"] = "Isiset",
["npcID"] = 39587,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1077,
},
[74392] = {
["encounterName"] = "General Zarithrian",
["source"] = "Onyx Flamecaller",
["encounterID"] = 893,
["event"] = "SPELL_CAST_START",
["npcID"] = 39814,
},
[89105] = {
["source"] = "Lurking Tempest",
["event"] = "SPELL_CAST_START",
["npcID"] = 45704,
},
[7800] = {
["source"] = "Karrot",
["event"] = "SPELL_CAST_START",
["npcID"] = 416,
},
[88082] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirror Image",
["npcID"] = 47244,
},
[80022] = {
["source"] = "Captured Lashtail Hatchling",
["event"] = "SPELL_CAST_START",
["npcID"] = 42870,
},
[70043] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["npcID"] = 36497,
["event"] = "SPELL_CAST_START",
["encounterID"] = 829,
},
[48599] = {
["source"] = "Iron Rune Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 23796,
},
[29457] = {
["source"] = "Arch Mage Xintor",
["event"] = "SPELL_CAST_START",
["npcID"] = 16977,
},
[38556] = {
["source"] = "Kaskala Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 25764,
},
[31600] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crypt Crawler",
["npcID"] = 25227,
},
[71323] = {
["source"] = "Frostblade",
["event"] = "SPELL_CAST_START",
["npcID"] = 38199,
},
[59346] = {
["source"] = "Anub'ar Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 28922,
},
[53333] = {
["encounterName"] = "Hadronox",
["source"] = "Anub'ar Necromancer",
["encounterID"] = 217,
["event"] = "SPELL_CAST_START",
["npcID"] = 29064,
},
[34974] = {
["encounterName"] = "Swamplord Musel'ek",
["source"] = "Swamplord Musel'ek",
["encounterID"] = 1947,
["event"] = "SPELL_CAST_START",
["npcID"] = 17826,
},
[80279] = {
["source"] = "Stonecore Rift Conjurer",
["event"] = "SPELL_CAST_START",
["npcID"] = 42691,
},
[74394] = {
["encounterName"] = "General Zarithrian",
["source"] = "Onyx Flamecaller",
["encounterID"] = 893,
["event"] = "SPELL_CAST_START",
["npcID"] = 39814,
},
[71196] = {
["source"] = "Valithria Dreamwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 36789,
},
[69405] = {
["source"] = "Deathspeaker Servant",
["event"] = "SPELL_CAST_START",
["npcID"] = 36805,
},
[77721] = {
["source"] = "Nightbane Shadow Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 533,
},
[88084] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirror Image",
["npcID"] = 47243,
},
[84118] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostmane Snowstrider",
["npcID"] = 41122,
},
[48280] = {
["source"] = "Dragonflayer Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 23654,
},
[50583] = {
["source"] = "Coldarra Spellbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 25719,
},
[52758] = {
["source"] = "Zepik the Gorloc Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 28216,
},
[38557] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Vrykul",
["npcID"] = 23652,
},
[48920] = {
["encounterName"] = "King Dred",
["source"] = "King Dred",
["npcID"] = 27483,
["event"] = "SPELL_CAST_START",
["encounterID"] = 373,
},
[71325] = {
["source"] = "Frostwarden Warrior",
["event"] = "SPELL_CAST_START",
["npcID"] = 37228,
},
[59347] = {
["source"] = "Anub'ar Crypt Fiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 29118,
},
[2054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skeletal Healer",
["npcID"] = 787,
},
[59603] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Heartsplitter",
["npcID"] = 24071,
},
[43291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Berserker",
["npcID"] = 24216,
},
[22709] = {
["source"] = "Lethtendris",
["event"] = "SPELL_CAST_START",
["npcID"] = 14327,
},
[78746] = {
["encounterName"] = "Omnotron Defense System",
["source"] = "Electron",
["npcID"] = 42179,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1027,
},
[20822] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Mage",
["npcID"] = 1826,
},
[43803] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gjalerbron Gargoyle",
["npcID"] = 24440,
},
[71326] = {
["source"] = "Nerub'ar Webweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 37502,
},
[12542] = {
["source"] = "Skeletal Terror",
["event"] = "SPELL_CAST_START",
["npcID"] = 1785,
},
[31281] = {
["source"] = "Living Blood",
["event"] = "SPELL_CAST_START",
["npcID"] = 43123,
},
[38110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cobalt Serpent",
["npcID"] = 19428,
},
[72222] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tortured Rifleman",
["npcID"] = 38176,
},
[72350] = {
["encounterName"] = "The Lich King",
["source"] = "The Lich King",
["event"] = "SPELL_CAST_START",
["npcID"] = 36597,
},
[74525] = {
["encounterName"] = "Halion",
["source"] = "Halion",
["encounterID"] = 887,
["event"] = "SPELL_CAST_START",
["npcID"] = 39863,
},
[82841] = {
["source"] = "Deepstone Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 43026,
},
[29458] = {
["source"] = "Arch Mage Xintor",
["event"] = "SPELL_CAST_START",
["npcID"] = 16977,
},
[38558] = {
["source"] = "Freewheelin' Juntz Fitztittle",
["event"] = "SPELL_CAST_START",
["npcID"] = 43376,
},
[31601] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crypt Crawler",
["npcID"] = 10412,
},
[4338] = {
["event"] = "SPELL_CAST_START",
["source"] = "Geargrinder's Jumpbot",
["npcID"] = 31784,
},
[49113] = {
["source"] = "Wyrmrest Temple Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 26925,
},
[49241] = {
["source"] = "Ruby Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 27542,
},
[8800] = {
["source"] = "Venture Co. Strip Miner",
["event"] = "SPELL_CAST_START",
["npcID"] = 674,
},
[49753] = {
["source"] = "Iron Rune Runemaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 23675,
},
[15037] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scorching Totem",
["npcID"] = 9637,
},
[79900] = {
["encounterName"] = "Omnotron Defense System",
["source"] = "Electron",
["npcID"] = 42179,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1027,
},
[44188] = {
["source"] = "Dragonflayer Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 24533,
},
[32369] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Ethereal Apprentice",
["npcID"] = 18430,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1899,
},
[54615] = {
["source"] = "Shandaral Hunter Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 30864,
},
[78621] = {
["encounterName"] = "Nefarian's End",
["source"] = "Nefarian",
["npcID"] = 41376,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1026,
},
[80924] = {
["source"] = "Zanzil the Outcast",
["event"] = "SPELL_CAST_START",
["npcID"] = 43322,
},
[57046] = {
["source"] = "Crazed Mana-Surge",
["event"] = "SPELL_CAST_START",
["npcID"] = 26737,
},
[9232] = {
["source"] = "High Inquisitor Whitemane",
["event"] = "SPELL_CAST_START",
["npcID"] = 3977,
},
[22678] = {
["source"] = "High Inquisitor Fairbanks",
["event"] = "SPELL_CAST_START",
["npcID"] = 4542,
},
[70306] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostblade",
["npcID"] = 37670,
},
[86810] = {
["source"] = "Maziel",
["event"] = "SPELL_CAST_START",
["npcID"] = 44967,
},
[91032] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mine Bunny",
["npcID"] = 48338,
},
[20791] = {
["source"] = "Searing Blade Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 11324,
},
[20823] = {
["source"] = "Dark Iron Geologist",
["event"] = "SPELL_CAST_START",
["npcID"] = 5839,
},
[15549] = {
["source"] = "Margol the Rager",
["event"] = "SPELL_CAST_START",
["npcID"] = 5833,
},
[71330] = {
["source"] = "Frostwarden Sorceress",
["event"] = "SPELL_CAST_START",
["npcID"] = 37229,
},
[43997] = {
["source"] = "Vrykul Harpoon Gun",
["event"] = "SPELL_CAST_START",
["npcID"] = 27992,
},
[69923] = {
["source"] = "Kor'kron Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 37031,
},
[29427] = {
["source"] = "Murkblood Healer",
["event"] = "SPELL_CAST_START",
["npcID"] = 17730,
},
[52761] = {
["source"] = "Zepik the Gorloc Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 28216,
},
[58966] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Battle Rider",
["npcID"] = 29836,
},
[77216] = {
["source"] = "Dun Morogh Rifleman",
["event"] = "SPELL_CAST_START",
["npcID"] = 41898,
},
[15869] = {
["source"] = "Bloodmaul Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 19992,
},
[61461] = {
["source"] = "Frostbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 30286,
},
[90522] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Stormbreaker",
["npcID"] = 39962,
},
[59734] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["npcID"] = 23954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 575,
},
[47772] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["npcID"] = 26731,
["event"] = "SPELL_CAST_START",
["encounterID"] = 520,
},
[4962] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forgotten Depths High Priest",
["npcID"] = 30543,
},
[14030] = {
["source"] = "Anvilrage Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 8890,
},
[47964] = {
["source"] = "Belyal",
["event"] = "SPELL_CAST_START",
["npcID"] = 416,
},
[7057] = {
["source"] = "Haunted Servitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 3875,
},
[70053] = {
["source"] = "Sister Svalna",
["event"] = "SPELL_CAST_START",
["npcID"] = 37126,
},
[74403] = {
["encounterName"] = "Baltharus the Warborn",
["source"] = "Saviana Ragefire",
["event"] = "SPELL_CAST_START",
["npcID"] = 39747,
},
[76578] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Thundercaller",
["npcID"] = 40270,
},
[7121] = {
["source"] = "Shadowfang Moonwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 3853,
},
[50843] = {
["encounterName"] = "Krystallus",
["source"] = "Krystallus",
["npcID"] = 27977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 563,
},
[81440] = {
["source"] = "Millhouse Manastorm",
["event"] = "SPELL_CAST_START",
["npcID"] = 43391,
},
[59223] = {
["encounterName"] = "Mage-Lord Urom",
["source"] = "Phantasmal Cloudscraper",
["encounterID"] = 532,
["event"] = "SPELL_CAST_START",
["npcID"] = 27645,
},
[32722] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blistering Rot",
["npcID"] = 16901,
},
[30707] = {
["encounterName"] = "Omor the Unscarred",
["source"] = "Omor the Unscarred",
["encounterID"] = 1891,
["event"] = "SPELL_CAST_START",
["npcID"] = 17308,
},
[41056] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yorus the Flesh Harvester",
["npcID"] = 24214,
},
[61590] = {
["source"] = "Portal Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 30893,
},
[18649] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wildspawn Betrayer",
["npcID"] = 11454,
},
[59863] = {
["encounterName"] = "Tribunal of Ages",
["source"] = "Dark Rune Stormcaller",
["encounterID"] = 567,
["event"] = "SPELL_CAST_START",
["npcID"] = 27984,
},
[20792] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skeletal Mage",
["npcID"] = 203,
},
[20824] = {
["event"] = "SPELL_CAST_START",
["source"] = "Daggerspine Sorceress",
["npcID"] = 2596,
},
[49948] = {
["source"] = "Unstable Mur'ghoul",
["event"] = "SPELL_CAST_START",
["npcID"] = 23643,
},
[89757] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defias Cannon",
["npcID"] = 48266,
},
[77603] = {
["source"] = "Marsh Lasher",
["event"] = "SPELL_CAST_START",
["npcID"] = 41496,
},
[77731] = {
["source"] = "Child of Tortolla",
["event"] = "SPELL_CAST_START",
["npcID"] = 41581,
},
[71718] = {
["encounterName"] = "Blood Council",
["source"] = "Prince Taldaram",
["encounterID"] = 852,
["event"] = "SPELL_CAST_START",
["npcID"] = 37973,
},
[80546] = {
["source"] = "Wailing Weed",
["event"] = "SPELL_CAST_START",
["npcID"] = 40066,
},
[93468] = {
["encounterName"] = "Baron Ashbury",
["source"] = "Baron Ashbury",
["encounterID"] = 1069,
["event"] = "SPELL_CAST_START",
["npcID"] = 46962,
},
[81314] = {
["source"] = "Verlok Basilisk Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 42711,
},
[59160] = {
["source"] = "Stormforged Mender",
["event"] = "SPELL_CAST_START",
["npcID"] = 28582,
},
[59416] = {
["encounterName"] = "King Dred",
["source"] = "King Dred",
["npcID"] = 27483,
["event"] = "SPELL_CAST_START",
["encounterID"] = 373,
},
[61591] = {
["source"] = "Portal Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 30893,
},
[53467] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'arak",
["encounterID"] = 218,
["event"] = "SPELL_CAST_START",
["npcID"] = 29120,
},
[76325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Flame Caller",
["npcID"] = 39708,
},
[59800] = {
["encounterName"] = "Ionar",
["source"] = "Ionar",
["encounterID"] = 559,
["event"] = "SPELL_CAST_START",
["npcID"] = 28546,
},
[7489] = {
["source"] = "Wolf Master Nandos",
["event"] = "SPELL_CAST_START",
["npcID"] = 3927,
},
[83874] = {
["source"] = "Zen'Kiki",
["event"] = "SPELL_CAST_START",
["npcID"] = 44269,
},
[15230] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fel Lash",
["npcID"] = 13197,
},
[56858] = {
["source"] = "Twilight Worshipper",
["event"] = "SPELL_CAST_START",
["npcID"] = 30111,
},
[59033] = {
["source"] = "Dark Rune Scholar",
["event"] = "SPELL_CAST_START",
["npcID"] = 27964,
},
[83491] = {
["encounterName"] = "Ascendant Council",
["source"] = "Arion",
["npcID"] = 43688,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1028,
},
[71337] = {
["source"] = "Frostwarden Handler",
["event"] = "SPELL_CAST_START",
["npcID"] = 37531,
},
[61528] = {
["source"] = "Lightning Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 27972,
},
[88481] = {
["encounterName"] = "Foe Reaper 5000",
["source"] = "Foe Reaper 5000",
["npcID"] = 43778,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1063,
},
[55643] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ruins Dweller",
["npcID"] = 29920,
},
[76711] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Beguiler",
["npcID"] = 40167,
},
[20793] = {
["source"] = "Kobold Geomancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 476,
},
[20825] = {
["source"] = "Shadowforge Darkweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 2740,
},
[71594] = {
["source"] = "Captain Rupert",
["event"] = "SPELL_CAST_START",
["npcID"] = 37125,
},
[77991] = {
["encounterName"] = "Maloriak",
["source"] = "Maloriak",
["npcID"] = 41378,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1025,
},
[56539] = {
["source"] = "Freed Crusader",
["event"] = "SPELL_CAST_START",
["npcID"] = 30274,
},
[23224] = {
["encounterName"] = "Baron Silverlaine",
["source"] = "Baron Silverlaine",
["encounterID"] = 1070,
["event"] = "SPELL_CAST_START",
["npcID"] = 3887,
},
[76584] = {
["source"] = "Twilight Zealot",
["event"] = "SPELL_CAST_START",
["npcID"] = 39990,
},
[59034] = {
["source"] = "Dark Rune Shaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 27965,
},
[36645] = {
["source"] = "Irestone Rumbler",
["event"] = "SPELL_CAST_START",
["npcID"] = 42527,
},
[71339] = {
["encounterName"] = "Icecrown Gunship Battle",
["source"] = "Kor'kron Reaver",
["encounterID"] = 847,
["event"] = "SPELL_CAST_START",
["npcID"] = 36957,
},
[44961] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cursed Sea Dog",
["npcID"] = 24911,
},
[71595] = {
["source"] = "Captain Arnath",
["event"] = "SPELL_CAST_START",
["npcID"] = 37122,
},
[17435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Aurius Rivendare",
["npcID"] = 45412,
},
[80295] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ivoroc",
["npcID"] = 42767,
},
[15982] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cho'Rush the Observer",
["npcID"] = 14324,
},
[51742] = {
["source"] = "Hemet Nesingwary",
["event"] = "SPELL_CAST_START",
["npcID"] = 28451,
},
[83366] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stranglethorn Raptor",
["npcID"] = 685,
},
[69165] = {
["encounterName"] = "Festergut",
["source"] = "Festergut",
["encounterID"] = 849,
["event"] = "SPELL_CAST_START",
["npcID"] = 36626,
},
[93857] = {
["encounterName"] = "Baron Silverlaine",
["source"] = "Baron Silverlaine",
["npcID"] = 3887,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1070,
},
[17883] = {
["encounterName"] = "Rokmar the Crackler",
["source"] = "Coilfang Observer",
["encounterID"] = 1941,
["event"] = "SPELL_CAST_START",
["npcID"] = 17938,
},
[48096] = {
["encounterName"] = "Keristrasza",
["source"] = "Keristrasza",
["npcID"] = 26723,
["event"] = "SPELL_CAST_START",
["encounterID"] = 526,
},
[33895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gan'arg Sapper",
["npcID"] = 18827,
},
[50335] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rotting Abomination",
["npcID"] = 28023,
},
[70189] = {
["source"] = "Spire Gargoyle",
["event"] = "SPELL_CAST_START",
["npcID"] = 37544,
},
[38245] = {
["encounterName"] = "Talon King Ikiss",
["source"] = "Talon King Ikiss",
["npcID"] = 18473,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1902,
},
[8129] = {
["source"] = "Fallenroot Hellcaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 4799,
},
[56860] = {
["source"] = "Mage Hunter Initiate",
["event"] = "SPELL_CAST_START",
["npcID"] = 26728,
},
[42723] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["npcID"] = 23954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 575,
},
[67247] = {
["source"] = "Argent Lightwielder",
["event"] = "SPELL_CAST_START",
["npcID"] = 35309,
},
[51103] = {
["encounterName"] = "Mage-Lord Urom",
["source"] = "Mage-Lord Urom",
["encounterID"] = 532,
["event"] = "SPELL_CAST_START",
["npcID"] = 27655,
},
[61402] = {
["source"] = "Ring-Lord Sorceress",
["event"] = "SPELL_CAST_START",
["npcID"] = 27639,
},
[79913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthmender Norsala",
["npcID"] = 43503,
},
[61594] = {
["source"] = "Portal Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 30695,
},
[57628] = {
["encounterName"] = "Herald Volazj",
["source"] = "Twisted Visage",
["encounterID"] = 215,
["event"] = "SPELL_CAST_START",
["npcID"] = 30622,
},
[18651] = {
["source"] = "Rageclaw Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 29439,
},
[76715] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Beguiler",
["npcID"] = 40167,
},
[3110] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pagtik",
["npcID"] = 416,
},
[43619] = {
["source"] = "Blacksouled Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 23875,
},
[47777] = {
["event"] = "SPELL_CAST_START",
["source"] = "Horde Ranger",
["npcID"] = 26801,
},
[69167] = {
["encounterName"] = "Overlrod Tyrannus",
["source"] = "Scourgelord Tyrannus",
["npcID"] = 36658,
["event"] = "SPELL_CAST_START",
["encounterID"] = 837,
},
[12528] = {
["source"] = "Spectral Tutor",
["event"] = "SPELL_CAST_START",
["npcID"] = 10498,
},
[69679] = {
["encounterName"] = "Icecrown Gunship Battle",
["source"] = "Kor'kron Rocketeer",
["encounterID"] = 847,
["event"] = "SPELL_CAST_START",
["npcID"] = 36982,
},
[3146] = {
["source"] = "Old Icebeard",
["event"] = "SPELL_CAST_START",
["npcID"] = 1271,
},
[52383] = {
["encounterName"] = "Maiden of Grief",
["source"] = "Lightning Construct",
["npcID"] = 27972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 565,
},
[74157] = {
["source"] = "Scuttling Mechano-Tank",
["event"] = "SPELL_CAST_START",
["npcID"] = 39713,
},
[70447] = {
["encounterName"] = "Professor Putricide",
["source"] = "Volatile Ooze",
["encounterID"] = 851,
["event"] = "SPELL_CAST_START",
["npcID"] = 37697,
},
[58972] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Fire Weaver",
["npcID"] = 29822,
},
[48801] = {
["source"] = "Crusader Lord Dalfors",
["event"] = "SPELL_CAST_START",
["npcID"] = 31003,
},
[85544] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Portal Shaper",
["npcID"] = 45700,
},
[34984] = {
["encounterName"] = "Rokmar the Crackler",
["source"] = "Coilfang Ray",
["encounterID"] = 1941,
["event"] = "SPELL_CAST_START",
["npcID"] = 21128,
},
[74414] = {
["source"] = "Hinkles Fastblast",
["event"] = "SPELL_CAST_START",
["npcID"] = 39910,
},
[6466] = {
["source"] = "Goblin Woodcarver",
["event"] = "SPELL_CAST_START",
["npcID"] = 641,
},
[68785] = {
["encounterName"] = "Forgemaster Garfrost",
["source"] = "Forgemaster Garfrost",
["npcID"] = 36494,
["event"] = "SPELL_CAST_START",
["encounterID"] = 833,
},
[71088] = {
["source"] = "Pustulating Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 10404,
},
[17820] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vol'jin",
["npcID"] = 10540,
},
[33641] = {
["event"] = "SPELL_CAST_START",
["source"] = "Justinius the Harbinger",
["npcID"] = 18966,
},
[8994] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gordok Warlock",
["npcID"] = 11448,
},
[33961] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sethekk Initiate",
["npcID"] = 18318,
},
[74159] = {
["source"] = "Scuttling Mechano-Tank",
["event"] = "SPELL_CAST_START",
["npcID"] = 39713,
},
[78509] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonesplinter Scout",
["npcID"] = 1162,
},
[76590] = {
["source"] = "Faceless Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 40936,
},
[34345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Dark Shaman",
["npcID"] = 5860,
},
[58973] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari God Hunter",
["npcID"] = 29820,
},
[66867] = {
["encounterName"] = "Argent Champion",
["source"] = "Eadric the Pure",
["encounterID"] = 338,
["event"] = "SPELL_CAST_START",
["npcID"] = 35119,
},
[85802] = {
["source"] = "Stonescale Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 44148,
},
[59357] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Anub'ar Shadowcaster",
["encounterID"] = 216,
["event"] = "SPELL_CAST_START",
["npcID"] = 28733,
},
[75823] = {
["encounterName"] = "Corla, Herald of Twilight",
["source"] = "Corla, Herald of Twilight",
["encounterID"] = 1038,
["event"] = "SPELL_CAST_START",
["npcID"] = 39679,
},
[53472] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'arak",
["encounterID"] = 218,
["event"] = "SPELL_CAST_START",
["npcID"] = 29120,
},
[39207] = {
["source"] = "Bound Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 30419,
},
[76719] = {
["source"] = "Incendiary Spark",
["event"] = "SPELL_CAST_START",
["npcID"] = 40021,
},
[91304] = {
["encounterName"] = "Chimaeron",
["source"] = "Lord Victor Nefarius",
["npcID"] = 48964,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1023,
},
[22938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mana Burst",
["npcID"] = 14397,
},
[33642] = {
["event"] = "SPELL_CAST_START",
["source"] = "Melgromm Highmountain",
["npcID"] = 18969,
},
[44005] = {
["event"] = "SPELL_CAST_START",
["source"] = "Forsaken Plaguebringer",
["npcID"] = 23760,
},
[52257] = {
["source"] = "Frosthowl Screecher",
["event"] = "SPELL_CAST_START",
["npcID"] = 28170,
},
[58462] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Spellbreaker",
["npcID"] = 31009,
},
[86699] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pygmy Oaf",
["npcID"] = 48040,
},
[15743] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bloodaxe Evoker",
["npcID"] = 9693,
},
[68788] = {
["encounterName"] = "Forgemaster Garfrost",
["source"] = "Forgemaster Garfrost",
["npcID"] = 36494,
["event"] = "SPELL_CAST_START",
["encounterID"] = 833,
},
[59038] = {
["source"] = "Lightning Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 27972,
},
[59102] = {
["source"] = "Ahn'kahar Spell Flinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 30278,
},
[69172] = {
["encounterName"] = "Overlrod Tyrannus",
["source"] = "Scourgelord Tyrannus",
["npcID"] = 36658,
["event"] = "SPELL_CAST_START",
["encounterID"] = 837,
},
[73650] = {
["encounterName"] = "The Lich King",
["source"] = "Terenas Menethil",
["encounterID"] = 856,
["event"] = "SPELL_CAST_START",
["npcID"] = 39217,
},
[70196] = {
["source"] = "Sister Svalna",
["event"] = "SPELL_CAST_START",
["npcID"] = 37126,
},
[59742] = {
["encounterName"] = "Krystallus",
["source"] = "Krystallus",
["encounterID"] = 563,
["event"] = "SPELL_CAST_START",
["npcID"] = 27977,
},
[13952] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anvilrage Officer",
["npcID"] = 8895,
},
[11921] = {
["source"] = "Hellfire Familiar",
["event"] = "SPELL_CAST_START",
["npcID"] = 19016,
},
[39592] = {
["source"] = "Summoned Searing Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 22895,
},
[11969] = {
["source"] = "Bloodscalp Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 697,
},
[11985] = {
["source"] = "Greater Lava Spider",
["event"] = "SPELL_CAST_START",
["npcID"] = 5858,
},
[4979] = {
["source"] = "Defias Evoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 1729,
},
[54369] = {
["source"] = "Zuramat the Obliterator",
["event"] = "SPELL_CAST_START",
["npcID"] = 29314,
},
[78129] = {
["source"] = "Twilight Dragonkin Armorer",
["event"] = "SPELL_CAST_START",
["npcID"] = 41030,
},
[50403] = {
["source"] = "Savage Hill Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 29404,
},
[7106] = {
["source"] = "Shadowfang Wolfguard",
["event"] = "SPELL_CAST_START",
["npcID"] = 3854,
},
[52770] = {
["encounterName"] = "Ionar",
["source"] = "Ionar",
["encounterID"] = 559,
["event"] = "SPELL_CAST_START",
["npcID"] = 28546,
},
[91307] = {
["encounterName"] = "Chimaeron",
["source"] = "Lord Victor Nefarius",
["npcID"] = 48964,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1023,
},
[70965] = {
["source"] = "Nerub'ar Broodkeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 36725,
},
[77234] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Warden",
["npcID"] = 39801,
},
[59167] = {
["source"] = "Stormfury Revenant",
["event"] = "SPELL_CAST_START",
["npcID"] = 28826,
},
[7154] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eldreth Spectre",
["npcID"] = 11473,
},
[59359] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'ar Venomancer",
["encounterID"] = 218,
["event"] = "SPELL_CAST_START",
["npcID"] = 29217,
},
[10258] = {
["source"] = "Archaedas",
["event"] = "SPELL_CAST_START",
["npcID"] = 2748,
},
[51363] = {
["encounterName"] = "Novos the Summoner",
["source"] = "Risen Shadowcaster",
["encounterID"] = 371,
["event"] = "SPELL_CAST_START",
["npcID"] = 27600,
},
[22651] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zevrim Thornhoof",
["npcID"] = 11490,
},
[3606] = {
["source"] = "Searing Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 2523,
},
[59807] = {
["encounterName"] = "Trollgore",
["source"] = "Trollgore",
["encounterID"] = 369,
["event"] = "SPELL_CAST_START",
["npcID"] = 26630,
},
[5187] = {
["source"] = "Druid of the Fang",
["event"] = "SPELL_CAST_START",
["npcID"] = 3840,
},
[43559] = {
["source"] = "Necro Overlord Mezhen",
["event"] = "SPELL_CAST_START",
["npcID"] = 24018,
},
[22907] = {
["encounterName"] = "Swamplord Musel'ek",
["source"] = "Swamplord Musel'ek",
["encounterID"] = 1947,
["event"] = "SPELL_CAST_START",
["npcID"] = 17826,
},
[71350] = {
["source"] = "Frostwing Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 37532,
},
[8435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirestone Mystic",
["npcID"] = 9198,
},
[913] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murloc Tidecaller",
["npcID"] = 545,
},
[79922] = {
["source"] = "Stonecore Flayer",
["event"] = "SPELL_CAST_START",
["npcID"] = 42808,
},
[31287] = {
["source"] = "Thornvine Creeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 23874,
},
[52451] = {
["encounterName"] = "Salram the Fleshcrafter",
["source"] = "Salramm the Fleshcrafter",
["npcID"] = 26530,
["event"] = "SPELL_CAST_START",
["encounterID"] = 294,
},
[54626] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jin'Alai Medicine Man",
["npcID"] = 28504,
},
[73142] = {
["encounterName"] = "Lord Marrowgar",
["source"] = "Lord Marrowgar",
["encounterID"] = 845,
["event"] = "SPELL_CAST_START",
["npcID"] = 36612,
},
[25530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Searing Totem VII",
["npcID"] = 15480,
},
[49317] = {
["source"] = "Azure Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 27682,
},
[59616] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Runecaster",
["npcID"] = 23960,
},
[19645] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wailing Banshee",
["npcID"] = 10464,
},
[57825] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eldreth Apparition",
["npcID"] = 11471,
},
[74806] = {
["encounterName"] = "Halion",
["source"] = "Halion",
["encounterID"] = 887,
["event"] = "SPELL_CAST_START",
["npcID"] = 40142,
},
[939] = {
["source"] = "Torn Fin Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 2376,
},
[47782] = {
["event"] = "SPELL_CAST_START",
["source"] = "Plagued Dragonflayer Rune-Caster",
["npcID"] = 24198,
},
[83378] = {
["source"] = "Mokk the Savage",
["event"] = "SPELL_CAST_START",
["npcID"] = 1514,
},
[81459] = {
["source"] = "Stonecore Earthshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 43537,
},
[17950] = {
["source"] = "Darkmaster Gandling",
["event"] = "SPELL_CAST_START",
["npcID"] = 1853,
},
[8995] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Rifleman",
["npcID"] = 6523,
},
[413091] = {
["source"] = "Mirror Image",
["event"] = "SPELL_CAST_START",
["npcID"] = 205999,
},
[74551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Firecatcher",
["npcID"] = 39870,
},
[58849] = {
["encounterName"] = "Mal'ganis",
["source"] = "Mal'Ganis",
["npcID"] = 26533,
["event"] = "SPELL_CAST_START",
["encounterID"] = 296,
},
[66619] = {
["encounterName"] = "Argent Champion",
["source"] = "Memory of Cyanigosa",
["encounterID"] = 338,
["event"] = "SPELL_CAST_START",
["npcID"] = 35046,
},
[75063] = {
["encounterName"] = "Halion",
["source"] = "Halion",
["encounterID"] = 887,
["event"] = "SPELL_CAST_START",
["npcID"] = 40142,
},
[42729] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["npcID"] = 23954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 575,
},
[59169] = {
["source"] = "Storming Vortex",
["event"] = "SPELL_CAST_START",
["npcID"] = 28547,
},
[69562] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulguard Adept",
["npcID"] = 36620,
},
[59617] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Runecaster",
["npcID"] = 23960,
},
[59745] = {
["source"] = "Zuramat the Obliterator",
["event"] = "SPELL_CAST_START",
["npcID"] = 29314,
},
[74552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Earthshaper",
["npcID"] = 39890,
},
[20829] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Summoner",
["npcID"] = 8551,
},
[69051] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["encounterID"] = 831,
["event"] = "SPELL_CAST_START",
["npcID"] = 36502,
},
[50086] = {
["event"] = "SPELL_CAST_START",
["source"] = "Megalith",
["npcID"] = 24371,
},
[11538] = {
["source"] = "Desiccated Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 44315,
},
[72378] = {
["encounterName"] = "Deathbringer Saurfang",
["source"] = "Deathbringer Saurfang",
["encounterID"] = 848,
["event"] = "SPELL_CAST_START",
["npcID"] = 37813,
},
[60833] = {
["source"] = "Forgotten One",
["event"] = "SPELL_CAST_START",
["npcID"] = 30414,
},
[58850] = {
["encounterName"] = "Mal'ganis",
["source"] = "Mal'Ganis",
["npcID"] = 26533,
["event"] = "SPELL_CAST_START",
["encounterID"] = 296,
},
[72762] = {
["encounterName"] = "The Lich King",
["source"] = "The Lich King",
["encounterID"] = 856,
["event"] = "SPELL_CAST_START",
["npcID"] = 36597,
},
[13745] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Emissary",
["npcID"] = 8913,
},
[46824] = {
["source"] = "Keristrasza",
["event"] = "SPELL_CAST_START",
["npcID"] = 26206,
},
[85556] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight-Shifter",
["npcID"] = 45687,
},
[11762] = {
["event"] = "SPELL_CAST_START",
["source"] = "Karrot",
["npcID"] = 416,
},
[69564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulguard Adept",
["npcID"] = 36620,
},
[51494] = {
["source"] = "Dark Rune Giant",
["event"] = "SPELL_CAST_START",
["npcID"] = 27969,
},
[70460] = {
["source"] = "Frost Freeze Trap",
["event"] = "SPELL_CAST_START",
["npcID"] = 37744,
},
[76729] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Armsmaster",
["npcID"] = 41073,
},
[11922] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thistleshrub Dew Collector",
["npcID"] = 5481,
},
[11970] = {
["event"] = "SPELL_CAST_START",
["source"] = "Taragaman the Hungerer",
["npcID"] = 11520,
},
[11986] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ragefire Shaman",
["npcID"] = 11319,
},
[87988] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obsidian Colossus",
["npcID"] = 46646,
},
[54309] = {
["source"] = "Anub'ar Prime Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 29128,
},
[62625] = {
["source"] = "Ulduar Colossus",
["event"] = "SPELL_CAST_START",
["npcID"] = 33237,
},
[86581] = {
["source"] = "Jadecrest Basilisk",
["event"] = "SPELL_CAST_START",
["npcID"] = 43981,
},
[70589] = {
["source"] = "Image of Morlen Coldgrip",
["event"] = "SPELL_CAST_START",
["npcID"] = 37845,
},
[93362] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bound Inferno",
["npcID"] = 49817,
},
[55077] = {
["source"] = "Savage Worg",
["event"] = "SPELL_CAST_START",
["npcID"] = 29735,
},
[12258] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skeletal Summoner",
["npcID"] = 7342,
},
[18399] = {
["source"] = "Shadowmoon Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 17395,
},
[55269] = {
["event"] = "SPELL_CAST_START",
["source"] = "The Ocular",
["npcID"] = 29747,
},
[2055] = {
["source"] = "Twilight Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 4809,
},
[61730] = {
["source"] = "Snowplain Disciple",
["event"] = "SPELL_CAST_START",
["npcID"] = 26705,
},
[8292] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimlok",
["npcID"] = 4854,
},
[30937] = {
["source"] = "Shadowmoon Channeler",
["event"] = "SPELL_CAST_START",
["npcID"] = 17653,
},
[49704] = {
["event"] = "SPELL_CAST_START",
["source"] = "Darkweb Recluse",
["npcID"] = 26625,
},
[75068] = {
["source"] = "Ebon Slavehunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 42043,
},
[10435] = {
["source"] = "Searing Totem V",
["event"] = "SPELL_CAST_START",
["npcID"] = 7400,
},
[77627] = {
["source"] = "Twilight Scorchlord",
["event"] = "SPELL_CAST_START",
["npcID"] = 41500,
},
[87990] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obsidian Colossus",
["npcID"] = 46646,
},
[80058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Stormcaller",
["npcID"] = 39843,
},
[58532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Portal Keeper",
["npcID"] = 30695,
},
[88886] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neferset Scryer",
["npcID"] = 48625,
},
[42476] = {
["source"] = "Valgarde Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 23739,
},
[78907] = {
["source"] = "Ephram \"Midriff\" Moonfall",
["event"] = "SPELL_CAST_START",
["npcID"] = 43377,
},
[58980] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Medicine Man",
["npcID"] = 29826,
},
[59108] = {
["source"] = "Deep Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 30279,
},
[51112] = {
["encounterName"] = "Mage-Lord Urom",
["source"] = "Mage-Lord Urom",
["encounterID"] = 532,
["event"] = "SPELL_CAST_START",
["npcID"] = 27655,
},
[51240] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Drakkari Death Knight",
["npcID"] = 26830,
},
[70080] = {
["encounterName"] = "Escaped from Arthas",
["event"] = "SPELL_CAST_START",
["source"] = "Risen Witch Doctor",
["npcID"] = 36941,
},
[51496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Rune Shaper",
["npcID"] = 27965,
},
[86840] = {
["encounterName"] = "Theralion and Valiona",
["source"] = "Valiona",
["npcID"] = 45992,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1032,
},
[69057] = {
["encounterName"] = "Lord Marrowgar",
["source"] = "Lord Marrowgar",
["encounterID"] = 845,
["event"] = "SPELL_CAST_START",
["npcID"] = 36612,
},
[50025] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wintergrasp Catapult",
["npcID"] = 27881,
},
[50089] = {
["encounterName"] = "Novos the Summoner",
["source"] = "Novos the Summoner",
["encounterID"] = 371,
["event"] = "SPELL_CAST_START",
["npcID"] = 26631,
},
[79932] = {
["source"] = "Darkmaster Gandling",
["event"] = "SPELL_CAST_START",
["npcID"] = 44323,
},
[8996] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Rifleman",
["npcID"] = 6523,
},
[33969] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomwhisperer",
["npcID"] = 18981,
},
[46315] = {
["source"] = "Wooly Mammoth Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 25743,
},
[86585] = {
["source"] = "Twilight Scalesister",
["event"] = "SPELL_CAST_START",
["npcID"] = 43967,
},
[86713] = {
["event"] = "SPELL_CAST_START",
["source"] = "Boldrich Stonerender",
["npcID"] = 42923,
},
[56934] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["encounterID"] = 520,
["event"] = "SPELL_CAST_START",
["npcID"] = 26731,
},
[42669] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["npcID"] = 23954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 575,
},
[87481] = {
["source"] = "Flame Ascendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 40709,
},
[53096] = {
["source"] = "Quetz'lun's Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 28030,
},
[59301] = {
["encounterName"] = "King Ymiron",
["source"] = "King Ymiron",
["npcID"] = 26861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 583,
},
[59365] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Watcher Narjil",
["event"] = "SPELL_CAST_START",
["npcID"] = 28729,
},
[59685] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Strategist",
["npcID"] = 23956,
},
[70594] = {
["encounterName"] = "Lady Deathwhisper",
["source"] = "Cult Adherent",
["encounterID"] = 846,
["event"] = "SPELL_CAST_START",
["npcID"] = 37949,
},
[83004] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bound Air Elemental",
["npcID"] = 44885,
},
[47723] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["npcID"] = 26928,
["event"] = "SPELL_CAST_START",
["encounterID"] = 520,
},
[15537] = {
["source"] = "Shadowpriest Sezz'ziz",
["event"] = "SPELL_CAST_START",
["npcID"] = 7275,
},
[15585] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anvilrage Medic",
["npcID"] = 8894,
},
[25085] = {
["event"] = "SPELL_CAST_START",
["source"] = "Syndicate Conjuror",
["npcID"] = 2590,
},
[23102] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Vault Boneguard",
["npcID"] = 30312,
},
[86331] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Grand Vizier Ertan",
["encounterID"] = 1043,
["event"] = "SPELL_CAST_START",
["npcID"] = 43878,
},
[50538] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gorloc Steam Belcher",
["npcID"] = 25687,
},
[74561] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Stormbreaker",
["npcID"] = 39962,
},
[72898] = {
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 37994,
},
[85692] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomguard",
["npcID"] = 11859,
},
[83901] = {
["source"] = "King Mukla",
["event"] = "SPELL_CAST_START",
["npcID"] = 1559,
},
[59430] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'arak",
["npcID"] = 29120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 218,
},
[72259] = {
["encounterName"] = "The Lich King",
["source"] = "The Lich King",
["encounterID"] = 856,
["event"] = "SPELL_CAST_START",
["npcID"] = 36597,
},
[90938] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defias Blood Wizard",
["npcID"] = 48417,
},
[37361] = {
["source"] = "Lost Drakkari Spirit",
["event"] = "SPELL_CAST_START",
["npcID"] = 29129,
},
[16033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mogor",
["npcID"] = 18069,
},
[87356] = {
["source"] = "Core Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 46910,
},
[14034] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowforge Senator",
["npcID"] = 8904,
},
[73539] = {
["encounterName"] = "The Lich King",
["source"] = "The Lich King",
["encounterID"] = 856,
["event"] = "SPELL_CAST_START",
["npcID"] = 36597,
},
[69573] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wrathbone Coldwraith",
["npcID"] = 36842,
},
[32346] = {
["encounterName"] = "Exarch Maladaar",
["source"] = "Exarch Maladaar",
["npcID"] = 18373,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1889,
},
[46317] = {
["source"] = "Wooly Mammoth Bull",
["event"] = "SPELL_CAST_START",
["npcID"] = 25743,
},
[54633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kurzen Jungle Fighter",
["npcID"] = 937,
},
[65060] = {
["source"] = "Twilight Stormwaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 40575,
},
[71237] = {
["encounterName"] = "Lady Deathwhisper",
["source"] = "Cult Adherent",
["encounterID"] = 846,
["event"] = "SPELL_CAST_START",
["npcID"] = 37949,
},
[71621] = {
["encounterName"] = "Professor Putricide",
["source"] = "Professor Putricide",
["encounterID"] = 851,
["event"] = "SPELL_CAST_START",
["npcID"] = 36678,
},
[34931] = {
["source"] = "Ethereal Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 18331,
},
[69958] = {
["source"] = "Skybreaker Luminary",
["event"] = "SPELL_CAST_START",
["npcID"] = 37016,
},
[72133] = {
["encounterName"] = "The Lich King",
["source"] = "The Lich King",
["encounterID"] = 856,
["event"] = "SPELL_CAST_START",
["npcID"] = 36597,
},
[84799] = {
["encounterName"] = "Lockmaw",
["source"] = "Augh",
["npcID"] = 45379,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1054,
},
[49708] = {
["source"] = "Darkweb Recluse",
["event"] = "SPELL_CAST_START",
["npcID"] = 26625,
},
[20800] = {
["source"] = "Jergosh the Invoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 11518,
},
[37554] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crusader Lord Dalfors",
["npcID"] = 31003,
},
[10452] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthen Stonecarver",
["npcID"] = 7397,
},
[47981] = {
["encounterName"] = "Ormorok the Tree-Shaper",
["source"] = "Ormorok the Tree-Shaper",
["npcID"] = 26794,
["event"] = "SPELL_CAST_START",
["encounterID"] = 524,
},
[50092] = {
["source"] = "7th Legion Rifleman",
["event"] = "SPELL_CAST_START",
["npcID"] = 27791,
},
[23039] = {
["event"] = "SPELL_CAST_START",
["source"] = "Searing Ghoul",
["npcID"] = 1795,
},
[33844] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ancient Watcher",
["npcID"] = 31229,
},
[80066] = {
["event"] = "SPELL_CAST_START",
["source"] = "Howling Riftdweller",
["npcID"] = 39844,
},
[76100] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["encounterID"] = 1044,
["event"] = "SPELL_CAST_START",
["npcID"] = 40765,
},
[90557] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["npcID"] = 47739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1060,
},
[50476] = {
["source"] = "Mage-Lord Urom",
["event"] = "SPELL_CAST_START",
["npcID"] = 27655,
},
[82625] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonesplinter Bonesnapper",
["npcID"] = 1164,
},
[12675] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warder Stilgiss",
["npcID"] = 9041,
},
[56937] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["encounterID"] = 520,
["event"] = "SPELL_CAST_START",
["npcID"] = 26930,
},
[12739] = {
["source"] = "Shadowmoon Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 17371,
},
[31707] = {
["source"] = "Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 510,
},
[59368] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Krik'thir the Gatewatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 28684,
},
[80195] = {
["source"] = "Stonecore Bruiser",
["event"] = "SPELL_CAST_START",
["npcID"] = 42692,
},
[7483] = {
["source"] = "Odo the Blindwatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 4279,
},
[80835] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Crystal-walker",
["npcID"] = 43373,
},
[93629] = {
["encounterName"] = "Lord Godfrey",
["source"] = "Lord Godfrey",
["npcID"] = 46964,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1072,
},
[58153] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reanimated Crusader",
["npcID"] = 30202,
},
[69577] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathwhisper Necrolyte",
["npcID"] = 36788,
},
[69705] = {
["encounterName"] = "Icecrown Gunship Battle",
["source"] = "Kor'kron Battle-Mage",
["encounterID"] = 847,
["event"] = "SPELL_CAST_START",
["npcID"] = 37117,
},
[8997] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Rifleman",
["npcID"] = 6523,
},
[58537] = {
["source"] = "Portal Keeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 30893,
},
[90559] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["npcID"] = 47739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1060,
},
[15234] = {
["source"] = "Coilfang Enchantress",
["event"] = "SPELL_CAST_START",
["npcID"] = 17961,
},
[56938] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["encounterID"] = 520,
["event"] = "SPELL_CAST_START",
["npcID"] = 26928,
},
[48878] = {
["encounterName"] = "King Dred",
["source"] = "King Dred",
["npcID"] = 27483,
["event"] = "SPELL_CAST_START",
["encounterID"] = 373,
},
[59241] = {
["source"] = "Ymirjar Flesh Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 26670,
},
[59305] = {
["encounterName"] = "King Ymiron",
["source"] = "King Ymiron",
["npcID"] = 26861,
["event"] = "SPELL_CAST_START",
["encounterID"] = 583,
},
[59433] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'arak",
["npcID"] = 29120,
["event"] = "SPELL_CAST_START",
["encounterID"] = 218,
},
[65868] = {
["encounterName"] = "Grand Champions",
["source"] = "Zul'tore",
["encounterID"] = 334,
["event"] = "SPELL_CAST_START",
["npcID"] = 35570,
},
[90560] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["npcID"] = 47739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1060,
},
[80453] = {
["source"] = "Agitated Tunneler",
["event"] = "SPELL_CAST_START",
["npcID"] = 43031,
},
[7739] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stonevault Flameweaver",
["npcID"] = 7321,
},
[84931] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Erunak Stonespeaker",
["encounterID"] = 1046,
["event"] = "SPELL_CAST_START",
["npcID"] = 40825,
},
[83012] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vale Howler",
["npcID"] = 43050,
},
[20801] = {
["event"] = "SPELL_CAST_START",
["source"] = "Imp Minion",
["npcID"] = 12922,
},
[68939] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["encounterID"] = 831,
["event"] = "SPELL_CAST_START",
["npcID"] = 36502,
},
[69195] = {
["encounterName"] = "Festergut",
["source"] = "Festergut",
["encounterID"] = 849,
["event"] = "SPELL_CAST_START",
["npcID"] = 36626,
},
[15586] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anvilrage Medic",
["npcID"] = 8894,
},
[50094] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rocknar",
["npcID"] = 25514,
},
[84036] = {
["source"] = "Stormcaller Mylra",
["event"] = "SPELL_CAST_START",
["npcID"] = 44956,
},
[33974] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gan'arg Sapper",
["npcID"] = 18827,
},
[76820] = {
["source"] = "Naz'jar Spiritmender",
["event"] = "SPELL_CAST_START",
["npcID"] = 41096,
},
[50198] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mage Hunter Initiate",
["npcID"] = 26728,
},
[9573] = {
["event"] = "SPELL_CAST_START",
["source"] = "Plagued Proto-Dragon",
["npcID"] = 23680,
},
[16000] = {
["source"] = "Celebrian Dryad",
["event"] = "SPELL_CAST_START",
["npcID"] = 11793,
},
[8272] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razorfen Earthbreaker",
["npcID"] = 4525,
},
[31516] = {
["source"] = "Twilight Saboteur",
["event"] = "SPELL_CAST_START",
["npcID"] = 42885,
},
[8259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razorfen Spearhide",
["npcID"] = 4438,
},
[76682] = {
["source"] = "Twilight Element Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 40017,
},
[69068] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulguard Adept",
["npcID"] = 36620,
},
[82883] = {
["source"] = "Abyssion",
["event"] = "SPELL_CAST_START",
["npcID"] = 44289,
},
[8286] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aggem Thorncurse",
["npcID"] = 4424,
},
[5884] = {
["event"] = "SPELL_CAST_START",
["source"] = "Torn Screamer",
["npcID"] = 8540,
},
[59370] = {
["encounterName"] = "Drakos the Interrogator",
["source"] = "Drakos the Interrogator",
["encounterID"] = 528,
["event"] = "SPELL_CAST_START",
["npcID"] = 27654,
},
[69708] = {
["encounterName"] = "Escaped from Arthas",
["event"] = "SPELL_CAST_START",
["source"] = "Lady Jaina Proudmoore",
["npcID"] = 36955,
},
[34934] = {
["source"] = "Ethereal Wraith",
["event"] = "SPELL_CAST_START",
["npcID"] = 18394,
},
[86340] = {
["encounterName"] = "Grand Vizier Ertan",
["source"] = "Grand Vizier Ertan",
["npcID"] = 43878,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1043,
},
[77626] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enslaved Alliance Mage",
["npcID"] = 41527,
},
[7979] = {
["source"] = "Venture Co. Tinkerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 677,
},
[15970] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wrathtail Priestess",
["npcID"] = 3944,
},
[11892] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grimlok",
["npcID"] = 4854,
},
[81713] = {
["encounterName"] = "Cho'gall",
["source"] = "Corrupting Adherent",
["npcID"] = 43622,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1029,
},
[49711] = {
["source"] = "Clam Master K",
["event"] = "SPELL_CAST_START",
["npcID"] = 25800,
},
[55916] = {
["event"] = "SPELL_CAST_START",
["source"] = "Duke Singen",
["npcID"] = 30019,
},
[55980] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enormos",
["npcID"] = 30021,
},
[38047] = {
["source"] = "Azure Spellbinder",
["event"] = "SPELL_CAST_START",
["npcID"] = 27635,
},
[86816] = {
["source"] = "Dragul Giantbutcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 42921,
},
[16098] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadow Hunter Vosh'gajin",
["npcID"] = 9236,
},
[38238] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cobalt Serpent",
["npcID"] = 19428,
},
[82876] = {
["source"] = "Abyssion",
["event"] = "SPELL_CAST_START",
["npcID"] = 44289,
},
[69389] = {
["source"] = "Deathspeaker Disciple",
["event"] = "SPELL_CAST_START",
["npcID"] = 36807,
},
[84913] = {
["encounterName"] = "Ascendant Council",
["source"] = "Elementium Monstrosity",
["npcID"] = 43735,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1028,
},
[82746] = {
["encounterName"] = "Ascendant Council",
["source"] = "Feludius",
["npcID"] = 43687,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1028,
},
[76560] = {
["source"] = "Gilgoblin Aquamage",
["event"] = "SPELL_CAST_START",
["npcID"] = 40943,
},
[72268] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tortured Rifleman",
["npcID"] = 38176,
},
[86725] = {
["event"] = "SPELL_CAST_START",
["source"] = "Desecrated Earthrager",
["npcID"] = 44683,
},
[49555] = {
["encounterName"] = "Trollgore",
["source"] = "Trollgore",
["encounterID"] = 369,
["event"] = "SPELL_CAST_START",
["npcID"] = 26630,
},
[413172] = {
["event"] = "SPELL_CAST_START",
["source"] = "Immortal Crusher Tentacle",
["npcID"] = 206038,
},
[30493] = {
["source"] = "Talrendis Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 36660,
},
[82631] = {
["encounterName"] = "Ascendant Council",
["source"] = "Ignacious",
["npcID"] = 43686,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1028,
},
[93377] = {
["event"] = "SPELL_CAST_START",
["source"] = "Evolved Drakonaar",
["npcID"] = 49813,
},
[84869] = {
["source"] = "Golden Eagle",
["event"] = "SPELL_CAST_START",
["npcID"] = 44628,
},
[59179] = {
["source"] = "Titanium Thunderer",
["event"] = "SPELL_CAST_START",
["npcID"] = 28965,
},
[59243] = {
["source"] = "Ymirjar Flesh Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 26670,
},
[82752] = {
["encounterName"] = "Ascendant Council",
["source"] = "Feludius",
["npcID"] = 43687,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1028,
},
[69582] = {
["event"] = "SPELL_CAST_START",
["source"] = "Plagueborn Horror",
["npcID"] = 36879,
},
[18327] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baroness Anastari",
["npcID"] = 10436,
},
[32888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Soul",
["npcID"] = 18506,
},
[8246] = {
["source"] = "Cloud Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 4117,
},
[90680] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["npcID"] = 47739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1060,
},
[51503] = {
["source"] = "Dark Rune Controller",
["event"] = "SPELL_CAST_START",
["npcID"] = 27966,
},
[7967] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mutanus the Devourer",
["npcID"] = 3654,
},
[82760] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neferset Darkcaster",
["npcID"] = 44982,
},
[69574] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wrathbone Coldwraith",
["npcID"] = 36842,
},
[7951] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deviate Venomwing",
["npcID"] = 5756,
},
[47729] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["npcID"] = 26930,
["event"] = "SPELL_CAST_START",
["encounterID"] = 520,
},
[12468] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jammal'an the Prophet",
["npcID"] = 5710,
},
[83862] = {
["encounterName"] = "Halfus Wyrmbreaker",
["source"] = "Proto-Behemoth",
["npcID"] = 44687,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1030,
},
[22945] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcane Torrent",
["npcID"] = 14399,
},
[3131] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wendigo",
["npcID"] = 1135,
},
[16868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Baroness Anastari",
["npcID"] = 10436,
},
[69583] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ymirjar Flamebearer",
["npcID"] = 36893,
},
[54318] = {
["source"] = "Argent Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 29337,
},
[69839] = {
["encounterName"] = "Rotface",
["source"] = "Big Ooze",
["encounterID"] = 850,
["event"] = "SPELL_CAST_START",
["npcID"] = 36899,
},
[69967] = {
["source"] = "Kor'kron Templar",
["event"] = "SPELL_CAST_START",
["npcID"] = 37034,
},
[50416] = {
["source"] = "Coldarra Wyrmkin",
["event"] = "SPELL_CAST_START",
["npcID"] = 25728,
},
[96127] = {
["source"] = "Troggzor the Earthinator",
["event"] = "SPELL_CAST_START",
["npcID"] = 43456,
},
[70351] = {
["encounterName"] = "Professor Putricide",
["source"] = "Professor Putricide",
["encounterID"] = 851,
["event"] = "SPELL_CAST_START",
["npcID"] = 36678,
},
[34232] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Elf Mage-Priest",
["npcID"] = 27747,
},
[76307] = {
["encounterName"] = "Mindbender Ghur'sha",
["source"] = "Mindbender Ghur'sha",
["encounterID"] = 1046,
["event"] = "SPELL_CAST_START",
["npcID"] = 40788,
},
[8598] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wrathtail Sea Witch",
["npcID"] = 3715,
},
[59210] = {
["source"] = "Azure Ley-Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 27636,
},
[86058] = {
["encounterName"] = "Halfus Wyrmbreaker",
["source"] = "Proto-Behemoth",
["npcID"] = 44687,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1030,
},
[42740] = {
["source"] = "Dragonflayer Runecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 23960,
},
[59244] = {
["source"] = "Ymirjar Flesh Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 26670,
},
[89798] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Victor Nefarius",
["npcID"] = 49799,
},
[53167] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Rune Theurgist",
["npcID"] = 27963,
},
[59372] = {
["encounterName"] = "Varos Cloudstrider",
["source"] = "Varos Cloudstrider",
["encounterID"] = 530,
["event"] = "SPELL_CAST_START",
["npcID"] = 27447,
},
[69712] = {
["encounterName"] = "Sindragosa",
["source"] = "Sindragosa",
["encounterID"] = 855,
["event"] = "SPELL_CAST_START",
["npcID"] = 36853,
},
[87870] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wind Breaker",
["npcID"] = 47151,
},
[69968] = {
["source"] = "Kor'kron Primalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 37030,
},
[72143] = {
["encounterName"] = "The Lich King",
["source"] = "Shambling Horror",
["encounterID"] = 856,
["event"] = "SPELL_CAST_START",
["npcID"] = 37698,
},
[35511] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tarren Mill Lookout",
["npcID"] = 23177,
},
[86728] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Soulreaper",
["npcID"] = 42916,
},
[90950] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Valiona",
["npcID"] = 40320,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[9613] = {
["source"] = "Nazzivus Felsworn",
["event"] = "SPELL_CAST_START",
["npcID"] = 17339,
},
[83018] = {
["source"] = "Magmatooth",
["event"] = "SPELL_CAST_START",
["npcID"] = 45099,
},
[82848] = {
["encounterName"] = "Chimaeron",
["source"] = "Chimaeron",
["npcID"] = 43296,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1023,
},
[32093] = {
["source"] = "Emperor Cobra",
["event"] = "SPELL_CAST_START",
["npcID"] = 28011,
},
[15043] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Emissary",
["npcID"] = 8913,
},
[44433] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scuttle Frostprow",
["npcID"] = 24784,
},
[71376] = {
["source"] = "Rimefang",
["event"] = "SPELL_CAST_START",
["npcID"] = 37533,
},
[76717] = {
["source"] = "Defiled Earth Rager",
["event"] = "SPELL_CAST_START",
["npcID"] = 40023,
},
[77773] = {
["source"] = "Scarlet Scryer",
["event"] = "SPELL_CAST_START",
["npcID"] = 4293,
},
[52493] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Watcher Silthik",
["encounterID"] = 216,
["event"] = "SPELL_CAST_START",
["npcID"] = 28731,
},
[77896] = {
["encounterName"] = "Maloriak",
["source"] = "Maloriak",
["npcID"] = 41378,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1025,
},
[76963] = {
["source"] = "Wormwing Screecher",
["event"] = "SPELL_CAST_START",
["npcID"] = 41027,
},
[37488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Terrorfiend",
["npcID"] = 16951,
},
[88253] = {
["encounterName"] = "Magmaw",
["source"] = "Magmaw",
["npcID"] = 41570,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1024,
},
[83844] = {
["source"] = "Anduin Wrynn",
["event"] = "SPELL_CAST_START",
["npcID"] = 44293,
},
[69387] = {
["source"] = "Deathspeaker Attendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 36811,
},
[38391] = {
["source"] = "Searing Destroyer",
["event"] = "SPELL_CAST_START",
["npcID"] = 46260,
},
[90932] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defias Blood Wizard",
["npcID"] = 48417,
},
[75272] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Rom'ogg Bonecrusher",
["encounterID"] = 1040,
["event"] = "SPELL_CAST_START",
["npcID"] = 39665,
},
[20735] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illyanna Ravenoak",
["npcID"] = 11488,
},
[43665] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Heartsplitter",
["npcID"] = 24071,
},
[92426] = {
["encounterName"] = "Ozruk",
["source"] = "Ozruk",
["npcID"] = 42188,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1058,
},
[55982] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enormos",
["npcID"] = 30021,
},
[30686] = {
["encounterName"] = "Omor the Unscarred",
["source"] = "Omor the Unscarred",
["encounterID"] = 1891,
["event"] = "SPELL_CAST_START",
["npcID"] = 17308,
},
[6660] = {
["source"] = "Deth'ryll Satyr",
["event"] = "SPELL_CAST_START",
["npcID"] = 2212,
},
[86830] = {
["source"] = "Millhouse Manastorm",
["event"] = "SPELL_CAST_START",
["npcID"] = 43391,
},
[90555] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["npcID"] = 47739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1060,
},
[69970] = {
["source"] = "Kor'kron Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 37031,
},
[87859] = {
["encounterName"] = "Glubtok",
["source"] = "Glubtok",
["npcID"] = 47162,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1064,
},
[84490] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pebble",
["npcID"] = 43116,
},
[78542] = {
["source"] = "Naias",
["event"] = "SPELL_CAST_START",
["npcID"] = 17207,
},
[3359] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kurzen Medicine Man",
["npcID"] = 940,
},
[11397] = {
["event"] = "SPELL_CAST_START",
["source"] = "Withered Spearhide",
["npcID"] = 7332,
},
[79379] = {
["source"] = "Gilblin Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 40811,
},
[47731] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["npcID"] = 26929,
["event"] = "SPELL_CAST_START",
["encounterID"] = 520,
},
[93757] = {
["encounterName"] = "Baron Ashbury",
["source"] = "Baron Ashbury",
["npcID"] = 46962,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1069,
},
[22914] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illyanna Ravenoak",
["npcID"] = 11488,
},
[22946] = {
["source"] = "Arcane Torrent",
["event"] = "SPELL_CAST_START",
["npcID"] = 14399,
},
[15587] = {
["source"] = "Twilight Lord Kelris",
["event"] = "SPELL_CAST_START",
["npcID"] = 4832,
},
[16869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maleki the Pallid",
["npcID"] = 10438,
},
[88010] = {
["source"] = "Wild Vortex",
["event"] = "SPELL_CAST_START",
["npcID"] = 45912,
},
[72262] = {
["encounterName"] = "The Lich King",
["source"] = "The Lich King",
["encounterID"] = 856,
["event"] = "SPELL_CAST_START",
["npcID"] = 36597,
},
[79413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilblin Collector",
["npcID"] = 41017,
},
[33325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Auchenai Necromancer",
["npcID"] = 18702,
},
[76826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight War-Mage",
["npcID"] = 40268,
},
[88495] = {
["encounterName"] = "Foe Reaper 5000",
["source"] = "Foe Reaper 5000",
["npcID"] = 43778,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1063,
},
[60781] = {
["source"] = "Forgotten Depths Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 30205,
},
[82765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neferset Darkcaster",
["npcID"] = 44982,
},
[91038] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mining Monkey",
["npcID"] = 48442,
},
[91849] = {
["encounterName"] = "Omnotron Defense System",
["source"] = "Lord Victor Nefarius",
["npcID"] = 49226,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1027,
},
[42870] = {
["source"] = "Dragonflayer Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 24051,
},
[13748] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Emissary",
["npcID"] = 8913,
},
[71123] = {
["source"] = "Stinky",
["event"] = "SPELL_CAST_START",
["npcID"] = 37025,
},
[59182] = {
["source"] = "Unbound Firestorm",
["event"] = "SPELL_CAST_START",
["npcID"] = 28584,
},
[59246] = {
["encounterName"] = "Skadi the Ruthless",
["source"] = "Ymirjar Witch Doctor",
["encounterID"] = 581,
["event"] = "SPELL_CAST_START",
["npcID"] = 26691,
},
[72840] = {
["encounterName"] = "Professor Putricide",
["source"] = "Professor Putricide",
["encounterID"] = 851,
["event"] = "SPELL_CAST_START",
["npcID"] = 36678,
},
[9734] = {
["source"] = "Murta Grimgut",
["event"] = "SPELL_CAST_START",
["npcID"] = 7608,
},
[87861] = {
["encounterName"] = "Glubtok",
["source"] = "Glubtok",
["npcID"] = 47162,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1064,
},
[13860] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haunting Vision",
["npcID"] = 4472,
},
[69972] = {
["source"] = "Kor'kron Necrolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 37149,
},
[3443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defias Enchanter",
["npcID"] = 910,
},
[76369] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azureborne Seer",
["npcID"] = 40291,
},
[53617] = {
["encounterName"] = "Anub'arak",
["source"] = "Anub'ar Venomancer",
["encounterID"] = 218,
["event"] = "SPELL_CAST_START",
["npcID"] = 29217,
},
[57775] = {
["encounterName"] = "Herald Volazj",
["source"] = "Twisted Visage",
["encounterID"] = 215,
["event"] = "SPELL_CAST_START",
["npcID"] = 30625,
},
[86785] = {
["source"] = "Mercurial Ooze",
["event"] = "SPELL_CAST_START",
["npcID"] = 43158,
},
[47668] = {
["source"] = "Drakkari Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 26620,
},
[81320] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungalmancer Glop",
["npcID"] = 43372,
},
[49843] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blood Shade",
["npcID"] = 24872,
},
[89538] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temple Fireshaper",
["npcID"] = 48143,
},
[76184] = {
["encounterName"] = "Anraphet",
["source"] = "Anraphet",
["npcID"] = 39788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1075,
},
[17285] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chromie",
["npcID"] = 10667,
},
[90398] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defias Squallshaper",
["npcID"] = 48521,
},
[33787] = {
["source"] = "Coilfang Collaborator",
["event"] = "SPELL_CAST_START",
["npcID"] = 17962,
},
[20794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Infiltrator",
["npcID"] = 40882,
},
[83593] = {
["event"] = "SPELL_CAST_START",
["source"] = "High Priestess Lorthuna",
["npcID"] = 43837,
},
[7068] = {
["source"] = "Baron Silverlaine",
["event"] = "SPELL_CAST_START",
["npcID"] = 3887,
},
[93505] = {
["encounterName"] = "Lord Walden",
["source"] = "Lord Walden",
["npcID"] = 46963,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1073,
},
[76370] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azureborne Seer",
["npcID"] = 40291,
},
[75664] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["npcID"] = 40484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1049,
},
[18149] = {
["source"] = "Lorekeeper Polkelt",
["event"] = "SPELL_CAST_START",
["npcID"] = 10901,
},
[72014] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthmender Norsala",
["npcID"] = 43503,
},
[83915] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vicious Mindlasher",
["npcID"] = 44715,
},
[7124] = {
["source"] = "Son of Arugal",
["event"] = "SPELL_CAST_START",
["npcID"] = 2529,
},
[68950] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["npcID"] = 36497,
["event"] = "SPELL_CAST_START",
["encounterID"] = 829,
},
[34163] = {
["source"] = "Underbog Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 17871,
},
[71253] = {
["source"] = "Ymirjar Huntress",
["event"] = "SPELL_CAST_START",
["npcID"] = 37134,
},
[59247] = {
["encounterName"] = "Skadi the Ruthless",
["source"] = "Ymirjar Witch Doctor",
["encounterID"] = 581,
["event"] = "SPELL_CAST_START",
["npcID"] = 26691,
},
[83791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haethen Kaul",
["npcID"] = 44835,
},
[76579] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Thundercaller",
["npcID"] = 40270,
},
[36922] = {
["source"] = "Spinestalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 37534,
},
[71893] = {
["encounterName"] = "Professor Putricide",
["source"] = "Professor Putricide",
["encounterID"] = 851,
["event"] = "SPELL_CAST_START",
["npcID"] = 36678,
},
[69974] = {
["source"] = "Kor'kron Sniper",
["event"] = "SPELL_CAST_START",
["npcID"] = 37146,
},
[72149] = {
["encounterName"] = "The Lich King",
["source"] = "Shambling Horror",
["encounterID"] = 856,
["event"] = "SPELL_CAST_START",
["npcID"] = 37698,
},
[51507] = {
["source"] = "Dark Rune Controller",
["event"] = "SPELL_CAST_START",
["npcID"] = 27966,
},
[35195] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gawanil",
["npcID"] = 28495,
},
[76685] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimsonborne Warlord",
["npcID"] = 39626,
},
[88959] = {
["source"] = "Temple Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 45935,
},
[67229] = {
["source"] = "Argent Priestess",
["event"] = "SPELL_CAST_START",
["npcID"] = 35307,
},
[82878] = {
["source"] = "Abyssion",
["event"] = "SPELL_CAST_START",
["npcID"] = 44289,
},
[22883] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hakkari Priest",
["npcID"] = 11830,
},
[3635] = {
["source"] = "Saltstone Gazer",
["event"] = "SPELL_CAST_START",
["npcID"] = 4150,
},
[71254] = {
["encounterName"] = "Lady Deathwhisper",
["source"] = "Lady Deathwhisper",
["encounterID"] = 846,
["event"] = "SPELL_CAST_START",
["npcID"] = 36855,
},
[29120] = {
["event"] = "SPELL_CAST_START",
["source"] = "Honor Hold Archer",
["npcID"] = 16896,
},
[56862] = {
["source"] = "Bound Water Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 30419,
},
[83920] = {
["source"] = "Skymane Bonobo",
["event"] = "SPELL_CAST_START",
["npcID"] = 43417,
},
[86582] = {
["source"] = "Scalesworn Cultist",
["event"] = "SPELL_CAST_START",
["npcID"] = 44221,
},
[93863] = {
["encounterName"] = "Baron Silverlaine",
["source"] = "Rethilgore",
["npcID"] = 50834,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1070,
},
[69975] = {
["source"] = "Kor'kron Sniper",
["event"] = "SPELL_CAST_START",
["npcID"] = 37146,
},
[80003] = {
["source"] = "Foreman Wellson",
["event"] = "SPELL_CAST_START",
["npcID"] = 46648,
},
[82858] = {
["encounterName"] = "High Priestess Azil",
["source"] = "High Priestess Azil",
["encounterID"] = 1057,
["event"] = "SPELL_CAST_START",
["npcID"] = 42333,
},
[879] = {
["source"] = "Mercurial Ooze",
["event"] = "SPELL_CAST_START",
["npcID"] = 43158,
},
[1026] = {
["source"] = "Commander Springvale",
["event"] = "SPELL_CAST_START",
["npcID"] = 4278,
},
[85072] = {
["source"] = "Nightbane Shadow Weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 533,
},
[50740] = {
["source"] = "Onslaught Raven Bishop",
["event"] = "SPELL_CAST_START",
["npcID"] = 29338,
},
[80158] = {
["source"] = "Stonecore Warbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 42696,
},
[54962] = {
["source"] = "Dragonflayer Strategist",
["event"] = "SPELL_CAST_START",
["npcID"] = 23956,
},
[69080] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulguard Bonecaster",
["npcID"] = 36564,
},
[25602] = {
["source"] = "Mana Leech",
["event"] = "SPELL_CAST_START",
["npcID"] = 19306,
},
[67289] = {
["source"] = "Argent Priestess",
["event"] = "SPELL_CAST_START",
["npcID"] = 35307,
},
[55218] = {
["encounterName"] = "Gal'darah",
["source"] = "Gal'darah",
["npcID"] = 29306,
["event"] = "SPELL_CAST_START",
["encounterID"] = 390,
},
[59376] = {
["encounterName"] = "Mage-Lord Urom",
["source"] = "Mage-Lord Urom",
["encounterID"] = 532,
["event"] = "SPELL_CAST_START",
["npcID"] = 27655,
},
[32829] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unliving Stalker",
["npcID"] = 18501,
},
[53363] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostbrood Destroyer",
["npcID"] = 30575,
},
[14900] = {
["event"] = "SPELL_CAST_START",
["source"] = "Aggem Thorncurse",
["npcID"] = 4424,
},
[56969] = {
["source"] = "Azure Scale-Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 26735,
},
[59696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Proto-Drake Handler",
["npcID"] = 24082,
},
[20831] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mana Remnant",
["npcID"] = 11483,
},
[7484] = {
["source"] = "Odo the Blindwatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 4279,
},
[70616] = {
["source"] = "Archmage Elandra",
["event"] = "SPELL_CAST_START",
["npcID"] = 37774,
},
[70744] = {
["encounterName"] = "Valithria Dreamwalker",
["source"] = "Blistering Zombie",
["encounterID"] = 854,
["event"] = "SPELL_CAST_START",
["npcID"] = 37934,
},
[32063] = {
["source"] = "Mur'ghoul Corrupter",
["event"] = "SPELL_CAST_START",
["npcID"] = 23645,
},
[86574] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fungal Behemoth",
["npcID"] = 42475,
},
[89551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temple Runecaster",
["npcID"] = 48140,
},
[87622] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["encounterID"] = 1042,
["event"] = "SPELL_CAST_START",
["npcID"] = 43875,
},
[87341] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pygmy Thief",
["npcID"] = 48043,
},
[83794] = {
["source"] = "Haethen Kaul",
["event"] = "SPELL_CAST_START",
["npcID"] = 44835,
},
[67546] = {
["encounterName"] = "Grand Champions",
["source"] = "Mokra the Skullcrusher",
["encounterID"] = 334,
["event"] = "SPELL_CAST_START",
["npcID"] = 35572,
},
[54323] = {
["source"] = "Onslaught Raven Bishop",
["event"] = "SPELL_CAST_START",
["npcID"] = 29338,
},
[12466] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Emissary",
["npcID"] = 8913,
},
[70541] = {
["encounterName"] = "The Lich King",
["source"] = "The Lich King",
["encounterID"] = 856,
["event"] = "SPELL_CAST_START",
["npcID"] = 36597,
},
[7588] = {
["source"] = "Archmage Arugal",
["event"] = "SPELL_CAST_START",
["npcID"] = 4275,
},
[68895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spiteful Apparition",
["npcID"] = 36551,
},
[83861] = {
["source"] = "Stonescale Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 44148,
},
[59225] = {
["encounterName"] = "Mage-Lord Urom",
["source"] = "Phantasmal Fire",
["encounterID"] = 532,
["event"] = "SPELL_CAST_START",
["npcID"] = 27651,
},
[88902] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neferset Ritualist",
["npcID"] = 47762,
},
[65070] = {
["encounterName"] = "XT-002 Deconstructor",
["source"] = "Parts Recovery Technician",
["encounterID"] = 747,
["event"] = "SPELL_CAST_START",
["npcID"] = 34267,
},
[83795] = {
["source"] = "Haethen Kaul",
["event"] = "SPELL_CAST_START",
["npcID"] = 44835,
},
[9143] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomforge Craftsman",
["npcID"] = 8897,
},
[5605] = {
["source"] = "Bloodscalp Witch Doctor",
["event"] = "SPELL_CAST_START",
["npcID"] = 660,
},
[53044] = {
["event"] = "SPELL_CAST_START",
["source"] = "Erekem",
["npcID"] = 29315,
},
[87761] = {
["source"] = "Executor of the Caliph",
["event"] = "SPELL_CAST_START",
["npcID"] = 45928,
},
[32735] = {
["source"] = "Mo'arg Forgefiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 16946,
},
[59377] = {
["encounterName"] = "Mage-Lord Urom",
["source"] = "Mage-Lord Urom",
["encounterID"] = 532,
["event"] = "SPELL_CAST_START",
["npcID"] = 27655,
},
[84165] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tempered War Golem",
["npcID"] = 5853,
},
[7279] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tar Lurker",
["npcID"] = 6518,
},
[77777] = {
["source"] = "Nemesis",
["event"] = "SPELL_CAST_START",
["npcID"] = 41614,
},
[59633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ymirheim Defender",
["npcID"] = 31746,
},
[87618] = {
["encounterName"] = "Asaad",
["source"] = "Asaad",
["npcID"] = 43875,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1042,
},
[11366] = {
["source"] = "Greater Quicksilver Ooze",
["event"] = "SPELL_CAST_START",
["npcID"] = 44988,
},
[8365] = {
["source"] = "Twilight Loreseeker",
["event"] = "SPELL_CAST_START",
["npcID"] = 4812,
},
[17171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mossflayer Shadowhunter",
["npcID"] = 8561,
},
[20805] = {
["source"] = "Lord Pythas",
["event"] = "SPELL_CAST_START",
["npcID"] = 3670,
},
[28993] = {
["source"] = "Banshee Soulclaimer",
["event"] = "SPELL_CAST_START",
["npcID"] = 29646,
},
[75096] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Thundercaller",
["npcID"] = 40270,
},
[7896] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wildspawn Betrayer",
["npcID"] = 11454,
},
[71386] = {
["source"] = "Rimefang",
["event"] = "SPELL_CAST_START",
["npcID"] = 37533,
},
[87762] = {
["source"] = "Minister of Air",
["event"] = "SPELL_CAST_START",
["npcID"] = 45930,
},
[83796] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verlok Shroomtender",
["npcID"] = 43368,
},
[15620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Anvilrage Officer",
["npcID"] = 8895,
},
[52341] = {
["encounterName"] = "Maiden of Grief",
["source"] = "Lightning Construct",
["npcID"] = 27972,
["event"] = "SPELL_CAST_START",
["encounterID"] = 565,
},
[69851] = {
["source"] = "Rockjaw Goon",
["event"] = "SPELL_CAST_START",
["npcID"] = 37073,
},
[15668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmus",
["npcID"] = 9938,
},
[17434] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Aurius Rivendare",
["npcID"] = 45412,
},
[38204] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbound Seer",
["npcID"] = 33422,
},
[47059] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stars' Rest Sentinel",
["npcID"] = 26448,
},
[9591] = {
["event"] = "SPELL_CAST_START",
["source"] = "Emerald Dragon Whelp",
["npcID"] = 8776,
},
[34302] = {
["source"] = "Rogue Voidwalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 16974,
},
[78807] = {
["encounterName"] = "Ozruk",
["source"] = "Ozruk",
["encounterID"] = 1058,
["event"] = "SPELL_CAST_START",
["npcID"] = 42188,
},
[75907] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Naz'jar Honor Guard",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 40633,
},
[93520] = {
["encounterName"] = "Lord Godfrey",
["source"] = "Lord Godfrey",
["npcID"] = 46964,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1072,
},
[88061] = {
["source"] = "Armored Mistral",
["event"] = "SPELL_CAST_START",
["npcID"] = 45915,
},
[38197] = {
["encounterName"] = "Talon King Ikiss",
["source"] = "Talon King Ikiss",
["npcID"] = 18473,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1902,
},
[83669] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bluegill Wanderer",
["npcID"] = 44176,
},
[23381] = {
["source"] = "Riverpaw Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 46252,
},
[87487] = {
["source"] = "Flame Ascendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 40709,
},
[7948] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deviate Shambler",
["npcID"] = 5761,
},
[22415] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warpwood Tangler",
["npcID"] = 11464,
},
[84309] = {
["source"] = "Drowned Gilnean Merchant",
["event"] = "SPELL_CAST_START",
["npcID"] = 42244,
},
[76588] = {
["source"] = "Twilight Zealot",
["event"] = "SPELL_CAST_START",
["npcID"] = 39990,
},
[36631] = {
["source"] = "Nexus Drake Hatchling",
["event"] = "SPELL_CAST_START",
["npcID"] = 26127,
},
[44498] = {
["source"] = "Iron Rune Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 24806,
},
[3143] = {
["source"] = "Vagash",
["event"] = "SPELL_CAST_START",
["npcID"] = 1388,
},
[15795] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smolderthorn Axe Thrower",
["npcID"] = 9267,
},
[30933] = {
["event"] = "SPELL_CAST_START",
["source"] = "Illyanna Ravenoak",
["npcID"] = 11488,
},
[47736] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["npcID"] = 26929,
["event"] = "SPELL_CAST_START",
["encounterID"] = 520,
},
[80512] = {
["event"] = "SPELL_CAST_START",
["source"] = "Redridge Drudger",
["npcID"] = 580,
},
[80344] = {
["source"] = "Imp",
["event"] = "SPELL_CAST_START",
["npcID"] = 43014,
},
[50379] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scourge Reanimator",
["npcID"] = 26626,
},
[16100] = {
["source"] = "Nesingwary Game Warden",
["event"] = "SPELL_CAST_START",
["npcID"] = 30737,
},
[71516] = {
["encounterName"] = "Professor Putricide",
["source"] = "Mutated Abomination",
["encounterID"] = 851,
["event"] = "SPELL_CAST_START",
["npcID"] = 38285,
},
[83926] = {
["encounterName"] = "Ozumat",
["source"] = "Vicious Mindlasher",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 44715,
},
[32330] = {
["source"] = "Lykul Wasp",
["event"] = "SPELL_CAST_START",
["npcID"] = 17732,
},
[33919] = {
["encounterName"] = "Tavarok",
["source"] = "Tavarok",
["encounterID"] = 1901,
["event"] = "SPELL_CAST_START",
["npcID"] = 18343,
},
[52534] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Anub'ar Shadowcaster",
["encounterID"] = 216,
["event"] = "SPELL_CAST_START",
["npcID"] = 28733,
},
[44282] = {
["source"] = "Vrykul Harpoon Gun (Wyrmskull)",
["event"] = "SPELL_CAST_START",
["npcID"] = 24694,
},
[92754] = {
["encounterName"] = "Maloriak",
["source"] = "Maloriak",
["npcID"] = 41378,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1025,
},
[80600] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thol'embaar",
["npcID"] = 40107,
},
[76634] = {
["source"] = "Tainted Sentry",
["event"] = "SPELL_CAST_START",
["npcID"] = 40925,
},
[80856] = {
["source"] = "Zanzil the Outcast",
["event"] = "SPELL_CAST_START",
["npcID"] = 43255,
},
[79872] = {
["source"] = "Jade Rager",
["event"] = "SPELL_CAST_START",
["npcID"] = 44220,
},
[12198] = {
["source"] = "Dark Iron Marksman",
["event"] = "SPELL_CAST_START",
["npcID"] = 8338,
},
[22373] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warpwood Guardian",
["npcID"] = 11461,
},
[57076] = {
["event"] = "SPELL_CAST_START",
["source"] = "Yggdras",
["npcID"] = 30014,
},
[58967] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Battle Rider",
["npcID"] = 29836,
},
[77569] = {
["encounterName"] = "Maloriak",
["source"] = "Maloriak",
["npcID"] = 41378,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1025,
},
[83799] = {
["source"] = "Haethen Kaul",
["event"] = "SPELL_CAST_START",
["npcID"] = 44835,
},
[12737] = {
["source"] = "Strashaz Sorceress",
["event"] = "SPELL_CAST_START",
["npcID"] = 4370,
},
[23601] = {
["event"] = "SPELL_CAST_START",
["source"] = "Durnholde Rifleman",
["npcID"] = 17820,
},
[69576] = {
["source"] = "Deathspeaker Servant",
["event"] = "SPELL_CAST_START",
["npcID"] = 36805,
},
[80345] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakeadon Mongrel",
["npcID"] = 42803,
},
[22661] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alzzin the Wildshaper",
["npcID"] = 11492,
},
[16552] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostwing Chimaera",
["npcID"] = 24673,
},
[49528] = {
["encounterName"] = "The Prophet Tharon'ja",
["source"] = "The Prophet Tharon'ja",
["encounterID"] = 375,
["event"] = "SPELL_CAST_START",
["npcID"] = 26632,
},
[57780] = {
["source"] = "Steelforged Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 33236,
},
[84037] = {
["encounterName"] = "Ozumat",
["source"] = "Neptulon",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 40792,
},
[91220] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mindless Horror",
["npcID"] = 47137,
},
[35895] = {
["source"] = "Garnoth, Fist of the Legion",
["event"] = "SPELL_CAST_START",
["npcID"] = 39726,
},
[12470] = {
["source"] = "Gold Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 32340,
},
[60211] = {
["source"] = "Dragonflayer Forge Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 24079,
},
[95826] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormwind Guard",
["npcID"] = 1423,
},
[12492] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jammal'an the Prophet",
["npcID"] = 5710,
},
[22710] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lethtendris",
["npcID"] = 14327,
},
[96426] = {
["source"] = "Druid of the Talon",
["event"] = "SPELL_CAST_START",
["npcID"] = 51777,
},
[82137] = {
["source"] = "Rom'ogg Bonecrusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 39665,
},
[133] = {
["source"] = "Mercurial Ooze",
["event"] = "SPELL_CAST_START",
["npcID"] = 43158,
},
[83664] = {
["event"] = "SPELL_CAST_START",
["source"] = "Koristrasza",
["npcID"] = 44843,
},
[27267] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lazgup",
["npcID"] = 416,
},
[31602] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerub'enkan",
["npcID"] = 10437,
},
[76508] = {
["source"] = "Crazed Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 39982,
},
[76813] = {
["source"] = "Naz'jar Spiritmender",
["event"] = "SPELL_CAST_START",
["npcID"] = 41096,
},
[69508] = {
["encounterName"] = "Rotface",
["source"] = "Rotface",
["encounterID"] = 850,
["event"] = "SPELL_CAST_START",
["npcID"] = 36627,
},
[8600] = {
["event"] = "SPELL_CAST_START",
["source"] = "Theka the Martyr",
["npcID"] = 7272,
},
[54878] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Elemental",
["npcID"] = 29573,
["event"] = "SPELL_CAST_START",
["encounterID"] = 385,
},
[7481] = {
["source"] = "Odo the Blindwatcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 4279,
},
[12742] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Fireguard",
["npcID"] = 8910,
},
[74781] = {
["source"] = "Gasherikk",
["event"] = "SPELL_CAST_START",
["npcID"] = 39799,
},
[59252] = {
["source"] = "Ymirjar Dusk Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 26694,
},
[31713] = {
["source"] = "Scarlet Protector",
["event"] = "SPELL_CAST_START",
["npcID"] = 4292,
},
[79835] = {
["encounterName"] = "Omnotron Defense System",
["source"] = "Toxitron",
["npcID"] = 42180,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1027,
},
[8376] = {
["source"] = "Antu'sul",
["event"] = "SPELL_CAST_START",
["npcID"] = 8127,
},
[6421] = {
["source"] = "Sorcerer Ashcrombe",
["event"] = "SPELL_CAST_START",
["npcID"] = 3850,
},
[51384] = {
["source"] = "Avenger Metz",
["event"] = "SPELL_CAST_START",
["npcID"] = 28178,
},
[57589] = {
["encounterName"] = "Herald Volazj",
["source"] = "Twisted Visage",
["npcID"] = 30621,
["event"] = "SPELL_CAST_START",
["encounterID"] = 215,
},
[35328] = {
["source"] = "Bogflare Needler",
["event"] = "SPELL_CAST_START",
["npcID"] = 20197,
},
[43516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Prisoner",
["npcID"] = 24255,
},
[57781] = {
["encounterName"] = "Herald Volazj",
["source"] = "Twisted Visage",
["encounterID"] = 215,
["event"] = "SPELL_CAST_START",
["npcID"] = 30623,
},
[76765] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Firecatcher",
["npcID"] = 39870,
},
[51768] = {
["source"] = "Broodmother Slivina",
["event"] = "SPELL_CAST_START",
["npcID"] = 28467,
},
[51832] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unrelenting Construct",
["npcID"] = 27971,
},
[75992] = {
["source"] = "Naz'jar Tempest Witch",
["event"] = "SPELL_CAST_START",
["npcID"] = 40634,
},
[32129] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sethekk Oracle",
["npcID"] = 18328,
},
[60869] = {
["event"] = "SPELL_CAST_START",
["source"] = "Water Terror",
["npcID"] = 30633,
},
[79580] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakonid Chainwielder",
["npcID"] = 42649,
},
[5403] = {
["source"] = "Gazban",
["event"] = "SPELL_CAST_START",
["npcID"] = 2624,
},
[33793] = {
["encounterName"] = "Vazruden the Herald",
["source"] = "Vazruden the Herald",
["encounterID"] = 1892,
["event"] = "SPELL_CAST_START",
["npcID"] = 17307,
},
[72322] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghostly Priest",
["npcID"] = 38175,
},
[40062] = {
["source"] = "Shadowmoon Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 17414,
},
[22686] = {
["encounterName"] = "King Dred",
["source"] = "King Dred",
["npcID"] = 27483,
["event"] = "SPELL_CAST_START",
["encounterID"] = 373,
},
[50378] = {
["source"] = "Scourge Reanimator",
["event"] = "SPELL_CAST_START",
["npcID"] = 26626,
},
[59148] = {
["source"] = "Hardened Steel Skycaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 28580,
},
[80604] = {
["source"] = "Tortolla",
["event"] = "SPELL_CAST_START",
["npcID"] = 40999,
},
[88186] = {
["source"] = "Empyrean Assassin",
["event"] = "SPELL_CAST_START",
["npcID"] = 45922,
},
[76572] = {
["source"] = "Twilight Sadist",
["event"] = "SPELL_CAST_START",
["npcID"] = 39980,
},
[6605] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pterrordax",
["npcID"] = 9166,
},
[20295] = {
["source"] = "Lady Anacondra",
["event"] = "SPELL_CAST_START",
["npcID"] = 3671,
},
[22876] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wandering Eye of Kilrogg",
["npcID"] = 14386,
},
[46772] = {
["source"] = "Keristrasza",
["event"] = "SPELL_CAST_START",
["npcID"] = 26206,
},
[83675] = {
["encounterName"] = "Ascendant Council",
["source"] = "Terrastra",
["npcID"] = 43689,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1028,
},
[81628] = {
["encounterName"] = "Cho'gall",
["source"] = "Cho'gall",
["npcID"] = 43324,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1029,
},
[34945] = {
["source"] = "Coilfang Scale-Healer",
["event"] = "SPELL_CAST_START",
["npcID"] = 21126,
},
[59381] = {
["encounterName"] = "Ley-Guardian Eregos",
["source"] = "Ley-Guardian Eregos",
["encounterID"] = 534,
["event"] = "SPELL_CAST_START",
["npcID"] = 27656,
},
[22662] = {
["event"] = "SPELL_CAST_START",
["source"] = "Alzzin the Wildshaper",
["npcID"] = 11492,
},
[43133] = {
["source"] = "Darkmist Recluse",
["event"] = "SPELL_CAST_START",
["npcID"] = 4378,
},
[6685] = {
["source"] = "Defias Taskmaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 4417,
},
[53496] = {
["source"] = "Prophet of Akali",
["event"] = "SPELL_CAST_START",
["npcID"] = 29028,
},
[43325] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Harpooner",
["npcID"] = 24635,
},
[74976] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[70498] = {
["encounterName"] = "The Lich King",
["source"] = "The Lich King",
["encounterID"] = 856,
["event"] = "SPELL_CAST_START",
["npcID"] = 36597,
},
[15493] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fineous Darkvire",
["npcID"] = 9056,
},
[70754] = {
["encounterName"] = "Valithria Dreamwalker",
["source"] = "Blazing Skeleton",
["encounterID"] = 854,
["event"] = "SPELL_CAST_START",
["npcID"] = 36791,
},
[11431] = {
["source"] = "Lord Pythas",
["event"] = "SPELL_CAST_START",
["npcID"] = 3670,
},
[51218] = {
["source"] = "Proto-Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 23750,
},
[93655] = {
["source"] = "Mekgineer Thermaplugg",
["event"] = "SPELL_CAST_START",
["npcID"] = 7800,
},
[45580] = {
["event"] = "SPELL_CAST_START",
["source"] = "Magmoth Fire Totem",
["npcID"] = 25444,
},
[79582] = {
["encounterName"] = "Omnotron Defense System",
["source"] = "Magmatron",
["npcID"] = 42178,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1027,
},
[87898] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elemental Firelord",
["npcID"] = 47081,
},
[90329] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ramkahen Marksman",
["npcID"] = 48514,
},
[71778] = {
["source"] = "Captain Arnath",
["event"] = "SPELL_CAST_START",
["npcID"] = 37122,
},
[71906] = {
["source"] = "Val'kyr Herald",
["event"] = "SPELL_CAST_START",
["npcID"] = 37098,
},
[75610] = {
["source"] = "Corla, Herald of Twilight",
["event"] = "SPELL_CAST_START",
["npcID"] = 39679,
},
[50810] = {
["encounterName"] = "Krystallus",
["source"] = "Krystallus",
["npcID"] = 27977,
["event"] = "SPELL_CAST_START",
["encounterID"] = 563,
},
[57606] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wintergrasp Catapult",
["npcID"] = 27881,
},
[16497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quartermaster Zigris",
["npcID"] = 9736,
},
[80734] = {
["encounterName"] = "Nefarian's End",
["source"] = "Chromatic Prototype",
["npcID"] = 41948,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1026,
},
[76031] = {
["encounterName"] = "Beauty",
["source"] = "Beauty",
["encounterID"] = 1037,
["event"] = "SPELL_CAST_START",
["npcID"] = 39700,
},
[59254] = {
["source"] = "Ymirjar Necromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 28368,
},
[31554] = {
["source"] = "Coilfang Defender",
["event"] = "SPELL_CAST_START",
["npcID"] = 17958,
},
[75775] = {
["source"] = "Frostmane Scavenger",
["event"] = "SPELL_CAST_START",
["npcID"] = 41146,
},
[9672] = {
["event"] = "SPELL_CAST_START",
["source"] = "Wrathscale Sorceress",
["npcID"] = 17336,
},
[13878] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scorching Elemental",
["npcID"] = 6520,
},
[79583] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zin'jatar Overseer",
["npcID"] = 41549,
},
[49034] = {
["encounterName"] = "Novos the Summoner",
["source"] = "Novos the Summoner",
["encounterID"] = 371,
["event"] = "SPELL_CAST_START",
["npcID"] = 26631,
},
[83933] = {
["source"] = "Bloodsail Hooch-Hound",
["event"] = "SPELL_CAST_START",
["npcID"] = 43364,
},
[86620] = {
["source"] = "Hogger",
["event"] = "SPELL_CAST_START",
["npcID"] = 46254,
},
[15305] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirestone Battle Mage",
["npcID"] = 9197,
},
[35010] = {
["encounterName"] = "Mennu the Betrayer",
["source"] = "Mennu the Betrayer",
["encounterID"] = 1939,
["event"] = "SPELL_CAST_START",
["npcID"] = 17941,
},
[59638] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mirror Image",
["npcID"] = 31216,
},
[6957] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grik'nir the Cold",
["npcID"] = 808,
},
[70372] = {
["encounterName"] = "The Lich King",
["source"] = "The Lich King",
["encounterID"] = 856,
["event"] = "SPELL_CAST_START",
["npcID"] = 36597,
},
[81276] = {
["source"] = "Troggzor the Earthinator",
["event"] = "SPELL_CAST_START",
["npcID"] = 43456,
},
[59894] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ymirheim Spear Gun",
["npcID"] = 31280,
},
[72960] = {
["source"] = "Darkfallen Noble",
["event"] = "SPELL_CAST_START",
["npcID"] = 37663,
},
[50761] = {
["encounterName"] = "Maiden of Grief",
["source"] = "Maiden of Grief",
["npcID"] = 27975,
["event"] = "SPELL_CAST_START",
["encounterID"] = 565,
},
[19816] = {
["source"] = "Sunhawk Reclaimer",
["event"] = "SPELL_CAST_START",
["npcID"] = 17606,
},
[11975] = {
["source"] = "Captain Stillwater",
["event"] = "SPELL_CAST_START",
["npcID"] = 2550,
},
[52026] = {
["encounterName"] = "General Bjarngrim",
["source"] = "General Bjarngrim",
["encounterID"] = 555,
["event"] = "SPELL_CAST_START",
["npcID"] = 28586,
},
[54791] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maleki the Pallid",
["npcID"] = 10438,
},
[71140] = {
["source"] = "Blighted Abomination",
["event"] = "SPELL_CAST_START",
["npcID"] = 37022,
},
[12039] = {
["source"] = "Shadowpriest Sezz'ziz",
["event"] = "SPELL_CAST_START",
["npcID"] = 7275,
},
[16866] = {
["event"] = "SPELL_CAST_START",
["source"] = "Venom Belcher",
["npcID"] = 10417,
},
[15653] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nightmare Wyrmkin",
["npcID"] = 5280,
},
[69989] = {
["source"] = "Kor'kron Sniper",
["event"] = "SPELL_CAST_START",
["npcID"] = 37146,
},
[12167] = {
["source"] = "Lorgus Jett",
["event"] = "SPELL_CAST_START",
["npcID"] = 12902,
},
[56632] = {
["source"] = "Ahn'kahar Web Winder",
["event"] = "SPELL_CAST_START",
["npcID"] = 30276,
},
[24173] = {
["encounterName"] = "High Priest Thekal",
["source"] = "Zealot Lor'Khan",
["npcID"] = 11347,
["event"] = "SPELL_CAST_START",
["encounterID"] = 789,
},
[12151] = {
["event"] = "SPELL_CAST_START",
["source"] = "Atal'ai High Priest",
["npcID"] = 5273,
},
[91099] = {
["event"] = "SPELL_CAST_START",
["source"] = "Corpse Eater",
["npcID"] = 47134,
},
[32329] = {
["source"] = "Underbog Shambler",
["event"] = "SPELL_CAST_START",
["npcID"] = 17871,
},
[20296] = {
["source"] = "Scarlet Evoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 4289,
},
[30691] = {
["encounterName"] = "Vazruden the Herald",
["source"] = "Vazruden the Herald",
["encounterID"] = 1892,
["event"] = "SPELL_CAST_START",
["npcID"] = 17307,
},
[91611] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lesser Gargoyle",
["npcID"] = 3869,
},
[32674] = {
["event"] = "SPELL_CAST_START",
["source"] = "Reanimated Crusader",
["npcID"] = 30202,
},
[59255] = {
["source"] = "Ymirjar Necromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 28368,
},
[12279] = {
["source"] = "Scholomance Dark Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 11582,
},
[79868] = {
["source"] = "Twilight Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 44619,
},
[43135] = {
["source"] = "Acidic Swamp Ooze",
["event"] = "SPELL_CAST_START",
["npcID"] = 4393,
},
[61558] = {
["event"] = "SPELL_CAST_START",
["source"] = "Master Necromancer",
["npcID"] = 27732,
},
[59575] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Dalronn the Controller",
["npcID"] = 24201,
["event"] = "SPELL_CAST_START",
["encounterID"] = 573,
},
[30851] = {
["source"] = "Shadowmoon Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 17395,
},
[72293] = {
["encounterName"] = "Deathbringer Saurfang",
["source"] = "Deathbringer Saurfang",
["encounterID"] = 848,
["event"] = "SPELL_CAST_START",
["npcID"] = 37813,
},
[5174] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cookie",
["npcID"] = 645,
},
[83017] = {
["source"] = "Ephram \"Midriff\" Moonfall",
["event"] = "SPELL_CAST_START",
["npcID"] = 43377,
},
[66536] = {
["encounterName"] = "Argent Champion",
["source"] = "Argent Confessor Paletress",
["encounterID"] = 338,
["event"] = "SPELL_CAST_START",
["npcID"] = 34928,
},
[54087] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord Drakuru",
["npcID"] = 28998,
},
[53425] = {
["source"] = "Harold Lane",
["event"] = "SPELL_CAST_START",
["npcID"] = 25804,
},
[22887] = {
["source"] = "Murkblood Spearman",
["event"] = "SPELL_CAST_START",
["npcID"] = 17729,
},
[51963] = {
["source"] = "Ebon Gargoyle",
["event"] = "SPELL_CAST_START",
["npcID"] = 27829,
},
[33796] = {
["event"] = "SPELL_CAST_START",
["source"] = "Honor Hold Archer",
["npcID"] = 16896,
},
[72166] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phantom Mage",
["npcID"] = 38172,
},
[85855] = {
["source"] = "Servant of Therazane",
["event"] = "SPELL_CAST_START",
["npcID"] = 42479,
},
[52219] = {
["event"] = "SPELL_CAST_START",
["source"] = "Har'koa",
["npcID"] = 28401,
},
[33860] = {
["source"] = "Arcane Fiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 18429,
},
[33924] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bleeding Hollow Tormentor",
["npcID"] = 19424,
},
[50364] = {
["source"] = "Nerub'ar Tunneler",
["event"] = "SPELL_CAST_START",
["npcID"] = 25622,
},
[84448] = {
["source"] = "Aeosera",
["event"] = "SPELL_CAST_START",
["npcID"] = 43641,
},
[82529] = {
["source"] = "Ironjaw Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 44113,
},
[76516] = {
["source"] = "Gilgoblin Hunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 40935,
},
[73061] = {
["encounterName"] = "Sindragosa",
["source"] = "Sindragosa",
["encounterID"] = 855,
["event"] = "SPELL_CAST_START",
["npcID"] = 36853,
},
[66537] = {
["encounterName"] = "Argent Champion",
["source"] = "Argent Confessor Paletress",
["encounterID"] = 338,
["event"] = "SPELL_CAST_START",
["npcID"] = 34928,
},
[70759] = {
["encounterName"] = "Valithria Dreamwalker",
["source"] = "Risen Archmage",
["encounterID"] = 854,
["event"] = "SPELL_CAST_START",
["npcID"] = 37868,
},
[12551] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skybreaker Squad Leader",
["npcID"] = 31737,
},
[59362] = {
["encounterName"] = "Hadronox",
["source"] = "Anub'ar Webspinner",
["encounterID"] = 217,
["event"] = "SPELL_CAST_START",
["npcID"] = 29335,
},
[17290] = {
["source"] = "Mage Hunter Ascendant",
["event"] = "SPELL_CAST_START",
["npcID"] = 26727,
},
[55098] = {
["encounterName"] = "Moorabi",
["source"] = "Moorabi",
["npcID"] = 29305,
["event"] = "SPELL_CAST_START",
["encounterID"] = 387,
},
[71361] = {
["source"] = "Frostwing Whelp",
["event"] = "SPELL_CAST_START",
["npcID"] = 37532,
},
[91997] = {
["source"] = "Twilight Initiate",
["event"] = "SPELL_CAST_START",
["npcID"] = 40185,
},
[31747] = {
["source"] = "Marauding Crust Burster",
["event"] = "SPELL_CAST_START",
["npcID"] = 16857,
},
[59716] = {
["event"] = "SPELL_CAST_START",
["source"] = "Thrall",
["npcID"] = 4949,
},
[73958] = {
["source"] = "Drowned Thunder Lizard",
["event"] = "SPELL_CAST_START",
["npcID"] = 39464,
},
[76133] = {
["encounterName"] = "Ozumat",
["source"] = "Neptulon",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 40792,
},
[75683] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 40586,
},
[424340] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Greater Fire Elemental",
["npcID"] = 15438,
["event"] = "SPELL_CAST_START",
["encounterID"] = 575,
},
[76517] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ascended Flameseeker",
["npcID"] = 39415,
},
[57785] = {
["encounterName"] = "Herald Volazj",
["source"] = "Twisted Visage",
["npcID"] = 30623,
["event"] = "SPELL_CAST_START",
["encounterID"] = 215,
},
[66538] = {
["encounterName"] = "Argent Champion",
["source"] = "Argent Confessor Paletress",
["encounterID"] = 338,
["event"] = "SPELL_CAST_START",
["npcID"] = 34928,
},
[51336] = {
["encounterName"] = "Drakos the Interrogator",
["source"] = "Drakos the Interrogator",
["encounterID"] = 528,
["event"] = "SPELL_CAST_START",
["npcID"] = 27654,
},
[21832] = {
["event"] = "SPELL_CAST_START",
["source"] = "Princess Theradras",
["npcID"] = 12201,
},
[38881] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Scale-Binder",
["npcID"] = 26735,
},
[69633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spectral Warden",
["npcID"] = 36666,
},
[7125] = {
["source"] = "Fenrus the Devourer",
["event"] = "SPELL_CAST_START",
["npcID"] = 4274,
},
[50506] = {
["source"] = "Magic-bound Ancient",
["event"] = "SPELL_CAST_START",
["npcID"] = 25707,
},
[91998] = {
["source"] = "Twilight Initiate",
["event"] = "SPELL_CAST_START",
["npcID"] = 40185,
},
[88032] = {
["source"] = "Wild Vortex",
["event"] = "SPELL_CAST_START",
["npcID"] = 45912,
},
[81530] = {
["source"] = "Stonecore Earthshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 43537,
},
[86369] = {
["encounterName"] = "Theralion and Valiona",
["source"] = "Theralion",
["npcID"] = 45993,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1032,
},
[72040] = {
["encounterName"] = "Blood Council",
["source"] = "Prince Taldaram",
["encounterID"] = 852,
["event"] = "SPELL_CAST_START",
["npcID"] = 37973,
},
[59016] = {
["encounterName"] = "Novos the Summoner",
["source"] = "Risen Shadowcaster",
["npcID"] = 27600,
["event"] = "SPELL_CAST_START",
["encounterID"] = 371,
},
[57047] = {
["source"] = "Crazed Mana-Surge",
["event"] = "SPELL_CAST_START",
["npcID"] = 26737,
},
[36228] = {
["source"] = "Foreman Swindlegrin",
["event"] = "SPELL_CAST_START",
["npcID"] = 28186,
},
[9081] = {
["source"] = "Balgaras the Foul",
["event"] = "SPELL_CAST_START",
["npcID"] = 1364,
},
[50760] = {
["encounterName"] = "Maiden of Grief",
["source"] = "Maiden of Grief",
["npcID"] = 27975,
["event"] = "SPELL_CAST_START",
["encounterID"] = 565,
},
[15254] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Ethereal Beacon",
["encounterID"] = 1899,
["event"] = "SPELL_CAST_START",
["npcID"] = 18431,
},
[59001] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Drakkari Handler",
["npcID"] = 26637,
},
[38595] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stone Sleeper",
["npcID"] = 3870,
},
[48894] = {
["source"] = "Drakkari Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 26639,
},
[32707] = {
["source"] = "Cabal Spell-weaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 21902,
},
[59257] = {
["source"] = "Azure Spellbreaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 31009,
},
[69263] = {
["encounterName"] = "Krick",
["source"] = "Ick",
["npcID"] = 36476,
["event"] = "SPELL_CAST_START",
["encounterID"] = 835,
},
[14146] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primal Ooze",
["npcID"] = 6557,
},
[42526] = {
["source"] = "Spore",
["event"] = "SPELL_CAST_START",
["npcID"] = 23876,
},
[31865] = {
["source"] = "Seductress",
["event"] = "SPELL_CAST_START",
["npcID"] = 17399,
},
[35013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Time-Lost Controller",
["npcID"] = 18327,
},
[72169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phantom Mage",
["npcID"] = 38172,
},
[58667] = {
["source"] = "Unbound Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 33422,
},
[16587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vile Tutor",
["npcID"] = 8548,
},
[12471] = {
["source"] = "Sandfury Shadowcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 5648,
},
[68899] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["npcID"] = 36502,
["event"] = "SPELL_CAST_START",
["encounterID"] = 831,
},
[43649] = {
["encounterName"] = "Skarvold & Dalronn",
["source"] = "Dalronn the Controller",
["encounterID"] = 573,
["event"] = "SPELL_CAST_START",
["npcID"] = 24201,
},
[74984] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[79710] = {
["encounterName"] = "Omnotron Defense System",
["source"] = "Arcanotron",
["npcID"] = 42166,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1027,
},
[49816] = {
["source"] = "Skadir Mistweaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 25613,
},
[89697] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defias Cannon",
["npcID"] = 48266,
},
[91872] = {
["encounterName"] = "Siamat",
["source"] = "Servant of Siamat",
["npcID"] = 45259,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1055,
},
[69483] = {
["source"] = "Deathspeaker High Priest",
["event"] = "SPELL_CAST_START",
["npcID"] = 36829,
},
[9481] = {
["source"] = "High Inquisitor Whitemane",
["event"] = "SPELL_CAST_START",
["npcID"] = 3977,
},
[90337] = {
["event"] = "SPELL_CAST_START",
["source"] = "binbin",
["npcID"] = 43417,
},
[76008] = {
["encounterName"] = "Lady Naz'jar",
["source"] = "Lady Naz'jar",
["encounterID"] = 1045,
["event"] = "SPELL_CAST_START",
["npcID"] = 40586,
},
[61353] = {
["source"] = "Garl Grimgrizzle",
["event"] = "SPELL_CAST_START",
["npcID"] = 32710,
},
[70123] = {
["encounterName"] = "Sindragosa",
["source"] = "Sindragosa",
["encounterID"] = 855,
["event"] = "SPELL_CAST_START",
["npcID"] = 36853,
},
[62776] = {
["encounterName"] = "XT-002 Deconstructor",
["source"] = "XT-002 Deconstructor",
["encounterID"] = 747,
["event"] = "SPELL_CAST_START",
["npcID"] = 33293,
},
[22478] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zevrim Thornhoof",
["npcID"] = 11490,
},
[84836] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temple Swiftstalker",
["npcID"] = 48139,
},
[29459] = {
["source"] = "Arch Mage Xintor",
["event"] = "SPELL_CAST_START",
["npcID"] = 16977,
},
[17195] = {
["source"] = "Bound Fire Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 30416,
},
[41440] = {
["source"] = "Nedar, Lord of Rhinos",
["event"] = "SPELL_CAST_START",
["npcID"] = 25801,
},
[77160] = {
["source"] = "Wormwing Screecher",
["event"] = "SPELL_CAST_START",
["npcID"] = 41027,
},
[48895] = {
["source"] = "Drakkari Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 26639,
},
[14033] = {
["source"] = "High Interrogator Gerstahn",
["event"] = "SPELL_CAST_START",
["npcID"] = 9018,
},
[184] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackrock Summoner",
["npcID"] = 4463,
},
[2948] = {
["source"] = "Mercurial Ooze",
["event"] = "SPELL_CAST_START",
["npcID"] = 43158,
},
[79847] = {
["source"] = "Desiccated Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 44315,
},
[71787] = {
["source"] = "Captain Rupert",
["event"] = "SPELL_CAST_START",
["npcID"] = 37125,
},
[69973] = {
["source"] = "Kor'kron Necrolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 37149,
},
[72171] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phantom Mage",
["npcID"] = 38172,
},
[13895] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bael'Gar",
["npcID"] = 9016,
},
[82534] = {
["source"] = "Ironjaw Behemoth",
["event"] = "SPELL_CAST_START",
["npcID"] = 44113,
},
[16006] = {
["source"] = "Revelosh",
["event"] = "SPELL_CAST_START",
["npcID"] = 6910,
},
[90978] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defias Reaper",
["npcID"] = 47403,
},
[8005] = {
["source"] = "Dustbelcher Shaman",
["event"] = "SPELL_CAST_START",
["npcID"] = 2718,
},
[46987] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Balinda Stonehearth",
["npcID"] = 11949,
},
[66798] = {
["source"] = "The Black Knight",
["event"] = "SPELL_CAST_START",
["npcID"] = 35451,
},
[71020] = {
["source"] = "Nerub'ar Broodkeeper",
["event"] = "SPELL_CAST_START",
["npcID"] = 36725,
},
[89571] = {
["event"] = "SPELL_CAST_START",
["source"] = "Temple Swiftstalker",
["npcID"] = 48139,
},
[64141] = {
["source"] = "Freezing Ghoul",
["event"] = "SPELL_CAST_START",
["npcID"] = 1796,
},
[53318] = {
["source"] = "Anub'ar Crusher",
["event"] = "SPELL_CAST_START",
["npcID"] = 28922,
},
[47773] = {
["encounterName"] = "Grand Magus Telestra",
["source"] = "Grand Magus Telestra",
["npcID"] = 26731,
["event"] = "SPELL_CAST_START",
["encounterID"] = 520,
},
[51805] = {
["source"] = "Dark Rune Controller",
["event"] = "SPELL_CAST_START",
["npcID"] = 27966,
},
[54617] = {
["source"] = "Onslaught Gryphon Rider",
["event"] = "SPELL_CAST_START",
["npcID"] = 29333,
},
[69869] = {
["source"] = "Kor'kron Invoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 37033,
},
[22121] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormpike Bowman",
["npcID"] = 13358,
},
[69246] = {
["encounterName"] = "Overlrod Tyrannus",
["source"] = "Rimefang",
["npcID"] = 36661,
["event"] = "SPELL_CAST_START",
["encounterID"] = 837,
},
[76394] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azureborne Guardian",
["npcID"] = 39854,
},
[70381] = {
["encounterName"] = "Forgemaster Garfrost",
["source"] = "Forgemaster Garfrost",
["npcID"] = 36494,
["event"] = "SPELL_CAST_START",
["encounterID"] = 833,
},
[84838] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Phase-Twister",
["npcID"] = 45267,
},
[113] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defias Wizard",
["npcID"] = 4418,
},
[8873] = {
["source"] = "Rogue Black Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 14388,
},
[36486] = {
["source"] = "Mo'arg Forgefiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 16946,
},
[12248] = {
["source"] = "Murkblood Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 17771,
},
[71405] = {
["encounterName"] = "Blood Council",
["source"] = "Prince Keleseth",
["encounterID"] = 852,
["event"] = "SPELL_CAST_START",
["npcID"] = 37972,
},
[87653] = {
["encounterName"] = "Rajh",
["source"] = "Rajh",
["npcID"] = 39378,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1078,
},
[59259] = {
["source"] = "Hardened Steel Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 28579,
},
[79721] = {
["source"] = "Crazed Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 47130,
},
[84837] = {
["source"] = "Dragul Giantbutcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 42921,
},
[60239] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gargoyle Ambusher",
["npcID"] = 32769,
},
[72429] = {
["encounterName"] = "The Lich King",
["source"] = "Terenas Menethil",
["event"] = "SPELL_CAST_START",
["npcID"] = 38579,
},
[88421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Canyon Ettin",
["npcID"] = 43094,
},
[30853] = {
["source"] = "Shadowmoon Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 17395,
},
[8282] = {
["source"] = "High Inquisitor Fairbanks",
["event"] = "SPELL_CAST_START",
["npcID"] = 4542,
},
[16588] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skeletal Acolyte",
["npcID"] = 1789,
},
[59835] = {
["encounterName"] = "Loken",
["source"] = "Loken",
["encounterID"] = 561,
["event"] = "SPELL_CAST_START",
["npcID"] = 28923,
},
[3108] = {
["event"] = "SPELL_CAST_START",
["source"] = "Weakened Morbent Fel",
["npcID"] = 1200,
},
[59963] = {
["encounterName"] = "The Prophet Tharon'ja",
["source"] = "The Prophet Tharon'ja",
["npcID"] = 26632,
["event"] = "SPELL_CAST_START",
["encounterID"] = 375,
},
[8362] = {
["source"] = "Twilight Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 4809,
},
[71022] = {
["source"] = "Deathbound Ward",
["event"] = "SPELL_CAST_START",
["npcID"] = 37007,
},
[6254] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skum",
["npcID"] = 3674,
},
[79466] = {
["encounterName"] = "Erudax",
["source"] = "Erudax",
["npcID"] = 40484,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1049,
},
[6270] = {
["event"] = "SPELL_CAST_START",
["source"] = "Disciple of Naralex",
["npcID"] = 3678,
},
[46018] = {
["source"] = "Archmage Evanor",
["event"] = "SPELL_CAST_START",
["npcID"] = 25784,
},
[41988] = {
["source"] = "Instructor Malicia",
["event"] = "SPELL_CAST_START",
["npcID"] = 10505,
},
[43562] = {
["source"] = "Glacion",
["event"] = "SPELL_CAST_START",
["npcID"] = 24019,
},
[76026] = {
["encounterName"] = "Commander Ulthok",
["source"] = "Commander Ulthok",
["encounterID"] = 1044,
["event"] = "SPELL_CAST_START",
["npcID"] = 40765,
},
[75330] = {
["encounterName"] = "Overlrod Tyrannus",
["source"] = "Wrathbone Sorcerer",
["npcID"] = 37728,
["event"] = "SPELL_CAST_START",
["encounterID"] = 837,
},
[60667] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostbrood Matriarch",
["npcID"] = 32492,
},
[50496] = {
["source"] = "Mage-Lord Urom",
["event"] = "SPELL_CAST_START",
["npcID"] = 27655,
},
[55815] = {
["encounterName"] = "Eck the Ferocious",
["source"] = "Eck the Ferocious",
["npcID"] = 29932,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1988,
},
[81002] = {
["source"] = "Shade of the Hexxer",
["event"] = "SPELL_CAST_START",
["npcID"] = 43332,
},
[59004] = {
["encounterName"] = "Novos the Summoner",
["source"] = "Crystal Handler",
["npcID"] = 26627,
["event"] = "SPELL_CAST_START",
["encounterID"] = 371,
},
[23337] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gadgetzan Bruiser",
["npcID"] = 9460,
},
[6358] = {
["event"] = "SPELL_CAST_START",
["source"] = "Brynia",
["npcID"] = 1863,
},
[48283] = {
["source"] = "Harpoon Master Yavus",
["event"] = "SPELL_CAST_START",
["npcID"] = 24644,
},
[75245] = {
["encounterName"] = "Drahga Shadowburner",
["source"] = "Drahga Shadowburner",
["npcID"] = 40319,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1048,
},
[79467] = {
["event"] = "SPELL_CAST_START",
["source"] = "Faceless Corruptor",
["npcID"] = 39392,
},
[59260] = {
["encounterName"] = "Mage-Lord Urom",
["source"] = "Phantasmal Naga",
["encounterID"] = 532,
["event"] = "SPELL_CAST_START",
["npcID"] = 27648,
},
[31717] = {
["encounterName"] = "The Black Stalker",
["source"] = "The Black Stalker",
["encounterID"] = 1948,
["event"] = "SPELL_CAST_START",
["npcID"] = 17882,
},
[3204] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Saboteur",
["npcID"] = 1052,
},
[66290] = {
["source"] = "Gjalerbron Sleep-Watcher",
["event"] = "SPELL_CAST_START",
["npcID"] = 23989,
},
[14887] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulless Ghoul",
["npcID"] = 1794,
},
[32969] = {
["source"] = "Lesser Scorching Totem",
["event"] = "SPELL_CAST_START",
["npcID"] = 18795,
},
[11962] = {
["source"] = "Nazzivus Felsworn",
["event"] = "SPELL_CAST_START",
["npcID"] = 17339,
},
[59708] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["npcID"] = 23954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 575,
},
[49537] = {
["encounterName"] = "The Prophet Tharon'ja",
["source"] = "The Prophet Tharon'ja",
["encounterID"] = 375,
["event"] = "SPELL_CAST_START",
["npcID"] = 26632,
},
[82794] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oathsworn Wanderer",
["npcID"] = 44926,
},
[67528] = {
["encounterName"] = "Grand Champions",
["source"] = "Runok Wildmane",
["encounterID"] = 334,
["event"] = "SPELL_CAST_START",
["npcID"] = 35571,
},
[8858] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Demolitionist",
["npcID"] = 1054,
},
[33417] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stormwind Mage",
["npcID"] = 18949,
},
[71592] = {
["source"] = "Captain Rupert",
["event"] = "SPELL_CAST_START",
["npcID"] = 37125,
},
[91622] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dread Scryer",
["npcID"] = 47141,
},
[3256] = {
["source"] = "Scarab",
["event"] = "SPELL_CAST_START",
["npcID"] = 7269,
},
[32197] = {
["source"] = "Shadowmoon Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 17371,
},
[62395] = {
["source"] = "Ironwork Cannon",
["event"] = "SPELL_CAST_START",
["npcID"] = 33264,
},
[54399] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Water Binder",
["npcID"] = 28303,
},
[8986] = {
["source"] = "Haunting Phantasm",
["event"] = "SPELL_CAST_START",
["npcID"] = 6427,
},
[32325] = {
["encounterName"] = "Pandemonius",
["source"] = "Pandemonius",
["encounterID"] = 1900,
["event"] = "SPELL_CAST_START",
["npcID"] = 18341,
},
[59842] = {
["encounterName"] = "Slad'ran",
["source"] = "Slad'ran",
["npcID"] = 29304,
["event"] = "SPELL_CAST_START",
["encounterID"] = 383,
},
[82411] = {
["encounterName"] = "Cho'gall",
["source"] = "Darkened Creation",
["npcID"] = 44045,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1029,
},
[86633] = {
["source"] = "Lord Overheat",
["event"] = "SPELL_CAST_START",
["npcID"] = 46264,
},
[49111] = {
["source"] = "Azure Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 27608,
},
[69570] = {
["encounterName"] = "Overlrod Tyrannus",
["source"] = "Freed Alliance Slave",
["npcID"] = 37576,
["event"] = "SPELL_CAST_START",
["encounterID"] = 837,
},
[74452] = {
["encounterName"] = "Baltharus the Warborn",
["source"] = "Saviana Ragefire",
["event"] = "SPELL_CAST_START",
["npcID"] = 39747,
},
[60988] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ymirheim Defender",
["npcID"] = 31746,
},
[59856] = {
["encounterName"] = "Novos the Summoner",
["source"] = "Novos the Summoner",
["npcID"] = 26631,
["event"] = "SPELL_CAST_START",
["encounterID"] = 371,
},
[71318] = {
["source"] = "Frostwarden Sorceress",
["event"] = "SPELL_CAST_START",
["npcID"] = 37229,
},
[56775] = {
["source"] = "Azure Magus",
["event"] = "SPELL_CAST_START",
["npcID"] = 26722,
},
[70358] = {
["encounterName"] = "The Lich King",
["source"] = "The Lich King",
["encounterID"] = 856,
["event"] = "SPELL_CAST_START",
["npcID"] = 36597,
},
[30615] = {
["source"] = "Bleeding Hollow Scryer",
["event"] = "SPELL_CAST_START",
["npcID"] = 17478,
},
[79607] = {
["source"] = "Darkwood Broodmother",
["event"] = "SPELL_CAST_START",
["npcID"] = 46507,
},
[59389] = {
["encounterName"] = "Prince Keleseth",
["source"] = "Prince Keleseth",
["npcID"] = 23953,
["event"] = "SPELL_CAST_START",
["encounterID"] = 571,
},
[16429] = {
["event"] = "SPELL_CAST_START",
["source"] = "Skra'gath",
["npcID"] = 18401,
},
[3356] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowforge Geologist",
["npcID"] = 7030,
},
[79351] = {
["encounterName"] = "High Priestess Azil",
["source"] = "High Priestess Azil",
["encounterID"] = 1057,
["event"] = "SPELL_CAST_START",
["npcID"] = 42333,
},
[82668] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zoltrik Drakebane",
["npcID"] = 44135,
},
[17231] = {
["event"] = "SPELL_CAST_START",
["source"] = "Araj the Summoner",
["npcID"] = 1852,
},
[70386] = {
["event"] = "SPELL_CAST_START",
["source"] = "Deathwhisper Shadowcaster",
["npcID"] = 37712,
},
[48258] = {
["encounterName"] = "Svala Sorrowgrave",
["source"] = "Svala Sorrowgrave",
["event"] = "SPELL_CAST_START",
["npcID"] = 26668,
},
[57854] = {
["source"] = "Malas the Corrupter",
["event"] = "SPELL_CAST_START",
["npcID"] = 28255,
},
[3368] = {
["event"] = "SPELL_CAST_START",
["source"] = "Murloc Forager",
["npcID"] = 46,
},
[20811] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defias Enchanter",
["npcID"] = 910,
},
[79854] = {
["event"] = "SPELL_CAST_START",
["source"] = "Messner",
["npcID"] = 43300,
},
[91624] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dread Scryer",
["npcID"] = 47141,
},
[83564] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earthmender Norsala",
["npcID"] = 43503,
},
[21067] = {
["event"] = "SPELL_CAST_START",
["source"] = "Poison Sprite",
["npcID"] = 12216,
},
[85867] = {
["source"] = "Murkstone Trogg",
["event"] = "SPELL_CAST_START",
["npcID"] = 44936,
},
[9482] = {
["event"] = "SPELL_CAST_START",
["source"] = "Galgann Firehammer",
["npcID"] = 7291,
},
[88170] = {
["source"] = "Turbulent Squall",
["event"] = "SPELL_CAST_START",
["npcID"] = 45924,
},
[13608] = {
["event"] = "SPELL_CAST_START",
["source"] = "Neferset Raider",
["npcID"] = 48626,
},
[83445] = {
["encounterName"] = "General Husam",
["source"] = "General Husam",
["npcID"] = 44577,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1052,
},
[68774] = {
["encounterName"] = "Forgemaster Garfrost",
["source"] = "Forgemaster Garfrost",
["npcID"] = 36494,
["event"] = "SPELL_CAST_START",
["encounterID"] = 833,
},
[59183] = {
["source"] = "Unbound Firestorm",
["event"] = "SPELL_CAST_START",
["npcID"] = 28584,
},
[82669] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zoltrik Drakebane",
["npcID"] = 44135,
},
[82797] = {
["source"] = "Snickerfang Hyena",
["event"] = "SPELL_CAST_START",
["npcID"] = 5985,
},
[50690] = {
["source"] = "Azure Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 27633,
},
[5208] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Greenskin",
["npcID"] = 647,
},
[3436] = {
["event"] = "SPELL_CAST_START",
["source"] = "Plague Spreader",
["npcID"] = 604,
},
[15799] = {
["event"] = "SPELL_CAST_START",
["source"] = "Smolderthorn Mystic",
["npcID"] = 9239,
},
[6950] = {
["source"] = "Frostmane Snowstrider",
["event"] = "SPELL_CAST_START",
["npcID"] = 1121,
},
[83565] = {
["encounterName"] = "Ascendant Council",
["source"] = "Terrastra",
["npcID"] = 43689,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1028,
},
[54340] = {
["event"] = "SPELL_CAST_START",
["source"] = "Putrid Abomination",
["npcID"] = 28564,
},
[49091] = {
["encounterName"] = "Skadi the Ruthless",
["source"] = "Ymirjar Harpooner",
["encounterID"] = 581,
["event"] = "SPELL_CAST_START",
["npcID"] = 26692,
},
[43270] = {
["source"] = "Iron Rune Binder",
["event"] = "SPELL_CAST_START",
["npcID"] = 23796,
},
[92265] = {
["encounterName"] = "Slabhide",
["source"] = "Slabhide",
["npcID"] = 43214,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1059,
},
[59710] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Sylvanas Windrunner",
["npcID"] = 10181,
},
[70388] = {
["encounterName"] = "Scourgelord Tyrannus",
["source"] = "Wrathbone Sorcerer",
["encounterID"] = 837,
["event"] = "SPELL_CAST_START",
["npcID"] = 37728,
},
[90602] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["npcID"] = 47739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1060,
},
[86636] = {
["source"] = "Lord Overheat",
["event"] = "SPELL_CAST_START",
["npcID"] = 46264,
},
[51586] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Spiritualist",
["npcID"] = 28410,
},
[16071] = {
["event"] = "SPELL_CAST_START",
["source"] = "Firebrand Darkweaver",
["npcID"] = 9261,
},
[48132] = {
["encounterName"] = "Gortok Palehoof",
["source"] = "Massive Jormungar",
["encounterID"] = 579,
["event"] = "SPELL_CAST_START",
["npcID"] = 26685,
},
[55872] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fiend of Fire",
["npcID"] = 30042,
},
[70900] = {
["encounterName"] = "Lady Deathwhisper",
["source"] = "Cult Fanatic",
["encounterID"] = 846,
["event"] = "SPELL_CAST_START",
["npcID"] = 37890,
},
[68981] = {
["encounterName"] = "The Lich King",
["source"] = "The Lich King",
["encounterID"] = 856,
["event"] = "SPELL_CAST_START",
["npcID"] = 36597,
},
[60158] = {
["source"] = "Azure Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 30668,
},
[49987] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defendo-tank 66D",
["npcID"] = 25758,
},
[71029] = {
["source"] = "Servant of the Throne",
["event"] = "SPELL_CAST_START",
["npcID"] = 36724,
},
[70906] = {
["encounterName"] = "Lady Deathwhisper",
["source"] = "Empowered Adherent",
["encounterID"] = 846,
["event"] = "SPELL_CAST_START",
["npcID"] = 37949,
},
[79856] = {
["event"] = "SPELL_CAST_START",
["source"] = "Messner",
["npcID"] = 43300,
},
[7054] = {
["source"] = "Tormented Officer",
["event"] = "SPELL_CAST_START",
["npcID"] = 3873,
},
[84974] = {
["source"] = "Abandoned Siege Engine",
["event"] = "SPELL_CAST_START",
["npcID"] = 45344,
},
[32358] = {
["encounterName"] = "Pandemonius",
["source"] = "Pandemonius",
["encounterID"] = 1900,
["event"] = "SPELL_CAST_START",
["npcID"] = 18341,
},
[90603] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["npcID"] = 47739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1060,
},
[32422] = {
["encounterName"] = "Exarch Maladaar",
["source"] = "Exarch Maladaar",
["npcID"] = 18373,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1889,
},
[44422] = {
["source"] = "Trained Rock Falcon",
["event"] = "SPELL_CAST_START",
["npcID"] = 24783,
},
[66935] = {
["encounterName"] = "Argent Champion",
["source"] = "Eadric the Pure",
["encounterID"] = 338,
["event"] = "SPELL_CAST_START",
["npcID"] = 35119,
},
[70645] = {
["source"] = "Darkfallen Noble",
["event"] = "SPELL_CAST_START",
["npcID"] = 37663,
},
[81008] = {
["source"] = "Crystalspawn Giant",
["event"] = "SPELL_CAST_START",
["npcID"] = 42810,
},
[70901] = {
["encounterName"] = "Lady Deathwhisper",
["source"] = "Cult Adherent",
["encounterID"] = 846,
["event"] = "SPELL_CAST_START",
["npcID"] = 37949,
},
[68982] = {
["encounterName"] = "Devourer of Souls",
["source"] = "Devourer of Souls",
["encounterID"] = 831,
["event"] = "SPELL_CAST_START",
["npcID"] = 36502,
},
[30695] = {
["encounterName"] = "Omor the Unscarred",
["source"] = "Omor the Unscarred",
["encounterID"] = 1891,
["event"] = "SPELL_CAST_START",
["npcID"] = 17308,
},
[3584] = {
["source"] = "Blighted Zombie",
["event"] = "SPELL_CAST_START",
["npcID"] = 4475,
},
[79857] = {
["event"] = "SPELL_CAST_START",
["source"] = "Messner",
["npcID"] = 43300,
},
[79729] = {
["encounterName"] = "Omnotron Defense System",
["source"] = "Arcanotron",
["npcID"] = 42166,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1027,
},
[75763] = {
["encounterName"] = "Erudax",
["source"] = "Faceless Corruptor",
["npcID"] = 48844,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1049,
},
[53314] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Rune Elementalist",
["npcID"] = 27962,
},
[16590] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Summoner",
["npcID"] = 8551,
},
[78194] = {
["encounterName"] = "Maloriak",
["source"] = "Maloriak",
["npcID"] = 41378,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1025,
},
[90604] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["npcID"] = 47739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1060,
},
[66552] = {
["encounterName"] = "Argent Champion",
["source"] = "Memory of Cyanigosa",
["encounterID"] = 338,
["event"] = "SPELL_CAST_START",
["npcID"] = 35046,
},
[86766] = {
["source"] = "Mercurial Ooze",
["event"] = "SPELL_CAST_START",
["npcID"] = 43158,
},
[82800] = {
["source"] = "Warped Cultist",
["event"] = "SPELL_CAST_START",
["npcID"] = 44815,
},
[49668] = {
["encounterName"] = "Novos the Summoner",
["source"] = "Crystal Handler",
["encounterID"] = 371,
["event"] = "SPELL_CAST_START",
["npcID"] = 26627,
},
[51779] = {
["source"] = "Saragosa",
["event"] = "SPELL_CAST_START",
["npcID"] = 26232,
},
[55937] = {
["event"] = "SPELL_CAST_START",
["source"] = "Orinoko Tuskbreaker",
["npcID"] = 30020,
},
[80117] = {
["source"] = "Avalanchion",
["event"] = "SPELL_CAST_START",
["npcID"] = 44372,
},
[3636] = {
["event"] = "SPELL_CAST_START",
["source"] = "Jadespine Basilisk",
["npcID"] = 4863,
},
[17140] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chief Miranda",
["npcID"] = 43913,
},
[9004] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashlan Stonesmirk",
["npcID"] = 1073,
},
[44608] = {
["source"] = "Iron Rune Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 24825,
},
[79858] = {
["source"] = "Ophelia",
["event"] = "SPELL_CAST_START",
["npcID"] = 45183,
},
[46150] = {
["source"] = "Bound Air Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 30418,
},
[21068] = {
["event"] = "SPELL_CAST_START",
["source"] = "Axxarien Shadowstalker",
["npcID"] = 17340,
},
[85746] = {
["source"] = "Desiccated Spearman",
["event"] = "SPELL_CAST_START",
["npcID"] = 44316,
},
[90605] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["npcID"] = 47739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1060,
},
[58688] = {
["encounterName"] = "Cyanigosa",
["source"] = "Cyanigosa",
["npcID"] = 31134,
["event"] = "SPELL_CAST_START",
["encounterID"] = 545,
},
[52611] = {
["event"] = "SPELL_CAST_START",
["source"] = "Master Necromancer",
["npcID"] = 27732,
},
[59723] = {
["encounterName"] = "Maiden of Grief",
["source"] = "Maiden of Grief",
["event"] = "SPELL_CAST_START",
["npcID"] = 27975,
},
[57408] = {
["source"] = "Sifreldar Storm Maiden",
["event"] = "SPELL_CAST_START",
["npcID"] = 29323,
},
[54850] = {
["encounterName"] = "Drakkari Colossus",
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Colossus",
["npcID"] = 29307,
},
[85232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ramkahen Field Worker",
["npcID"] = 47699,
},
[10346] = {
["source"] = "Mechano-Tank",
["event"] = "SPELL_CAST_START",
["npcID"] = 6225,
},
[31623] = {
["encounterName"] = "Swamplord Musel'ek",
["source"] = "Swamplord Musel'ek",
["encounterID"] = 1947,
["event"] = "SPELL_CAST_START",
["npcID"] = 17826,
},
[89710] = {
["event"] = "SPELL_CAST_START",
["source"] = "Salhet",
["npcID"] = 48022,
},
[59839] = {
["encounterName"] = "Slad'ran",
["source"] = "Slad'ran",
["npcID"] = 29304,
["event"] = "SPELL_CAST_START",
["encounterID"] = 383,
},
[8363] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blackfathom Oracle",
["npcID"] = 4803,
},
[31942] = {
["event"] = "SPELL_CAST_START",
["source"] = "Durnholde Rifleman",
["npcID"] = 17820,
},
[70291] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ymirjar Skycaller",
["npcID"] = 31260,
},
[71927] = {
["source"] = "Severed Essence",
["event"] = "SPELL_CAST_START",
["npcID"] = 38410,
},
[78196] = {
["source"] = "Dark Iron Pyromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 41902,
},
[90606] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["npcID"] = 47739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1060,
},
[59712] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Sylvanas Windrunner",
["npcID"] = 10181,
},
[92266] = {
["source"] = "Irradiated Pillager",
["event"] = "SPELL_CAST_START",
["npcID"] = 6329,
},
[31975] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unliving Stalker",
["npcID"] = 18501,
},
[33324] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unliving Cleric",
["npcID"] = 18500,
},
[79884] = {
["source"] = "Braddok",
["event"] = "SPELL_CAST_START",
["npcID"] = 42858,
},
[70903] = {
["encounterName"] = "Lady Deathwhisper",
["source"] = "Cult Adherent",
["encounterID"] = 846,
["event"] = "SPELL_CAST_START",
["npcID"] = 37949,
},
[73079] = {
["source"] = "Plague Scientist",
["event"] = "SPELL_CAST_START",
["npcID"] = 37023,
},
[48262] = {
["source"] = "Dragonflayer Rune-Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 23656,
},
[69963] = {
["source"] = "Kor'kron Templar",
["event"] = "SPELL_CAST_START",
["npcID"] = 37034,
},
[9003] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashlan Stonesmirk",
["npcID"] = 1073,
},
[87920] = {
["event"] = "SPELL_CAST_START",
["source"] = "Earth Ravager",
["npcID"] = 47150,
},
[15095] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pyromancer Loregrain",
["npcID"] = 9024,
},
[69882] = {
["source"] = "Skybreaker Hierophant",
["event"] = "SPELL_CAST_START",
["npcID"] = 37027,
},
[71928] = {
["source"] = "Severed Essence",
["event"] = "SPELL_CAST_START",
["npcID"] = 38410,
},
[50495] = {
["source"] = "Mage-Lord Urom",
["event"] = "SPELL_CAST_START",
["npcID"] = 27655,
},
[11082] = {
["source"] = "Electrocutioner 6000",
["event"] = "SPELL_CAST_START",
["npcID"] = 6235,
},
[15245] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eviscerator",
["npcID"] = 9029,
},
[5213] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gilnid",
["npcID"] = 1763,
},
[58817] = {
["event"] = "SPELL_CAST_START",
["source"] = "Stratholme Resident",
["npcID"] = 28341,
},
[76790] = {
["source"] = "Naz'jar Invader",
["event"] = "SPELL_CAST_START",
["npcID"] = 40584,
},
[56898] = {
["source"] = "Twilight Darkcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 30319,
},
[85234] = {
["source"] = "Fetid Corpse",
["event"] = "SPELL_CAST_START",
["npcID"] = 1270,
},
[30633] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crystalline Protector",
["npcID"] = 26792,
},
[59006] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari Shaman",
["npcID"] = 26639,
},
[69242] = {
["encounterName"] = "The Lich King",
["source"] = "Raging Spirit",
["encounterID"] = 856,
["event"] = "SPELL_CAST_START",
["npcID"] = 36701,
},
[46983] = {
["event"] = "SPELL_CAST_START",
["source"] = "Greater Water Elemental",
["npcID"] = 25040,
},
[6306] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cookie",
["npcID"] = 645,
},
[13321] = {
["source"] = "Felhound Manastalker",
["event"] = "SPELL_CAST_START",
["npcID"] = 17401,
},
[51587] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Spiritualist",
["npcID"] = 28410,
},
[59521] = {
["source"] = "Ichoron",
["event"] = "SPELL_CAST_START",
["npcID"] = 29313,
},
[72057] = {
["source"] = "Darkfallen Advisor",
["event"] = "SPELL_CAST_START",
["npcID"] = 37571,
},
[5159] = {
["source"] = "Goblin Craftsman",
["event"] = "SPELL_CAST_START",
["npcID"] = 1731,
},
[59713] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Sylvanas Windrunner",
["npcID"] = 10181,
},
[76535] = {
["source"] = "Gilgoblin Aquamage",
["event"] = "SPELL_CAST_START",
["npcID"] = 40943,
},
[116] = {
["npcID"] = 188027,
},
[18702] = {
["source"] = "Darkmaster Gandling",
["event"] = "SPELL_CAST_START",
["npcID"] = 1853,
},
[81013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flux Animator",
["npcID"] = 40033,
},
[75000] = {
["encounterName"] = "Forgemaster Throngus",
["source"] = "Forgemaster Throngus",
["npcID"] = 40177,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1050,
},
[68987] = {
["encounterName"] = "Krick",
["source"] = "Ick",
["npcID"] = 36476,
["event"] = "SPELL_CAST_START",
["encounterID"] = 835,
},
[22924] = {
["source"] = "Tendris Warpwood",
["event"] = "SPELL_CAST_START",
["npcID"] = 11489,
},
[9435] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcanist Doan",
["npcID"] = 6487,
},
[17613] = {
["source"] = "Scholomance Acolyte",
["event"] = "SPELL_CAST_START",
["npcID"] = 10471,
},
[71546] = {
["source"] = "Captain Arnath",
["event"] = "SPELL_CAST_START",
["npcID"] = 37122,
},
[9483] = {
["source"] = "Dustbelcher Wyrmhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 2716,
},
[88178] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azureborne Destroyer",
["npcID"] = 47087,
},
[71930] = {
["source"] = "Severed Essence",
["event"] = "SPELL_CAST_START",
["npcID"] = 38410,
},
[86079] = {
["source"] = "Rattlegore",
["event"] = "SPELL_CAST_START",
["npcID"] = 44318,
},
[54532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frozen Earth",
["npcID"] = 28411,
},
[59965] = {
["encounterName"] = "The Prophet Tharon'ja",
["source"] = "The Prophet Tharon'ja",
["npcID"] = 26632,
["event"] = "SPELL_CAST_START",
["encounterID"] = 375,
},
[2602] = {
["source"] = "Earthen Stonecarver",
["event"] = "SPELL_CAST_START",
["npcID"] = 7397,
},
[11642] = {
["source"] = "Murta Grimgut",
["event"] = "SPELL_CAST_START",
["npcID"] = 7608,
},
[33643] = {
["event"] = "SPELL_CAST_START",
["source"] = "Melgromm Highmountain",
["npcID"] = 18969,
},
[15495] = {
["event"] = "SPELL_CAST_START",
["source"] = "Doomforge Dragoon",
["npcID"] = 8899,
},
[54916] = {
["source"] = "Sparktouched Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 28112,
},
[68988] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["npcID"] = 36497,
["event"] = "SPELL_CAST_START",
["encounterID"] = 829,
},
[57091] = {
["encounterName"] = "Keristrasza",
["source"] = "Keristrasza",
["encounterID"] = 526,
["event"] = "SPELL_CAST_START",
["npcID"] = 26723,
},
[61515] = {
["source"] = "Hardened Steel Skycaller",
["event"] = "SPELL_CAST_START",
["npcID"] = 28580,
},
[59266] = {
["encounterName"] = "Mage-Lord Urom",
["source"] = "Phantasmal Water",
["encounterID"] = 532,
["event"] = "SPELL_CAST_START",
["npcID"] = 27653,
},
[56038] = {
["source"] = "Vargul Deathwaker",
["event"] = "SPELL_CAST_START",
["npcID"] = 29449,
},
[9739] = {
["source"] = "Blacksilt Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 17330,
},
[11802] = {
["source"] = "Dark Iron Agent",
["event"] = "SPELL_CAST_START",
["npcID"] = 6212,
},
[71931] = {
["source"] = "Severed Essence",
["event"] = "SPELL_CAST_START",
["npcID"] = 38410,
},
[10277] = {
["source"] = "Bluegill Raider",
["event"] = "SPELL_CAST_START",
["npcID"] = 1418,
},
[41572] = {
["source"] = "Proto-Drake",
["event"] = "SPELL_CAST_START",
["npcID"] = 23689,
},
[55633] = {
["encounterName"] = "Drakkari Colossus",
["source"] = "Drakkari Golem",
["npcID"] = 29832,
["event"] = "SPELL_CAST_START",
["encounterID"] = 385,
},
[18763] = {
["source"] = "Ras Frostwhisper",
["event"] = "SPELL_CAST_START",
["npcID"] = 10508,
},
[90994] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defias Miner",
["npcID"] = 48419,
},
[9002] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ashlan Stonesmirk",
["npcID"] = 1073,
},
[85737] = {
["source"] = "Pome Wraith",
["event"] = "SPELL_CAST_START",
["npcID"] = 44488,
},
[6917] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dredge Worm",
["npcID"] = 8925,
},
[68989] = {
["encounterName"] = "Krick",
["source"] = "Ick",
["npcID"] = 36476,
["event"] = "SPELL_CAST_START",
["encounterID"] = 835,
},
[49106] = {
["source"] = "Ymirjar Berserker",
["event"] = "SPELL_CAST_START",
["npcID"] = 26696,
},
[81770] = {
["source"] = "Earthen Catapult",
["event"] = "SPELL_CAST_START",
["npcID"] = 43509,
},
[71420] = {
["encounterName"] = "Lady Deathwhisper",
["source"] = "Lady Deathwhisper",
["encounterID"] = 846,
["event"] = "SPELL_CAST_START",
["npcID"] = 36855,
},
[61546] = {
["encounterName"] = "Krystallus",
["source"] = "Krystallus",
["encounterID"] = 563,
["event"] = "SPELL_CAST_START",
["npcID"] = 27977,
},
[25054] = {
["source"] = "High Inquisitor Whitemane",
["event"] = "SPELL_CAST_START",
["npcID"] = 3977,
},
[12058] = {
["event"] = "SPELL_CAST_START",
["source"] = "Elemental Rift",
["npcID"] = 28452,
},
[88308] = {
["encounterName"] = "Altairus",
["source"] = "Altairus",
["encounterID"] = 1041,
["event"] = "SPELL_CAST_START",
["npcID"] = 43873,
},
[7978] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowforge Peasant",
["npcID"] = 8896,
},
[56580] = {
["source"] = "Deep Crawler",
["event"] = "SPELL_CAST_START",
["npcID"] = 30279,
},
[32424] = {
["encounterName"] = "Exarch Maladaar",
["source"] = "Exarch Maladaar",
["npcID"] = 18373,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1889,
},
[36238] = {
["source"] = "Fel Cannon MKI",
["event"] = "SPELL_CAST_START",
["npcID"] = 22461,
},
[54670] = {
["source"] = "Warlord Zol'Maz",
["event"] = "SPELL_CAST_START",
["npcID"] = 28902,
},
[52496] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crypt Fiend",
["npcID"] = 27734,
},
[8142] = {
["event"] = "SPELL_CAST_START",
["source"] = "Verdan the Everliving",
["npcID"] = 5775,
},
[70161] = {
["encounterName"] = "Icecrown Gunship Battle",
["source"] = "Kor'kron Axethrower",
["encounterID"] = 847,
["event"] = "SPELL_CAST_START",
["npcID"] = 36968,
},
[72208] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tortured Rifleman",
["npcID"] = 38176,
},
[95729] = {
["event"] = "SPELL_CAST_START",
["source"] = "Therazane",
["npcID"] = 43792,
},
[77434] = {
["event"] = "SPELL_CAST_START",
["source"] = "Moanah Stormhoof",
["npcID"] = 41330,
},
[83703] = {
["encounterName"] = "Halfus Wyrmbreaker",
["source"] = "Halfus Wyrmbreaker",
["npcID"] = 44600,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1030,
},
[59331] = {
["encounterName"] = "Skadi the Ruthless",
["source"] = "Skadi the Ruthless",
["encounterID"] = 581,
["event"] = "SPELL_CAST_START",
["npcID"] = 26693,
},
[35008] = {
["encounterName"] = "Rokmar the Crackler",
["source"] = "Rokmar the Crackler",
["encounterID"] = 1941,
["event"] = "SPELL_CAST_START",
["npcID"] = 17991,
},
[43083] = {
["event"] = "SPELL_CAST_START",
["source"] = "Winterskorn Oracle",
["npcID"] = 23669,
},
[24314] = {
["encounterName"] = "Bloodlord Mandokir",
["source"] = "Bloodlord Mandokir",
["npcID"] = 11382,
["event"] = "SPELL_CAST_START",
["encounterID"] = 787,
},
[60236] = {
["source"] = "Storming Vortex",
["event"] = "SPELL_CAST_START",
["npcID"] = 28547,
},
[56698] = {
["source"] = "Ahn'kahar Spell Flinger",
["event"] = "SPELL_CAST_START",
["npcID"] = 30278,
},
[59706] = {
["encounterName"] = "Ingvar the Plunderer",
["source"] = "Ingvar the Plunderer",
["npcID"] = 23954,
["event"] = "SPELL_CAST_START",
["encounterID"] = 575,
},
[34019] = {
["event"] = "SPELL_CAST_START",
["source"] = "Bleeding Hollow Necrolyte",
["npcID"] = 19422,
},
[84855] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Dark Mender",
["npcID"] = 45266,
},
[87779] = {
["source"] = "Temple Adept",
["event"] = "SPELL_CAST_START",
["npcID"] = 45935,
},
[69056] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulguard Watchman",
["npcID"] = 36478,
},
[8364] = {
["source"] = "Scarlet Sorcerer",
["event"] = "SPELL_CAST_START",
["npcID"] = 4294,
},
[3815] = {
["source"] = "Aku'mai",
["event"] = "SPELL_CAST_START",
["npcID"] = 4829,
},
[11443] = {
["event"] = "SPELL_CAST_START",
["source"] = "Haunting Vision",
["npcID"] = 4472,
},
[60227] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dragonflayer Strategist",
["npcID"] = 23956,
},
[48873] = {
["encounterName"] = "King Dred",
["source"] = "King Dred",
["npcID"] = 27483,
["event"] = "SPELL_CAST_START",
["encounterID"] = 373,
},
[69076] = {
["encounterName"] = "Lord Marrowgar",
["source"] = "Lord Marrowgar",
["encounterID"] = 845,
["event"] = "SPELL_CAST_START",
["npcID"] = 36612,
},
[30643] = {
["encounterName"] = "Watchkeeper Gargolmar",
["source"] = "Hellfire Watcher",
["encounterID"] = 1893,
["event"] = "SPELL_CAST_START",
["npcID"] = 17309,
},
[49309] = {
["event"] = "SPELL_CAST_START",
["source"] = "Gold Shaman",
["npcID"] = 32340,
},
[71934] = {
["source"] = "Severed Essence",
["event"] = "SPELL_CAST_START",
["npcID"] = 38410,
},
[64692] = {
["source"] = "Mechagnome Battletank",
["event"] = "SPELL_CAST_START",
["npcID"] = 34164,
},
[49696] = {
["source"] = "Risen Drakkari Soulmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 26636,
},
[50504] = {
["source"] = "Arcane Serpent",
["event"] = "SPELL_CAST_START",
["npcID"] = 25721,
},
[12740] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lady Sevine",
["npcID"] = 7667,
},
[75622] = {
["encounterName"] = "Anraphet",
["source"] = "Anraphet",
["npcID"] = 39788,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1075,
},
[7645] = {
["source"] = "Twilight Shadowmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 4813,
},
[6351] = {
["source"] = "Searing Totem III",
["event"] = "SPELL_CAST_START",
["npcID"] = 3903,
},
[56919] = {
["source"] = "Horde Cleric",
["event"] = "SPELL_CAST_START",
["npcID"] = 26803,
},
[78121] = {
["source"] = "Twilight Dragonkin",
["event"] = "SPELL_CAST_START",
["npcID"] = 41029,
},
[21390] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Vyletongue",
["npcID"] = 12236,
},
[51016] = {
["source"] = "Counselor Talbot",
["event"] = "SPELL_CAST_START",
["npcID"] = 25301,
},
[11016] = {
["source"] = "Sandfury Soul Eater",
["event"] = "SPELL_CAST_START",
["npcID"] = 7247,
},
[75645] = {
["source"] = "Corla, Herald of Twilight",
["event"] = "SPELL_CAST_START",
["npcID"] = 39679,
},
[22695] = {
["event"] = "SPELL_CAST_START",
["source"] = "Petrified Guardian",
["npcID"] = 14303,
},
[57413] = {
["event"] = "SPELL_CAST_START",
["source"] = "Keeper Remulos",
["npcID"] = 11832,
},
[57477] = {
["event"] = "SPELL_CAST_START",
["source"] = "Frostbrood Destroyer",
["npcID"] = 30575,
},
[69780] = {
["encounterName"] = "Escaped from Arthas",
["event"] = "SPELL_CAST_START",
["source"] = "The Lich King",
["npcID"] = 36954,
},
[72039] = {
["encounterName"] = "Blood Council",
["source"] = "Prince Valanar",
["encounterID"] = 852,
["event"] = "SPELL_CAST_START",
["npcID"] = 37970,
},
[12890] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shade of Eranikus",
["npcID"] = 5709,
},
[17616] = {
["source"] = "Scholomance Necromancer",
["event"] = "SPELL_CAST_START",
["npcID"] = 10477,
},
[84857] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grawmug",
["npcID"] = 42230,
},
[55814] = {
["encounterName"] = "Eck the Ferocious",
["source"] = "Eck the Ferocious",
["npcID"] = 29932,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1988,
},
[75062] = {
["source"] = "Bloodsail Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 1562,
},
[81147] = {
["source"] = "Avalanchion",
["event"] = "SPELL_CAST_START",
["npcID"] = 44372,
},
[58053] = {
["source"] = "Crusader of Virtue",
["event"] = "SPELL_CAST_START",
["npcID"] = 30189,
},
[16768] = {
["source"] = "Rifleman Middlecamp",
["event"] = "SPELL_CAST_START",
["npcID"] = 10804,
},
[71296] = {
["source"] = "Ymirjar Deathbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 38125,
},
[7487] = {
["source"] = "Wolf Master Nandos",
["event"] = "SPELL_CAST_START",
["npcID"] = 3927,
},
[72037] = {
["encounterName"] = "Blood Council",
["source"] = "Prince Valanar",
["encounterID"] = 852,
["event"] = "SPELL_CAST_START",
["npcID"] = 37970,
},
[6535] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadethicket Raincaller",
["npcID"] = 3783,
},
[8988] = {
["event"] = "SPELL_CAST_START",
["source"] = "Arcanist Doan",
["npcID"] = 6487,
},
[71936] = {
["source"] = "Severed Essence",
["event"] = "SPELL_CAST_START",
["npcID"] = 38410,
},
[82299] = {
["encounterName"] = "Cho'gall",
["source"] = "Cho'gall",
["npcID"] = 43324,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1029,
},
[70145] = {
["encounterName"] = "Escaped from Arthas",
["event"] = "SPELL_CAST_START",
["source"] = "Risen Witch Doctor",
["npcID"] = 36941,
},
[38209] = {
["event"] = "SPELL_CAST_START",
["source"] = "Cho'Rush the Observer",
["npcID"] = 14324,
},
[70116] = {
["source"] = "Spire Frostwyrm",
["event"] = "SPELL_CAST_START",
["npcID"] = 37230,
},
[80549] = {
["event"] = "SPELL_CAST_START",
["source"] = "Raging Firestorm",
["npcID"] = 39939,
},
[15241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Blazing Fireguard",
["npcID"] = 8910,
},
[83067] = {
["encounterName"] = "Ascendant Council",
["source"] = "Arion",
["npcID"] = 43688,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1028,
},
[59013] = {
["event"] = "SPELL_CAST_START",
["source"] = "Risen Drakkari Soulmage",
["npcID"] = 26636,
},
[54983] = {
["source"] = "Proto-Drake Handler",
["event"] = "SPELL_CAST_START",
["npcID"] = 24082,
},
[22414] = {
["event"] = "SPELL_CAST_START",
["source"] = "Warpwood Tangler",
["npcID"] = 11464,
},
[72163] = {
["event"] = "SPELL_CAST_START",
["source"] = "Phantom Mage",
["npcID"] = 38172,
},
[83707] = {
["encounterName"] = "Halfus Wyrmbreaker",
["source"] = "Proto-Behemoth",
["npcID"] = 44687,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1030,
},
[20463] = {
["event"] = "SPELL_CAST_START",
["source"] = "Vol'jin",
["npcID"] = 10540,
},
[13322] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rogue Wizard",
["npcID"] = 474,
},
[75903] = {
["source"] = "Samuelson Unmasked",
["event"] = "SPELL_CAST_START",
["npcID"] = 2439,
},
[32914] = {
["source"] = "Kaliri Matriarch",
["event"] = "SPELL_CAST_START",
["npcID"] = 17035,
},
[90488] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Crossfire",
["npcID"] = 45264,
},
[45324] = {
["source"] = "King Mrgl-Mrgl",
["event"] = "SPELL_CAST_START",
["npcID"] = 25197,
},
[72321] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ghostly Priest",
["npcID"] = 38175,
},
[67751] = {
["encounterName"] = "The Black Knight",
["source"] = "The Black Knight",
["encounterID"] = 340,
["event"] = "SPELL_CAST_START",
["npcID"] = 35451,
},
[102227] = {
["source"] = "Enemy Tonk",
["event"] = "SPELL_CAST_START",
["npcID"] = 54642,
},
[15497] = {
["event"] = "SPELL_CAST_START",
["source"] = "Araj the Summoner",
["npcID"] = 1852,
},
[59973] = {
["encounterName"] = "The Prophet Tharon'ja",
["source"] = "The Prophet Tharon'ja",
["npcID"] = 26632,
["event"] = "SPELL_CAST_START",
["encounterID"] = 375,
},
[20815] = {
["event"] = "SPELL_CAST_START",
["source"] = "Syndicate Wizard",
["npcID"] = 2319,
},
[6725] = {
["event"] = "SPELL_CAST_START",
["source"] = "Death's Head Geomancer",
["npcID"] = 7335,
},
[82524] = {
["encounterName"] = "Cho'gall",
["source"] = "Cho'gall",
["npcID"] = 43324,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1029,
},
[71298] = {
["source"] = "Ymirjar Deathbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 38125,
},
[37776] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lycanthoth",
["npcID"] = 39446,
},
[15609] = {
["event"] = "SPELL_CAST_START",
["source"] = "Quartermaster Zigris",
["npcID"] = 9736,
},
[69028] = {
["encounterName"] = "Krick",
["source"] = "Krick",
["npcID"] = 36477,
["event"] = "SPELL_CAST_START",
["encounterID"] = 835,
},
[58438] = {
["event"] = "SPELL_CAST_START",
["source"] = "Unbound Trickster",
["npcID"] = 30856,
},
[21071] = {
["event"] = "SPELL_CAST_START",
["source"] = "Primordial Behemoth",
["npcID"] = 12206,
},
[9532] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ragefire Shaman",
["npcID"] = 11319,
},
[80382] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tunnel Rat Surveyor",
["npcID"] = 1177,
},
[76416] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Shadow Weaver",
["npcID"] = 39954,
},
[51475] = {
["source"] = "Dark Rune Elementalist",
["event"] = "SPELL_CAST_START",
["npcID"] = 27962,
},
[17137] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scarlet Medic",
["npcID"] = 10605,
},
[17169] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crypt Horror",
["npcID"] = 8557,
},
[42574] = {
["event"] = "SPELL_CAST_START",
["source"] = "Tethyr",
["npcID"] = 23899,
},
[15785] = {
["source"] = "Mana Leech",
["event"] = "SPELL_CAST_START",
["npcID"] = 19306,
},
[15801] = {
["source"] = "Lesser Air Elemental",
["event"] = "SPELL_CAST_START",
["npcID"] = 28384,
},
[67745] = {
["encounterName"] = "The Black Knight",
["source"] = "The Black Knight",
["encounterID"] = 340,
["event"] = "SPELL_CAST_START",
["npcID"] = 35451,
},
[34787] = {
["event"] = "SPELL_CAST_START",
["source"] = "Winterskorn Rune-Seer",
["npcID"] = 23667,
},
[46988] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Balinda Stonehearth",
["npcID"] = 11949,
},
[17393] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lord Aurius Rivendare",
["npcID"] = 45412,
},
[7132] = {
["source"] = "Lupine Horror",
["event"] = "SPELL_CAST_START",
["npcID"] = 3863,
},
[7289] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kurzen Headshrinker",
["npcID"] = 941,
},
[54601] = {
["source"] = "Quetz'lun Worshipper",
["event"] = "SPELL_CAST_START",
["npcID"] = 28747,
},
[90490] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enslaved Water Spirit",
["npcID"] = 39961,
},
[6951] = {
["source"] = "Irradiated Trogg",
["event"] = "SPELL_CAST_START",
["npcID"] = 39826,
},
[31914] = {
["encounterName"] = "Epoch Hunter",
["source"] = "Epoch Hunter",
["npcID"] = 18096,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1906,
},
[86780] = {
["source"] = "Darkmaster Gandling",
["event"] = "SPELL_CAST_START",
["npcID"] = 44323,
},
[11899] = {
["source"] = "Sandfury Witch Doctor",
["event"] = "SPELL_CAST_START",
["npcID"] = 5650,
},
[59910] = {
["encounterName"] = "Novos the Summoner",
["source"] = "Novos the Summoner",
["npcID"] = 26631,
["event"] = "SPELL_CAST_START",
["encounterID"] = 371,
},
[83070] = {
["encounterName"] = "Ascendant Council",
["source"] = "Arion",
["npcID"] = 43688,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1028,
},
[54113] = {
["event"] = "SPELL_CAST_START",
["source"] = "Overlord Drakuru",
["npcID"] = 28998,
},
[87420] = {
["source"] = "Shadowflame Master",
["event"] = "SPELL_CAST_START",
["npcID"] = 41563,
},
[75539] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Rom'ogg Bonecrusher",
["encounterID"] = 1040,
["event"] = "SPELL_CAST_START",
["npcID"] = 39665,
},
[88201] = {
["source"] = "Young Storm Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 45919,
},
[83710] = {
["encounterName"] = "Halfus Wyrmbreaker",
["source"] = "Halfus Wyrmbreaker",
["npcID"] = 44600,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1030,
},
[73564] = {
["encounterName"] = "Siamat",
["source"] = "Siamat",
["npcID"] = 44819,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1055,
},
[86013] = {
["encounterName"] = "Theralion and Valiona",
["source"] = "Valiona",
["npcID"] = 45992,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1032,
},
[54965] = {
["source"] = "Dragonflayer Runecaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 23960,
},
[38033] = {
["event"] = "SPELL_CAST_START",
["source"] = "Lesser Water Elemental",
["npcID"] = 691,
},
[22127] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nordrassil Druid",
["npcID"] = 38952,
},
[76378] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azureborne Guardian",
["npcID"] = 39854,
},
[76418] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Shadow Weaver",
["npcID"] = 39954,
},
[76686] = {
["source"] = "Twilight Obsidian Borer",
["event"] = "SPELL_CAST_START",
["npcID"] = 40019,
},
[34259] = {
["event"] = "SPELL_CAST_START",
["source"] = "Atal'ai Deathwalker",
["npcID"] = 5271,
},
[12549] = {
["source"] = "Sparktouched Oracle",
["event"] = "SPELL_CAST_START",
["npcID"] = 28112,
},
[32690] = {
["event"] = "SPELL_CAST_START",
["source"] = "Sethekk Oracle",
["npcID"] = 18328,
},
[75543] = {
["encounterName"] = "Rom'ogg Bonecrusher",
["source"] = "Rom'ogg Bonecrusher",
["encounterID"] = 1040,
["event"] = "SPELL_CAST_START",
["npcID"] = 39665,
},
[22421] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hydrospawn",
["npcID"] = 13280,
},
[83455] = {
["encounterName"] = "Siamat",
["source"] = "Minion of Siamat",
["npcID"] = 44704,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1055,
},
[11829] = {
["source"] = "Defias Evoker",
["event"] = "SPELL_CAST_START",
["npcID"] = 1729,
},
[59271] = {
["encounterName"] = "Gortok Palehoof",
["source"] = "Massive Jormungar",
["encounterID"] = 579,
["event"] = "SPELL_CAST_START",
["npcID"] = 26685,
},
[69649] = {
["encounterName"] = "Sindragosa",
["source"] = "Sindragosa",
["encounterID"] = 855,
["event"] = "SPELL_CAST_START",
["npcID"] = 36853,
},
[77826] = {
["encounterName"] = "Nefarian's End",
["source"] = "Onyxia",
["npcID"] = 41270,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1026,
},
[53322] = {
["source"] = "Anub'ar Crypt Fiend",
["event"] = "SPELL_CAST_START",
["npcID"] = 29063,
},
[51612] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Rune Scholar",
["npcID"] = 27964,
},
[88445] = {
["event"] = "SPELL_CAST_START",
["source"] = "Dark Iron Lookout",
["npcID"] = 8566,
},
[32370] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Ethereal Apprentice",
["npcID"] = 18430,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1899,
},
[80513] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hovel Brute",
["npcID"] = 39642,
},
[10348] = {
["source"] = "Leprous Technician",
["event"] = "SPELL_CAST_START",
["npcID"] = 6222,
},
[91004] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defias Envoker",
["npcID"] = 48418,
},
[78160] = {
["source"] = "Sethria",
["event"] = "SPELL_CAST_START",
["npcID"] = 41255,
},
[2601] = {
["source"] = "Bloodsail Mage",
["event"] = "SPELL_CAST_START",
["npcID"] = 1562,
},
[20816] = {
["source"] = "Dark Iron Shadowcaster",
["event"] = "SPELL_CAST_START",
["npcID"] = 2577,
},
[81576] = {
["source"] = "Stonecore Earthshaper",
["event"] = "SPELL_CAST_START",
["npcID"] = 43537,
},
[12491] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ward Guardian",
["npcID"] = 4427,
},
[79490] = {
["event"] = "SPELL_CAST_START",
["source"] = "Muckdweller",
["npcID"] = 43532,
},
[83877] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oathsworn Pathfinder",
["npcID"] = 44932,
},
[7295] = {
["source"] = "Rethilgore",
["event"] = "SPELL_CAST_START",
["npcID"] = 3914,
},
[81236] = {
["source"] = "Plagued Hatchling",
["event"] = "SPELL_CAST_START",
["npcID"] = 10678,
},
[15232] = {
["event"] = "SPELL_CAST_START",
["source"] = "Hate'rel",
["npcID"] = 9034,
},
[80130] = {
["event"] = "SPELL_CAST_START",
["source"] = "Maimgor",
["npcID"] = 42768,
},
[75813] = {
["source"] = "Naz'jar Tempest Witch",
["event"] = "SPELL_CAST_START",
["npcID"] = 40634,
},
[83914] = {
["encounterName"] = "Ozumat",
["source"] = "Vicious Mindlasher",
["encounterID"] = 1047,
["event"] = "SPELL_CAST_START",
["npcID"] = 44715,
},
[93456] = {
["source"] = "Captain Cork",
["event"] = "SPELL_CAST_START",
["npcID"] = 47980,
},
[48054] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Mana-Surge",
["npcID"] = 26737,
},
[59366] = {
["encounterName"] = "Krik'thir the Gatewatcher",
["source"] = "Watcher Silthik",
["encounterID"] = 216,
["event"] = "SPELL_CAST_START",
["npcID"] = 28731,
},
[15536] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Infiltrator",
["npcID"] = 40882,
},
[81026] = {
["source"] = "Mok'rash the Cleaver",
["event"] = "SPELL_CAST_START",
["npcID"] = 1493,
},
[68872] = {
["encounterName"] = "Bronjahm",
["source"] = "Bronjahm",
["npcID"] = 36497,
["event"] = "SPELL_CAST_START",
["encounterID"] = 829,
},
[8245] = {
["source"] = "Lorekeeper Polkelt",
["event"] = "SPELL_CAST_START",
["npcID"] = 10901,
},
[12747] = {
["source"] = "Tar Lord",
["event"] = "SPELL_CAST_START",
["npcID"] = 6519,
},
[71303] = {
["source"] = "Ymirjar Deathbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 38125,
},
[49037] = {
["encounterName"] = "Novos the Summoner",
["source"] = "Novos the Summoner",
["encounterID"] = 371,
["event"] = "SPELL_CAST_START",
["npcID"] = 26631,
},
[86819] = {
["source"] = "Twilight Pyremaw",
["event"] = "SPELL_CAST_START",
["npcID"] = 44189,
},
[83780] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pygmy Scout",
["npcID"] = 44897,
},
[71815] = {
["encounterName"] = "Blood Council",
["source"] = "Prince Keleseth",
["encounterID"] = 852,
["event"] = "SPELL_CAST_START",
["npcID"] = 37972,
},
[59528] = {
["encounterName"] = "Volkhan",
["source"] = "Volkhan",
["encounterID"] = 557,
["event"] = "SPELL_CAST_START",
["npcID"] = 28587,
},
[78903] = {
["encounterName"] = "Ozruk",
["source"] = "Ozruk",
["encounterID"] = 1058,
["event"] = "SPELL_CAST_START",
["npcID"] = 42188,
},
[24189] = {
["encounterName"] = "High Priest Thekal",
["source"] = "High Priest Thekal",
["npcID"] = 14509,
["event"] = "SPELL_CAST_START",
["encounterID"] = 789,
},
[74374] = {
["encounterName"] = "Isiset",
["source"] = "Celestial Familiar",
["npcID"] = 39795,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1077,
},
[17618] = {
["source"] = "Scholomance Dark Summoner",
["event"] = "SPELL_CAST_START",
["npcID"] = 11582,
},
[57801] = {
["source"] = "Fjorn",
["event"] = "SPELL_CAST_START",
["npcID"] = 29503,
},
[32011] = {
["event"] = "SPELL_CAST_START",
["source"] = "Purespring Elemental",
["npcID"] = 46953,
},
[10326] = {
["event"] = "SPELL_CAST_START",
["source"] = "Argent Crusader",
["npcID"] = 28029,
},
[18395] = {
["source"] = "Sandfury Shadowhunter",
["event"] = "SPELL_CAST_START",
["npcID"] = 7246,
},
[74670] = {
["encounterName"] = "General Umbriss",
["source"] = "General Umbriss",
["npcID"] = 39625,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1051,
},
[90556] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["npcID"] = 47739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1060,
},
[87680] = {
["event"] = "SPELL_CAST_START",
["source"] = "Obsidian Colossus",
["npcID"] = 46646,
},
[93956] = {
["encounterName"] = "Baron Silverlaine",
["source"] = "Baron Silverlaine",
["npcID"] = 3887,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1070,
},
[81442] = {
["source"] = "Millhouse Manastorm",
["event"] = "SPELL_CAST_START",
["npcID"] = 43391,
},
[93844] = {
["encounterName"] = "Commander Springvale",
["source"] = "Wailing Guardsman",
["npcID"] = 50613,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1071,
},
[75592] = {
["encounterName"] = "Temple Guardian Anhuur",
["source"] = "Temple Guardian Anhuur",
["npcID"] = 39425,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1080,
},
[69897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Rockjaw Scavenger",
["npcID"] = 37105,
},
[32363] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Nexus-Prince Shaffar",
["encounterID"] = 1899,
["event"] = "SPELL_CAST_START",
["npcID"] = 18344,
},
[80009] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Hunter",
["npcID"] = 39437,
},
[9053] = {
["event"] = "SPELL_CAST_START",
["source"] = "Defias Wizard",
["npcID"] = 4418,
},
[70409] = {
["source"] = "Darkfallen Archmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 37664,
},
[79050] = {
["encounterName"] = "High Priestess Azil",
["source"] = "High Priestess Azil",
["encounterID"] = 1057,
["event"] = "SPELL_CAST_START",
["npcID"] = 42333,
},
[15242] = {
["event"] = "SPELL_CAST_START",
["source"] = "Fireguard",
["npcID"] = 8909,
},
[91263] = {
["encounterName"] = "General Husam",
["source"] = "General Husam",
["npcID"] = 44577,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1052,
},
[59017] = {
["event"] = "SPELL_CAST_START",
["source"] = "Scourge Reanimator",
["npcID"] = 26626,
},
[59081] = {
["source"] = "Dragonflayer Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 26554,
},
[77241] = {
["event"] = "SPELL_CAST_START",
["source"] = "Flame Warden",
["npcID"] = 39800,
},
[59209] = {
["source"] = "Azure Inquisitor",
["event"] = "SPELL_CAST_START",
["npcID"] = 27633,
},
[59273] = {
["encounterName"] = "Gortok Palehoof",
["source"] = "Ravenous Furbolg",
["encounterID"] = 579,
["event"] = "SPELL_CAST_START",
["npcID"] = 26684,
},
[81439] = {
["source"] = "Millhouse Manastorm",
["event"] = "SPELL_CAST_START",
["npcID"] = 43391,
},
[13323] = {
["source"] = "Ethereal Theurgist",
["event"] = "SPELL_CAST_START",
["npcID"] = 18315,
},
[73864] = {
["event"] = "SPELL_CAST_START",
["source"] = "Pygmy Scout",
["npcID"] = 48041,
},
[59529] = {
["encounterName"] = "Volkhan",
["source"] = "Volkhan",
["encounterID"] = 557,
["event"] = "SPELL_CAST_START",
["npcID"] = 28587,
},
[89263] = {
["encounterName"] = "\"Captain\" Cookie",
["source"] = "\"Captain\" Cookie",
["npcID"] = 47739,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1060,
},
[76620] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azureborne Warlord",
["npcID"] = 39909,
},
[61897] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ymirjar Element Shaper",
["npcID"] = 31267,
},
[70410] = {
["source"] = "Darkfallen Archmage",
["event"] = "SPELL_CAST_START",
["npcID"] = 37664,
},
[82699] = {
["encounterName"] = "Ascendant Council",
["source"] = "Feludius",
["npcID"] = 43687,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1028,
},
[15498] = {
["event"] = "SPELL_CAST_START",
["source"] = "Shadowforge Senator",
["npcID"] = 8904,
},
[74888] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spatial Anomaly",
["npcID"] = 40170,
},
[15530] = {
["event"] = "SPELL_CAST_START",
["source"] = "Azure Magus",
["npcID"] = 26722,
},
[18802] = {
["source"] = "Onslaught Harbor Guard",
["event"] = "SPELL_CAST_START",
["npcID"] = 29330,
},
[69131] = {
["event"] = "SPELL_CAST_START",
["source"] = "Soulguard Animator",
["npcID"] = 36516,
},
[89663] = {
["event"] = "SPELL_CAST_START",
["source"] = "Kobold Digger",
["npcID"] = 48229,
},
[7799] = {
["event"] = "SPELL_CAST_START",
["source"] = "Zigrin",
["npcID"] = 416,
},
[77703] = {
["event"] = "SPELL_CAST_START",
["source"] = "Grawmug",
["npcID"] = 42230,
},
[79023] = {
["encounterName"] = "Omnotron Defense System",
["source"] = "Magmatron",
["npcID"] = 42178,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1027,
},
[88194] = {
["source"] = "Young Storm Dragon",
["event"] = "SPELL_CAST_START",
["npcID"] = 45919,
},
[69899] = {
["source"] = "Skybreaker Hierophant",
["event"] = "SPELL_CAST_START",
["npcID"] = 37027,
},
[700] = {
["source"] = "Lady Anacondra",
["event"] = "SPELL_CAST_START",
["npcID"] = 3671,
},
[90625] = {
["event"] = "SPELL_CAST_START",
["source"] = "Enormous Gyreworm",
["npcID"] = 48533,
},
[7855] = {
["event"] = "SPELL_CAST_START",
["source"] = "Mjordin Water Magus",
["npcID"] = 30632,
},
[80646] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spirit of Shadowforge",
["npcID"] = 43129,
},
[84868] = {
["event"] = "SPELL_CAST_START",
["source"] = "Black Bear",
["npcID"] = 1186,
},
[46608] = {
["event"] = "SPELL_CAST_START",
["source"] = "Captain Balinda Stonehearth",
["npcID"] = 11949,
},
[88226] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crimsonborne Firestarter",
["npcID"] = 47086,
},
[17235] = {
["event"] = "SPELL_CAST_START",
["source"] = "Nerub'enkan",
["npcID"] = 10437,
},
[15802] = {
["event"] = "SPELL_CAST_START",
["source"] = "Eldreth Phantasm",
["npcID"] = 11475,
},
[59146] = {
["event"] = "SPELL_CAST_START",
["source"] = "Drakkari God Hunter",
["npcID"] = 29820,
},
[65351] = {
["event"] = "SPELL_CAST_START",
["source"] = "Oracle Orphan",
["npcID"] = 33533,
},
[2941] = {
["source"] = "Dunemaul Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 5475,
},
[69516] = {
["event"] = "SPELL_CAST_START",
["source"] = "Ymirjar Deathbringer",
["npcID"] = 36892,
},
[87710] = {
["event"] = "SPELL_CAST_START",
["source"] = "Chosen Seer",
["npcID"] = 46952,
},
[61513] = {
["source"] = "Unrelenting Construct",
["event"] = "SPELL_CAST_START",
["npcID"] = 27971,
},
[11820] = {
["source"] = "Mechanized Guardian",
["event"] = "SPELL_CAST_START",
["npcID"] = 6234,
},
[57547] = {
["event"] = "SPELL_CAST_START",
["source"] = "Val'kyr Taskmistress",
["npcID"] = 31396,
},
[13899] = {
["source"] = "Lord Incendius",
["event"] = "SPELL_CAST_START",
["npcID"] = 9017,
},
[33111] = {
["source"] = "Shadowmoon Warlock",
["event"] = "SPELL_CAST_START",
["npcID"] = 17371,
},
[31948] = {
["encounterName"] = "Rokmar the Crackler",
["source"] = "Rokmar the Crackler",
["encounterID"] = 1941,
["event"] = "SPELL_CAST_START",
["npcID"] = 17991,
},
[74634] = {
["encounterName"] = "General Umbriss",
["source"] = "General Umbriss",
["npcID"] = 39625,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1051,
},
[74762] = {
["source"] = "Irradiated Infantry",
["event"] = "SPELL_CAST_START",
["npcID"] = 39755,
},
[47696] = {
["event"] = "SPELL_CAST_START",
["source"] = "Crazed Mana-Surge",
["npcID"] = 26737,
},
[51854] = {
["source"] = "Thalgran Blightbringer",
["event"] = "SPELL_CAST_START",
["npcID"] = 28443,
},
[82362] = {
["source"] = "Evolved Twilight Zealot",
["event"] = "SPELL_CAST_START",
["npcID"] = 39987,
},
[93697] = {
["encounterName"] = "Lord Walden",
["source"] = "Lord Walden",
["npcID"] = 46963,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1073,
},
[17843] = {
["source"] = "Sandfury Witch Doctor",
["event"] = "SPELL_CAST_START",
["npcID"] = 5650,
},
[83718] = {
["encounterName"] = "Ascendant Council",
["source"] = "Terrastra",
["npcID"] = 43689,
["event"] = "SPELL_CAST_START",
["encounterID"] = 1028,
},
[43986] = {
["source"] = "Vrykul Harpoon Gun",
["event"] = "SPELL_CAST_START",
["npcID"] = 27992,
},
[52238] = {
["encounterName"] = "Volkhan",
["source"] = "Volkhan",
["encounterID"] = 557,
["event"] = "SPELL_CAST_START",
["npcID"] = 28587,
},
[84873] = {
["source"] = "Mudbelly Boar",
["event"] = "SPELL_CAST_START",
["npcID"] = 44627,
},
[42131] = {
["source"] = "Guard Lasiter",
["event"] = "SPELL_CAST_START",
["npcID"] = 4973,
},
[32364] = {
["encounterName"] = "Nexus-Prince Shaffar",
["source"] = "Nexus-Prince Shaffar",
["encounterID"] = 1899,
["event"] = "SPELL_CAST_START",
["npcID"] = 18344,
},
[24208] = {
["encounterName"] = "High Priest Thekal",
["source"] = "Zealot Lor'Khan",
["npcID"] = 11347,
["event"] = "SPELL_CAST_START",
["encounterID"] = 789,
},
[6064] = {
["source"] = "Kurzen Medicine Man",
["event"] = "SPELL_CAST_START",
["npcID"] = 940,
},
[8275] = {
["event"] = "SPELL_CAST_START",
["source"] = "Razorfen Beastmaster",
["npcID"] = 4532,
},
[58827] = {
["encounterName"] = "Salram the Fleshcrafter",
["source"] = "Salramm the Fleshcrafter",
["npcID"] = 26530,
["event"] = "SPELL_CAST_START",
["encounterID"] = 294,
},
[4971] = {
["event"] = "SPELL_CAST_START",
["source"] = "Death's Head Sage",
["npcID"] = 4518,
},
[8040] = {
["source"] = "Druid of the Fang",
["event"] = "SPELL_CAST_START",
["npcID"] = 3840,
},
[59019] = {
["event"] = "SPELL_CAST_START",
["source"] = "Spitting Cobra",
["npcID"] = 29774,
},
[59083] = {
["source"] = "Dragonflayer Seer",
["event"] = "SPELL_CAST_START",
["npcID"] = 26554,
},
[76720] = {
["event"] = "SPELL_CAST_START",
["source"] = "Twilight Stormbreaker",
["npcID"] = 39962,
},
},
["InterruptableSpells"] = {
[1766] = true,
[47528] = true,
[19675] = true,
[93985] = true,
[33871] = true,
[2139] = true,
[37470] = true,
[71022] = true,
[77334] = true,
[10887] = true,
[42780] = true,
[15614] = true,
[413097] = true,
[15615] = true,
[30849] = true,
[42729] = true,
[88029] = true,
[96231] = true,
[76583] = true,
[32747] = true,
[67519] = true,
[53394] = true,
[19647] = true,
[6552] = true,
[31935] = true,
[58824] = true,
[59708] = true,
[97547] = true,
[20537] = true,
[11972] = true,
[7074] = true,
[15501] = true,
[59283] = true,
[56730] = true,
[34490] = true,
[72194] = true,
[72] = true,
[59734] = true,
[62522] = true,
[57994] = true,
[11978] = true,
[59180] = true,
[58690] = true,
},
["performance_units"] = {
[176920] = true,
[214441] = true,
[211306] = true,
[196642] = true,
[167999] = true,
[189707] = true,
[219746] = true,
[220626] = true,
},
["profiles"] = {
["Default"] = {
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1669327144,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 632,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["version"] = -1,
["Name"] = "Aura - Buff Alert [Plater]",
["PlaterCore"] = 1,
["SpellIds"] = {
398151,
377738,
378149,
282801,
},
["Desc"] = "Add the buff name in the trigger box.",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 37,
["Options"] = {
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["version"] = -1,
["Name"] = "Cast - Effect After Cast [P]",
["PlaterCore"] = 1,
["SpellIds"] = {
191284,
},
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["semver"] = "",
["Icon"] = 134229,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1670201853,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 533,
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Arrow:",
["Value"] = "Arrow:",
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Name"] = "Arrow Width",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "arrowWidth",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Name"] = "Option 13",
["Value"] = 0,
["Key"] = "option13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Dot Animation:",
["Value"] = "Dot Animation:",
["Key"] = "option12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Dot Color",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 4,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Color",
["Value"] = false,
["Key"] = "useNameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054031,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["version"] = -1,
["Name"] = "Explosion Affix M+ [Plater]",
["PlaterCore"] = 1,
["SpellIds"] = {
240446,
385339,
198077,
210261,
360857,
389446,
},
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["semver"] = "",
["Icon"] = 2175503,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1669327144,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 368,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Glow Enabled",
["Value"] = false,
["Key"] = "glowEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Glow Color",
["Value"] = {
0.403921568627451,
0.00392156862745098,
0,
1,
},
["Key"] = "glowColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Dots Enabled",
["Value"] = true,
["Key"] = "dotsEnabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.3215686274509804,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Author"] = "Tercioo-Sylvanas",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["version"] = -1,
["Name"] = "Aura - Debuff Alert [Plater]",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Add the debuff name in the trigger box.",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 1213,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Cast start animation settings",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Name"] = "Cast Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["Name"] = "Cast - Alert + Timer [P]",
["PlaterCore"] = 1,
["SpellIds"] = {
350421,
355787,
348513,
},
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 694,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 3,
["Name"] = "Health Bar Height Mod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Use Cast Bar Color",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.431372,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Arrow",
["Value"] = true,
["Key"] = "showArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Key"] = "arrowAlpha",
["Value"] = 0.5,
["Name"] = "Arrow Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Key"] = "arrowHeight",
["Value"] = 8,
["Name"] = "Arrow Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.615686274509804,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 4,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["version"] = -1,
["Name"] = "Cast - Ultra Important [P]",
["PlaterCore"] = 1,
["SpellIds"] = {
383823,
382670,
388537,
372851,
200682,
192307,
196838,
193827,
194043,
209410,
211464,
361180,
156718,
395859,
358320,
374045,
386757,
367500,
370225,
376200,
372107,
388923,
376934,
384899,
373960,
374724,
385551,
259732,
373424,
373084,
87618,
255041,
428926,
76634,
200050,
197546,
198079,
199193,
266181,
253544,
},
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1683596223,
["url"] = "",
["NpcNames"] = {
"197697",
"59544",
"186227",
"184020",
"91005",
},
["Enabled"] = true,
["Revision"] = 146,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Vertical Line Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "indicatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Key"] = "indicatorAlpha",
["Value"] = 0.79,
["Name"] = "Vertical Line Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Name"] = "Fill Alpha",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "fillAlpha",
},
},
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["version"] = -1,
["Name"] = "Add - Health Markers [P]",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 662,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Plays a small animation when the cast start.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.6,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Name"] = "Flash Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "flashColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["version"] = -1,
["Name"] = "Cast - Small Alert [Plater]",
["PlaterCore"] = 1,
["SpellIds"] = {
376851,
396044,
381517,
373932,
397801,
208165,
392576,
198750,
387843,
387411,
211299,
198595,
198934,
198962,
156722,
350554,
348513,
351779,
328180,
319898,
281420,
274383,
259092,
367521,
374544,
385039,
382474,
369823,
377500,
260879,
186269,
378818,
371875,
372225,
200658,
266036,
265407,
164965,
429176,
428526,
418200,
407124,
200630,
415437,
264050,
267824,
271579,
301088,
423479,
},
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670423785,
["url"] = "",
["NpcNames"] = {
"196548",
"195580",
"195820",
"195821",
"189886",
"75966",
"102019",
"187159",
"194897",
"104251",
"101326",
"189669",
"192464",
190381,
92538,
192464,
131009,
127315,
133361,
136330,
214117,
212483,
101008,
194745,
190426,
152033,
170234,
220368,
231176,
213751,
},
["Enabled"] = true,
["Revision"] = 572,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.5254901960784314,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Name"] = "Nameplate Size Offset",
["Value"] = 3,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "nameplateSizeOffset",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.7137255072593689,
0,
0.5631310641765594,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Name"] = "Show Extra Texture",
["Value"] = false,
["Key"] = "showExtraTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.4627450980392157,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "skullAlpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Name"] = "Scale",
["Value"] = 0.6,
["Key"] = "skullScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 7,
["Name"] = "Npc Color By NpcID",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["version"] = -1,
["Name"] = "Add - Important [P]",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1626382829,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 375,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Key"] = "timeleftToBlink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Timeleft to Blink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "blinkSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Key"] = "blinkMaxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.2862745098039216,
0.00392156862745098,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option10",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Warning",
["Value"] = 8,
["Key"] = "timeLeftWarning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Name"] = "Time Left Critical",
["Value"] = 3,
["Key"] = "timeLeftCritical",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.8705882352941177,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.07450980392156863,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["version"] = -1,
["Name"] = "Aura - Blink by Time Left [Plater]",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["NpcNames"] = {
"195138",
"192955",
"190294",
"76518",
},
["Enabled"] = false,
["Revision"] = 161,
["Options"] = {
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
["version"] = -1,
["Name"] = "Add - Tag Number [P]",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["semver"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 547,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Key"] = "segmentsAmount",
["Value"] = 7,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["Name"] = "Cast - Glowing [P]",
["PlaterCore"] = 1,
["SpellIds"] = {
376644,
386781,
384823,
385536,
392398,
375596,
387135,
360850,
212784,
199033,
199034,
200969,
394512,
397881,
396020,
374430,
384353,
265376,
193941,
411002,
169445,
},
["Desc"] = "Show a different animation for the cast bar.",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 878,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Name"] = "Flash Duration",
["Value"] = 0.8,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Name"] = "Shake Amplitude",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 40,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Dot X Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot Y Offset",
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Name"] = "Option 27",
["Value"] = 0,
["Key"] = "option27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 28",
["Value"] = "Target Options",
["Key"] = "option28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 14,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetNameSize",
},
{
["Type"] = 4,
["Name"] = "Use Class Color",
["Value"] = true,
["Key"] = "colorByClass",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Text Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Background Color",
["Value"] = {
0,
0,
0,
0.9846720322966576,
},
["Key"] = "targetBgColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Border Color",
["Value"] = {
0,
0,
0,
1,
},
["Key"] = "targetBgBorderColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Name"] = "Frame Width",
["Value"] = 90,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "targetFrameWidth",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Key"] = "targetFrameHeight",
["Value"] = 20,
["Name"] = "Frame Height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
["version"] = -1,
["Name"] = "Cast - Important Target [P]",
["PlaterCore"] = 1,
["SpellIds"] = {
270042,
260813,
},
["Desc"] = "Highlight the target name",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 887,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Name"] = "Shake Amplitude",
["Value"] = 25,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Name"] = "Shake Frequency",
["Value"] = 30,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
},
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["Name"] = "Cast - Quick Flash [P]",
["PlaterCore"] = 1,
["SpellIds"] = {
392640,
397888,
209033,
385029,
374563,
377341,
369675,
369365,
369411,
278961,
202108,
88186,
255824,
252781,
250096,
200248,
197797,
264520,
418202,
201839,
412012,
411958,
},
["Desc"] = "Play a very fast flash when the cast start",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1669327146,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 65,
["Options"] = {
},
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["version"] = -1,
["Name"] = "Aura is Shield [P]",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["semver"] = "",
["Icon"] = 610472,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["NpcNames"] = {
"190187",
"189893",
"99922",
"104822",
129758,
186696,
101075,
100818,
98081,
52019,
},
["Enabled"] = true,
["Revision"] = 162,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
1,
0.4392157196998596,
0.458823561668396,
1,
},
["Key"] = "healthBarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Flash Nameplate",
["Value"] = true,
["Key"] = "useFlash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Name"] = "NpcID to Color",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Key"] = "npcColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["Name"] = "Add - Warning [P]",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Change the color of  add",
["semver"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1673726734,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 18,
["Options"] = {
},
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["version"] = -1,
["Name"] = "Aura While Casting [P]",
["PlaterCore"] = 1,
["SpellIds"] = {
372743,
372749,
384933,
},
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["semver"] = "",
["Icon"] = 236209,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 1194,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Cast Bar Color Enabled",
["Value"] = true,
["Key"] = "useCastbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Name"] = "Cast Bar Color",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Key"] = "castbarColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Name"] = "Blank Line",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Name"] = "Flash Duration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Name"] = "Cast Bar Height Mod",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "castBarHeight",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Name"] = "Shake Duration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
},
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["Name"] = "Cast - Big Alert [Plater]",
["PlaterCore"] = 1,
["SpellIds"] = {
396640,
372743,
377389,
396812,
388392,
387955,
386546,
377503,
384808,
386024,
387615,
387606,
225100,
211401,
211470,
215433,
192563,
198959,
152818,
156776,
398206,
153524,
396073,
396018,
345202,
377950,
372223,
350421,
352158,
349985,
329239,
328400,
384194,
392451,
392924,
397889,
209413,
207980,
257397,
257736,
382787,
374699,
377402,
369602,
369465,
369400,
381593,
265091,
265433,
382791,
376780,
225573,
278444,
164887,
168082,
76813,
227913,
265368,
},
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 506,
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Name"] = "Amount of Segments",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "segmentsAmount",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.9568627450980391,
1,
0.9882352941176471,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.8588235294117647,
0.4313725490196079,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["Name"] = "Cast - Stop Casting [P]",
["PlaterCore"] = 1,
["SpellIds"] = {
377004,
381516,
196543,
199726,
200291,
268202,
},
["Desc"] = "Just stop casting",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1611844883,
["url"] = "",
["NpcNames"] = {
"174773",
},
["Enabled"] = true,
["Revision"] = 186,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Key"] = "bgWidth",
["Value"] = 27,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Width",
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.5058823529411764,
0.07058823529411765,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Key"] = "textSize",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254901961,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 7",
["Value"] = 0,
["Key"] = "option7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Target instead of Name",
["Value"] = true,
["Key"] = "switchTargetName",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Color if targeting You",
["Value"] = true,
["Key"] = "useTargetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Color if targeting You",
["Value"] = {
0.07058823529411765,
0.6196078431372549,
0,
1,
},
["Key"] = "targetingColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["version"] = -1,
["Name"] = "M+ Spiteful",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Time to die Spiteful affix",
["semver"] = "",
["Icon"] = 135945,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1604696441,
["url"] = "",
["NpcNames"] = {
"163520",
"163618",
"164506",
},
["Enabled"] = false,
["Revision"] = 63,
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["version"] = -1,
["Name"] = "Auto Set Skull",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Auto set skull marker",
["semver"] = "",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1604357453,
["url"] = "",
["NpcNames"] = {
"164406",
"164407",
"162100",
"162099",
"162329",
"164558",
},
["Enabled"] = true,
["Revision"] = 233,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "add trigger",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Name"] = "Option 2",
["Value"] = 0,
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Name"] = "Text Size",
["Value"] = 16,
["Key"] = "fontSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.803921568627451,
0.803921568627451,
0.803921568627451,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["version"] = -1,
["Name"] = "Unit - Show Energy [Plater]",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Show the energy amount above the nameplate.",
["semver"] = "",
["Icon"] = 136048,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1670427838,
["url"] = "",
["NpcNames"] = {
"194622",
"190205",
"197398",
"77006",
},
["Enabled"] = true,
["Revision"] = 111,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.0941176563501358,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Change Nameplate Scale",
["Value"] = true,
["Key"] = "useNameplateScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Scale",
},
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["version"] = -1,
["Name"] = "Add - Non Elite Trash [P]",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "",
["semver"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 101,
["Options"] = {
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["version"] = -1,
["Name"] = "Cast - Shield Interrupt [P]",
["PlaterCore"] = 1,
["SpellIds"] = {
373688,
391050,
},
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["semver"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 162,
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Name"] = "Rotation Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "rotationDuration",
},
{
["Type"] = 6,
["Name"] = "Option 5",
["Value"] = 0,
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Name"] = "Animation Start Duration",
["Value"] = 0.3,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "animStartDuration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Key"] = "textureStartAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Start Alpha",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Texture Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureScale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Name"] = "Texture Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureAlpha",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["version"] = -1,
["Name"] = "Cast - Circle AoE [P]",
["PlaterCore"] = 1,
["SpellIds"] = {
385916,
386063,
388822,
373087,
397785,
106864,
193660,
198263,
387910,
370766,
375591,
384336,
209404,
209378,
210875,
396001,
397899,
386559,
382555,
258672,
258777,
257756,
257784,
256405,
256589,
393793,
388046,
375079,
390290,
369811,
369703,
226287,
410999,
372561,
256882,
172578,
412063,
},
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 73,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Dots Color",
["Value"] = {
1,
1,
1,
0.4166216850280762,
},
["Key"] = "dotColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Key"] = "xOffset",
["Value"] = 0,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Dots Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "yOffset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Name"] = "Blink Speed",
["Value"] = 0.4,
["Key"] = "speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Name"] = "Blink Min Alpha",
["Value"] = 0,
["Key"] = "minAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Key"] = "maxAlpha",
["Value"] = 0.5,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.01960784383118153,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
["version"] = -1,
["Name"] = "Cast - On Going Cast [P]",
["PlaterCore"] = 1,
["SpellIds"] = {
388886,
209676,
377912,
},
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["semver"] = "",
["Icon"] = 4038101,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1668886509,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 33,
["Options"] = {
{
["Type"] = 1,
["Name"] = "Nameplate Color",
["Value"] = {
0,
0.5568627450980392,
0.03529411764705882,
1,
},
["Key"] = "nameplateColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["version"] = -1,
["Name"] = "Fixate by Unit Buff [P]",
["PlaterCore"] = 1,
["SpellIds"] = {
426662,
426663,
},
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["semver"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1670202265,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 620,
["Options"] = {
{
["Type"] = 6,
["Name"] = "Option 1",
["Value"] = 0,
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "Option 3",
["Value"] = 0,
["Key"] = "option3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "animSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Speed",
},
{
["Type"] = 4,
["Name"] = "Use White Arrow",
["Value"] = false,
["Key"] = "desaturateArrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["version"] = -1,
["Name"] = "Cast - Frontal Cone [Plater]",
["PlaterCore"] = 1,
["SpellIds"] = {
375943,
385958,
388623,
377034,
374361,
381525,
386660,
385578,
384699,
153501,
153686,
154442,
192018,
219488,
372087,
391726,
391723,
377383,
388976,
370764,
387067,
391118,
391136,
382233,
209027,
212031,
207261,
207979,
198888,
199805,
199050,
191508,
152792,
153395,
352833,
330403,
209495,
257426,
255952,
257870,
413147,
383107,
377559,
388060,
376170,
384524,
375351,
390111,
369791,
369573,
369563,
369335,
369061,
375727,
265016,
265019,
260793,
260292,
272457,
272609,
269843,
183465,
226296,
188169,
183088,
410873,
411012,
88308,
382708,
375251,
375439,
372311,
373742,
372201,
374533,
377204,
201226,
204667,
198379,
200768,
253239,
250258,
255567,
194956,
427510,
426645,
412505,
412129,
419351,
401482,
404916,
200345,
200261,
198641,
265372,
271174,
264694,
264923,
1217279,
267551,
275907,
259940,
283421,
293986,
291865,
292264,
1215738,
334023,
317231,
320729,
333294,
330614,
323608,
432198,
441119,
448619,
436592,
473220,
472452,
465682,
465754,
473114,
1217496,
422122,
426261,
421277,
427025,
426893,
474018,
1214546,
445457,
447270,
},
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["NpcNames"] = {
"194895",
"105703",
"59598",
"58319",
200388,
189299,
131402,
135052,
130653,
231497,
},
["Enabled"] = true,
["Revision"] = 106,
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Key"] = "shakeAmplitude",
["Value"] = 0.2,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 70,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["version"] = -1,
["Name"] = "Add - Explode on Die [P]",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "",
["semver"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1604239880,
["url"] = "",
["NpcNames"] = {
"165560",
},
["Enabled"] = true,
["Revision"] = 269,
["Options"] = {
},
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["version"] = -1,
["Name"] = "Fixate [Plater]",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Desc"] = "Show above the nameplate who is the player fixated",
["semver"] = "",
["Icon"] = 1029718,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local GetSpellInfo = GetSpellInfo or function(spellID) if not spellID then return nil end local si = C_Spell.GetSpellInfo(spellID) if si then return si.name, nil, si.iconID, si.castTime, si.minRange, si.maxRange, si.spellID, si.originalIconID end end --compatibility\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        --[225976] = {secondCastBar = true, altCastId = \"Uber Strike\",  debuffTimer = 167385, name = GetSpellInfo(167385), spellIcon = 167385}, --tank dummy        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        config.text = npcInfo.name\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local auras = Plater.GetUnitAuras(unitFrame)\n                local duration, expirationTime\n                for _, aura in pairs(auras) do\n                    if aura.name == name then\n                        duration = aura.duration\n                        expirationTime = aura.expirationTime\n                        break\n                    end\n                end\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend",
["Time"] = 1729585139,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Revision"] = 234,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["NpcNames"] = {
"164427",
"164414",
"164185",
"164567",
"165408",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Countdown",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                --get the debuff timeleft\n                local name = npcInfo.name\n                local auras = Plater.GetUnitAuras(unitFrame)\n                local duration, expirationTime\n                for _, aura in pairs(auras) do\n                    if aura.name == name then\n                        duration = aura.duration\n                        expirationTime = aura.expirationTime\n                        break\n                    end\n                end\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 828,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Option 2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Name"] = "Flash Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "flashDuration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Shake",
["Value"] = "Shake:",
["Key"] = "option2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Name"] = "Shake Duration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeDuration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeAmplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "shakeFrequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.5647058823529412,
0.5647058823529412,
0.5647058823529412,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Name"] = "Dot X Offset",
["Value"] = 8,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "xOffset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Key"] = "yOffset",
["Value"] = 3,
["Name"] = "Dot Y Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank",
["Value"] = 0,
["Key"] = "option18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.4117647058823529,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["version"] = -1,
["Name"] = "Cast - Very Important [Plater]",
["PlaterCore"] = 1,
["SpellIds"] = {
373046,
372863,
164686,
153072,
153680,
196497,
388886,
387145,
384365,
152964,
398150,
152801,
397878,
397914,
183263,
3636,
376171,
350687,
372735,
373017,
350687,
392488,
257732,
256060,
257899,
384633,
374339,
395694,
391634,
372701,
369328,
265487,
413044,
183526,
88194,
87762,
413385,
411001,
378282,
384161,
259572,
255371,
427460,
429172,
426500,
413607,
412922,
417481,
201399,
411994,
415770,
260907,
260703,
260741,
265876,
263959,
266225,
253517,
377488,
},
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --compat\n    local GetSpellInfo = GetSpellInfo or function(spellID) if not spellID then return nil end local si = C_Spell.GetSpellInfo(spellID) if si then return si.name, nil, si.iconID, si.castTime, si.minRange, si.maxRange, si.spellID, si.originalIconID end end\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        --[167385] = \"Uber Strike\", --tank dummy\n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    local auras = Plater.GetUnitAuras(unitFrame)\n    for id, aura in pairs(auras) do\n        local name, caster = aura.name, aura.sourceUnit\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n            break\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1729585422,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = true,
["Revision"] = 279,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["NpcNames"] = {
"Illusionary Vulpin",
129802,
133482,
235631,
231014,
},
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["PlaterCore"] = 1,
["Name"] = "Fixate On You [Plater]",
["version"] = -1,
["Options"] = {
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
},
},
["saved_cvars_last_change"] = {
["nameplateMinAlpha"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1559: in function <Interface/AddOns/Plater/Plater.lua:1540>\n",
["nameplateMinAlphaDistance"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1559: in function <Interface/AddOns/Plater/Plater.lua:1540>\n",
["nameplateSelectedAlpha"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1559: in function <Interface/AddOns/Plater/Plater.lua:1540>\n",
["nameplateRemovalAnimation"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1559: in function <Interface/AddOns/Plater/Plater.lua:1540>\n",
["nameplateShowEnemies"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1559: in function <Interface/AddOns/Plater/Plater.lua:1540>\n",
["nameplateNotSelectedAlpha"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1559: in function <Interface/AddOns/Plater/Plater.lua:1540>\n",
["nameplateOtherAtBase"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1559: in function <Interface/AddOns/Plater/Plater.lua:1540>\n",
},
["indicator_raidmark_scale"] = 0.9999999403953552,
["cast_statusbar_spark_alpha"] = 0.8299999833106995,
["aura2_y_offset"] = 5,
["expansion_triggerwipe"] = {
[2] = true,
[3] = true,
},
["npc_cache"] = {
[18323] = {
"Sethekk Guard",
"Eastern Kingdoms",
"enUS",
},
[40788] = {
"Mindbender Ghur'sha",
"Throne of the Tides",
"enUS",
},
[10221] = {
"Bloodaxe Worg Pup",
"Blackrock Spire",
"enUS",
},
[36886] = {
"Geist Ambusher",
"Pit of Saron",
"enUS",
},
[26735] = {
"Azure Scale-Binder",
"The Nexus",
"enUS",
},
[30893] = {
"Portal Keeper",
"Violet Hold",
"enUS",
},
[28878] = {
"Skeletal Minion",
"The Culling of Stratholme",
"enUS",
},
[8318] = {
"Atal'ai Slave",
"Sunken Temple",
"enUS",
},
[10381] = {
"Ravaged Cadaver",
"Stratholme",
"enUS",
},
[6232] = {
"Arcane Nullifier X-21",
"Gnomeregan",
"enUS",
},
[10477] = {
"Scholomance Necromancer",
"Scholomance",
"enUS",
},
[40021] = {
"Incendiary Spark",
"Blackrock Caverns",
"enUS",
},
[29358] = {
"XAAB",
"Icecrown Citadel",
"enUS",
},
[4289] = {
"Scarlet Evoker",
"Scarlet Monastery",
"enUS",
},
[4297] = {
"Scarlet Conjuror",
"Scarlet Monastery",
"enUS",
},
[44819] = {
"Siamat",
"Lost City of the Tol'vir",
"enUS",
},
[29742] = {
"Snake Wrap",
"Gundrak",
"enUS",
},
[29774] = {
"Spitting Cobra",
"Gundrak",
"enUS",
},
[45267] = {
"Twilight Phase-Twister",
"The Bastion of Twilight",
"enUS",
},
[29838] = {
"Drakkari Rhino",
"Gundrak",
"enUS",
},
[33113] = {
"Flame Leviathan",
"Ulduar",
"enUS",
},
[4417] = {
"Defias Taskmaster",
"Deadmines",
"enUS",
},
[49681] = {
"Foe Reaper 5000",
"Deadmines",
"enUS",
},
[27983] = {
"Dark Rune Protector",
"Halls of Stone",
"enUS",
},
[8894] = {
"Anvilrage Medic",
"Blackrock Depths",
"enUS",
},
[8910] = {
"Blazing Fireguard",
"Blackrock Depths",
"enUS",
},
[13036] = {
"Gordok Mastiff",
"Dire Maul",
"enUS",
},
[17940] = {
"Coilfang Technician",
"Coilfang: The Slave Pens",
"enUS",
},
[30286] = {
"Frostbringer",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[48338] = {
"Mine Bunny",
"Deadmines",
"enUS",
},
[9038] = {
"Seeth'rel",
"Blackrock Depths",
"enUS",
},
[30414] = {
"Forgotten One",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[13196] = {
"Phase Lasher",
"Dire Maul",
"enUS",
},
[11197] = {
"Mindless Skeleton",
"Stratholme",
"enUS",
},
[13276] = {
"Wildspawn Imp",
"Dire Maul",
"enUS",
},
[416] = {
"Gakuri",
"Scholomance",
"enUS",
},
[11261] = {
"Doctor Theolen Krastinov",
"Scholomance",
"enUS",
},
[417] = {
"Flaafenn",
"Icecrown Citadel",
"enUS",
},
[26672] = {
"Bloodthirsty Tundra Wolf",
"Utgarde Pinnacle",
"enUS",
},
[166359] = {
"Zulian Tiger",
"Zul'Gurub",
"enUS",
},
[45268] = {
"Servant of Siamat",
"Lost City of the Tol'vir",
"enUS",
},
[11373] = {
"Razzashi Cobra",
"Zul'Gurub",
"enUS",
},
[24849] = {
"Proto-Drake Rider",
"Utgarde Keep",
"enUS",
},
[26928] = {
"Grand Magus Telestra",
"The Nexus",
"enUS",
},
[11453] = {
"Wildspawn Trickster",
"Dire Maul",
"enUS",
},
[11469] = {
"Eldreth Seether",
"Dire Maul",
"enUS",
},
[11501] = {
"King Gordok",
"Dire Maul",
"enUS",
},
[11517] = {
"Oggleflint",
"Ragefire Chasm",
"enUS",
},
[40023] = {
"Defiled Earth Rager",
"Blackrock Caverns",
"enUS",
},
[38104] = {
"Plagued Zombie",
"Icecrown Citadel",
"enUS",
},
[4809] = {
"Twilight Acolyte",
"Blackfathom Deeps",
"enUS",
},
[4825] = {
"Aku'mai Snapjaw",
"Blackfathom Deeps",
"enUS",
},
[17269] = {
"Bleeding Hollow Darkcaster",
"Hellfire Citadel: Ramparts",
"enUS",
},
[36633] = {
"Ice Sphere",
"Icecrown Citadel",
"enUS",
},
[1725] = {
"Defias Watchman",
"Deadmines",
"enUS",
},
[4857] = {
"Stone Keeper",
"Uldaman",
"enUS",
},
[1729] = {
"Defias Evoker",
"Deadmines",
"enUS",
},
[1731] = {
"Goblin Craftsman",
"Deadmines",
"enUS",
},
[45269] = {
"Servant of Siamat",
"Lost City of the Tol'vir",
"enUS",
},
[43286] = {
"Crystal Shard",
"The Stonecore",
"enUS",
},
[17653] = {
"Shadowmoon Channeler",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[27984] = {
"Dark Rune Stormcaller",
"Halls of Stone",
"enUS",
},
[23954] = {
"Ingvar the Plunderer",
"Utgarde Keep",
"enUS",
},
[4977] = {
"Murkshallow Softshell",
"Blackfathom Deeps",
"enUS",
},
[1763] = {
"Gilnid",
"Deadmines",
"enUS",
},
[30287] = {
"Plundering Geist",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[30319] = {
"Twilight Darkcaster",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[28368] = {
"Ymirjar Necromancer",
"Utgarde Pinnacle",
"enUS",
},
[34267] = {
"Parts Recovery Technician",
"Ulduar",
"enUS",
},
[40600] = {
"Faceless Corruptor",
"Grim Batol",
"enUS",
},
[5097] = {
"Lupine Delusion",
"Shadowfang Keep",
"enUS",
},
[26641] = {
"Drakkari Gutripper",
"Drak'Tharon Keep",
"enUS",
},
[36954] = {
"The Lich King",
"Halls of Reflection",
"enUS",
},
[26737] = {
"Crazed Mana-Surge",
"The Nexus",
"enUS",
},
[37146] = {
"Kor'kron Sniper",
"Icecrown Citadel",
"enUS",
},
[26801] = {
"Horde Ranger",
"The Nexus",
"enUS",
},
[8319] = {
"Nightmare Whelp",
"Sunken Temple",
"enUS",
},
[10382] = {
"Mangled Cadaver",
"Stratholme",
"enUS",
},
[26929] = {
"Grand Magus Telestra",
"The Nexus",
"enUS",
},
[43735] = {
"Elementium Monstrosity",
"The Bastion of Twilight",
"enUS",
},
[7272] = {
"Theka the Martyr",
"Zul'Farrak",
"enUS",
},
[10478] = {
"Splintered Skeleton",
"Scholomance",
"enUS",
},
[3653] = {
"Kresh",
"Wailing Caverns",
"enUS",
},
[7320] = {
"Stonevault Mauler",
"UNKNOWN",
"enUS",
},
[7328] = {
"Withered Reaver",
"Razorfen Downs",
"enUS",
},
[3669] = {
"Lord Cobrahn",
"Wailing Caverns",
"enUS",
},
[3673] = {
"Lord Serpentis",
"Wailing Caverns",
"enUS",
},
[7352] = {
"Frozen Soul",
"Razorfen Downs",
"enUS",
},
[17270] = {
"Bleeding Hollow Archer",
"Hellfire Citadel: Ramparts",
"enUS",
},
[1853] = {
"Darkmaster Gandling",
"Scholomance",
"enUS",
},
[49045] = {
"Augh",
"Lost City of the Tol'vir",
"enUS",
},
[29680] = {
"Slad'ran Viper",
"Gundrak",
"enUS",
},
[36891] = {
"Iceborn Proto-Drake",
"Pit of Saron",
"enUS",
},
[27729] = {
"Enraging Ghoul",
"The Culling of Stratholme",
"enUS",
},
[49493] = {
"Nightmare Skitterling",
"Deadmines",
"enUS",
},
[14988] = {
"Ohgan",
"Zul'Gurub",
"enUS",
},
[27985] = {
"Iron Golem Custodian",
"Halls of Stone",
"enUS",
},
[8895] = {
"Anvilrage Officer",
"Blackrock Depths",
"enUS",
},
[8911] = {
"Fireguard Destroyer",
"Blackrock Depths",
"enUS",
},
[13021] = {
"Warpwood Crusher",
"Dire Maul",
"enUS",
},
[24083] = {
"Enslaved Proto-Drake",
"Utgarde Keep",
"enUS",
},
[48278] = {
"Mining Monkey",
"Deadmines",
"enUS",
},
[9039] = {
"Doom'rel",
"Blackrock Depths",
"enUS",
},
[7608] = {
"Murta Grimgut",
"Zul'Farrak",
"enUS",
},
[34269] = {
"XR-949 Salvagebot",
"Ulduar",
"enUS",
},
[13197] = {
"Fel Lash",
"Dire Maul",
"enUS",
},
[42649] = {
"Drakonid Chainwielder",
"Blackwing Descent",
"enUS",
},
[18326] = {
"Sethekk Shaman",
"Auchindoun: Sethekk Halls",
"enUS",
},
[9199] = {
"Spirestone Enforcer",
"Blackrock Spire",
"enUS",
},
[36892] = {
"Ymirjar Deathbringer",
"Pit of Saron",
"enUS",
},
[26674] = {
"Darkweb Hatchling",
"Drak'Tharon Keep",
"enUS",
},
[3853] = {
"Shadowfang Moonwalker",
"Shadowfang Keep",
"enUS",
},
[3857] = {
"Shadowfang Glutton",
"Shadowfang Keep",
"enUS",
},
[3861] = {
"Bleak Worg",
"Shadowfang Keep",
"enUS",
},
[3865] = {
"Shadow Charger",
"Shadowfang Keep",
"enUS",
},
[11374] = {
"Hooktooth Frenzy",
"Zul'Gurub",
"enUS",
},
[3873] = {
"Tormented Officer",
"Shadowfang Keep",
"enUS",
},
[3877] = {
"Wailing Guardsman",
"Shadowfang Keep",
"enUS",
},
[26930] = {
"Grand Magus Telestra",
"The Nexus",
"enUS",
},
[37532] = {
"Frostwing Whelp",
"Icecrown Citadel",
"enUS",
},
[11454] = {
"Wildspawn Betrayer",
"Dire Maul",
"enUS",
},
[11470] = {
"Eldreth Sorcerer",
"Dire Maul",
"enUS",
},
[11486] = {
"Prince Tortheldrin",
"Dire Maul",
"enUS",
},
[7800] = {
"Mekgineer Thermaplugg",
"Gnomeregan",
"enUS",
},
[11518] = {
"Jergosh the Invoker",
"Ragefire Chasm",
"enUS",
},
[3909] = {
"Healing Stream Totem V",
"Auchindoun: Auchenai Crypts",
"enUS",
},
[48279] = {
"Goblin Overseer",
"Deadmines",
"enUS",
},
[11582] = {
"Scholomance Dark Summoner",
"Scholomance",
"enUS",
},
[38172] = {
"Phantom Mage",
"Halls of Reflection",
"enUS",
},
[206038] = {
"Immortal Crusher Tentacle",
"Halls of Lightning",
"enUS",
},
[9583] = {
"Bloodaxe Veteran",
"Blackrock Spire",
"enUS",
},
[17271] = {
"Bonechewer Destroyer",
"Hellfire Citadel: Ramparts",
"enUS",
},
[36701] = {
"Raging Spirit",
"Icecrown Citadel",
"enUS",
},
[17399] = {
"Seductress",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[29713] = {
"Slad'ran Constrictor",
"Gundrak",
"enUS",
},
[3977] = {
"High Inquisitor Whitemane",
"Scarlet Monastery",
"enUS",
},
[3981] = {
"Vorrel Sengutz",
"Scarlet Monastery",
"enUS",
},
[37149] = {
"Kor'kron Necrolyte",
"Icecrown Citadel",
"enUS",
},
[49495] = {
"Chattering Horror",
"Deadmines",
"enUS",
},
[37533] = {
"Rimefang",
"Icecrown Citadel",
"enUS",
},
[23956] = {
"Dragonflayer Strategist",
"Utgarde Keep",
"enUS",
},
[6017] = {
"Lava Spout Totem",
"Zul'Farrak",
"enUS",
},
[24084] = {
"Tunneling Ghoul",
"Utgarde Keep",
"enUS",
},
[38173] = {
"Spectral Footman",
"Halls of Reflection",
"enUS",
},
[30385] = {
"Twilight Volunteer",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[8120] = {
"Sul'lithuz Abomination",
"Zul'Farrak",
"enUS",
},
[34271] = {
"XD-175 Compactobot",
"Ulduar",
"enUS",
},
[12206] = {
"Primordial Behemoth",
"Maraudon",
"enUS",
},
[12222] = {
"Creeping Sludge",
"Maraudon",
"enUS",
},
[18327] = {
"Time-Lost Controller",
"Auchindoun: Sethekk Halls",
"enUS",
},
[36830] = {
"Wrathbone Laborer",
"Pit of Saron",
"enUS",
},
[14349] = {
"Pimgib",
"Dire Maul",
"enUS",
},
[37022] = {
"Blighted Abomination",
"Icecrown Citadel",
"enUS",
},
[14397] = {
"Mana Burst",
"Dire Maul",
"enUS",
},
[2070] = {
"MeryLaPedos",
"Auchindoun: Sethekk Halls",
"enUS",
},
[26803] = {
"Horde Cleric",
"The Nexus",
"enUS",
},
[30961] = {
"Azure Invader",
"Violet Hold",
"enUS",
},
[10383] = {
"Broken Cadaver",
"Stratholme",
"enUS",
},
[6225] = {
"Mechano-Tank",
"Gnomeregan",
"enUS",
},
[6233] = {
"Mechanized Sentry",
"Gnomeregan",
"enUS",
},
[37662] = {
"Darkfallen Commander",
"Icecrown Citadel",
"enUS",
},
[10463] = {
"Shrieking Banshee",
"Stratholme",
"enUS",
},
[31185] = {
"Healing Stream Totem IX",
"Icecrown Citadel",
"enUS",
},
[10495] = {
"Diseased Ghoul",
"Scholomance",
"enUS",
},
[4274] = {
"Fenrus the Devourer",
"Shadowfang Keep",
"enUS",
},
[6329] = {
"Irradiated Pillager",
"Gnomeregan",
"enUS",
},
[4290] = {
"Scarlet Guardsman",
"Scarlet Monastery",
"enUS",
},
[4298] = {
"Scarlet Defender",
"Scarlet Monastery",
"enUS",
},
[4306] = {
"Scarlet Torturer",
"Scarlet Monastery",
"enUS",
},
[27635] = {
"Azure Spellbinder",
"The Oculus",
"enUS",
},
[14861] = {
"Blood Steward of Kirtonos",
"Scholomance",
"enUS",
},
[27731] = {
"Acolyte",
"The Culling of Stratholme",
"enUS",
},
[29874] = {
"Drakkari Inciter",
"Gundrak",
"enUS",
},
[17624] = {
"Laughing Skull Warden",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[4418] = {
"Defias Wizard",
"Deadmines",
"enUS",
},
[43612] = {
"High Prophet Barim",
"Lost City of the Tol'vir",
"enUS",
},
[49817] = {
"Bound Inferno",
"The Bastion of Twilight",
"enUS",
},
[8896] = {
"Shadowforge Peasant",
"Blackrock Depths",
"enUS",
},
[17816] = {
"Bogstrok",
"Coilfang: The Slave Pens",
"enUS",
},
[13022] = {
"Whip Lasher",
"Dire Maul",
"enUS",
},
[24085] = {
"Dragonflayer Overseer",
"Utgarde Keep",
"enUS",
},
[9024] = {
"Pyromancer Loregrain",
"Blackrock Depths",
"enUS",
},
[38175] = {
"Ghostly Priest",
"Halls of Reflection",
"enUS",
},
[9056] = {
"Fineous Darkvire",
"Blackrock Depths",
"enUS",
},
[30418] = {
"Bound Air Elemental",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[34273] = {
"XB-488 Disposalbot",
"Ulduar",
"enUS",
},
[32593] = {
"Skittering Swarmer",
"Azjol-Nerub",
"enUS",
},
[42717] = {
"jefferson",
"Auchindoun: Sethekk Halls",
"enUS",
},
[18328] = {
"Sethekk Oracle",
"Auchindoun: Sethekk Halls",
"enUS",
},
[575] = {
"Fire Elemental",
"Scarlet Monastery",
"enUS",
},
[9200] = {
"Spirestone Reaver",
"Blackrock Spire",
"enUS",
},
[11263] = {
"Spectral Projection",
"Scholomance",
"enUS",
},
[47131] = {
"Frantic Geist",
"Shadowfang Keep",
"enUS",
},
[36960] = {
"Kor'kron Sergeant",
"Icecrown Citadel",
"enUS",
},
[9264] = {
"Firebrand Pyromancer",
"Blackrock Spire",
"enUS",
},
[11391] = {
"Vilebranch Speaker",
"Zul'Gurub",
"enUS",
},
[2350] = {
"Forest Creeper",
"The Escape From Durnholde",
"enUS",
},
[11455] = {
"Wildspawn Felsworn",
"Dire Maul",
"enUS",
},
[37664] = {
"Darkfallen Archmage",
"Icecrown Citadel",
"enUS",
},
[11487] = {
"Magister Kalendris",
"Dire Maul",
"enUS",
},
[11551] = {
"Necrofiend",
"Scholomance",
"enUS",
},
[38112] = {
"Falric",
"Halls of Reflection",
"enUS",
},
[38176] = {
"Tortured Rifleman",
"Halls of Reflection",
"enUS",
},
[9568] = {
"Overlord Wyrmthalak",
"Blackrock Spire",
"enUS",
},
[29395] = {
"Erekem Guard",
"Violet Hold",
"enUS",
},
[4810] = {
"Twilight Reaver",
"Blackfathom Deeps",
"enUS",
},
[4818] = {
"Blindlight Murloc",
"Blackfathom Deeps",
"enUS",
},
[4850] = {
"Stonevault Cave Lurker",
"Uldaman",
"enUS",
},
[17401] = {
"Felhound Manastalker",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[36897] = {
"Little Ooze",
"Icecrown Citadel",
"enUS",
},
[27732] = {
"Master Necromancer",
"The Culling of Stratholme",
"enUS",
},
[37217] = {
"Precious",
"Icecrown Citadel",
"enUS",
},
[39392] = {
"Faceless Corruptor",
"Grim Batol",
"enUS",
},
[43614] = {
"Lockmaw",
"Lost City of the Tol'vir",
"enUS",
},
[17817] = {
"Greater Bogstrok",
"Coilfang: The Slave Pens",
"enUS",
},
[4978] = {
"Aku'mai Servant",
"Blackfathom Deeps",
"enUS",
},
[43934] = {
"Soul Fragment",
"Lost City of the Tol'vir",
"enUS",
},
[48284] = {
"Mining Powder",
"Deadmines",
"enUS",
},
[28276] = {
"Greater Ley-Whelp",
"The Oculus",
"enUS",
},
[38177] = {
"Shadowy Mercenary",
"Halls of Reflection",
"enUS",
},
[28340] = {
"Stratholme Citizen",
"The Culling of Stratholme",
"enUS",
},
[30419] = {
"Bound Water Elemental",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[5058] = {
"Wolfguard Worg",
"Shadowfang Keep",
"enUS",
},
[634] = {
"Defias Overseer",
"Deadmines",
"enUS",
},
[12207] = {
"Thessala Hydra",
"Maraudon",
"enUS",
},
[639] = {
"Edwin VanCleef",
"Deadmines",
"enUS",
},
[641] = {
"Goblin Woodcarver",
"Deadmines",
"enUS",
},
[642] = {
"Sneed's Shredder",
"Deadmines",
"enUS",
},
[643] = {
"Sneed",
"Deadmines",
"enUS",
},
[18521] = {
"Raging Skeleton",
"Auchindoun: Auchenai Crypts",
"enUS",
},
[645] = {
"Cookie",
"Deadmines",
"enUS",
},
[646] = {
"Mr. Smite",
"Deadmines",
"enUS",
},
[647] = {
"Captain Greenskin",
"Deadmines",
"enUS",
},
[41376] = {
"Nefarian",
"Blackwing Descent",
"enUS",
},
[41440] = {
"Aberration",
"Blackwing Descent",
"enUS",
},
[10400] = {
"Thuzadin Necromancer",
"Stratholme",
"enUS",
},
[10416] = {
"Bile Spewer",
"Stratholme",
"enUS",
},
[10432] = {
"Vectus",
"Scholomance",
"enUS",
},
[37666] = {
"Darkfallen Tactician",
"Icecrown Citadel",
"enUS",
},
[10464] = {
"Wailing Banshee",
"Stratholme",
"enUS",
},
[10480] = {
"Unstable Corpse",
"Scholomance",
"enUS",
},
[657] = {
"Defias Pirate",
"Deadmines",
"enUS",
},
[40033] = {
"Flux Animator",
"Halls of Origination",
"enUS",
},
[7321] = {
"Stonevault Flameweaver",
"UNKNOWN",
"enUS",
},
[7329] = {
"Withered Quilguard",
"Razorfen Downs",
"enUS",
},
[7337] = {
"Death's Head Necromancer",
"Razorfen Downs",
"enUS",
},
[7345] = {
"Splinterbone Captain",
"Razorfen Downs",
"enUS",
},
[7353] = {
"Freezing Spirit",
"Razorfen Downs",
"enUS",
},
[40417] = {
"Charscale Invoker",
"The Ruby Sanctum",
"enUS",
},
[14750] = {
"Gurubashi Bat Rider",
"Zul'Gurub",
"enUS",
},
[17306] = {
"Watchkeeper Gargolmar",
"Hellfire Citadel: Ramparts",
"enUS",
},
[44895] = {
"Augh",
"Lost City of the Tol'vir",
"enUS",
},
[17370] = {
"Laughing Skull Enforcer",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[36899] = {
"Big Ooze",
"Icecrown Citadel",
"enUS",
},
[27733] = {
"Ghoul Minion",
"The Culling of Stratholme",
"enUS",
},
[43296] = {
"Chimaeron",
"Blackwing Descent",
"enUS",
},
[27829] = {
"Ebon Gargoyle",
"Icecrown Citadel",
"enUS",
},
[17626] = {
"Laughing Skull Legionnaire",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[49821] = {
"Bound Zephyr",
"The Bastion of Twilight",
"enUS",
},
[8897] = {
"Doomforge Craftsman",
"Blackrock Depths",
"enUS",
},
[8913] = {
"Twilight Emissary",
"Blackrock Depths",
"enUS",
},
[687] = {
"Raptor",
"Stratholme",
"enUS",
},
[17882] = {
"The Black Stalker",
"Coilfang: The Underbog",
"enUS",
},
[9025] = {
"Lord Roccor",
"Blackrock Depths",
"enUS",
},
[9041] = {
"Warder Stilgiss",
"Blackrock Depths",
"enUS",
},
[28341] = {
"Stratholme Resident",
"The Culling of Stratholme",
"enUS",
},
[18170] = {
"Infinite Slayer",
"The Escape From Durnholde",
"enUS",
},
[36516] = {
"Soulguard Animator",
"The Forge of Souls",
"enUS",
},
[26550] = {
"Dragonflayer Deathseeker",
"Utgarde Pinnacle",
"enUS",
},
[18394] = {
"Ethereal Wraith",
"Auchindoun: Mana-Tombs",
"enUS",
},
[47135] = {
"Fetid Ghoul",
"Shadowfang Keep",
"enUS",
},
[5650] = {
"Sandfury Witch Doctor",
"Zul'Farrak",
"enUS",
},
[37028] = {
"Kor'kron Stalker",
"Icecrown Citadel",
"enUS",
},
[15438] = {
"Greater Fire Elemental",
"Icecrown Citadel",
"enUS",
},
[11360] = {
"Zulian Cub",
"Zul'Gurub",
"enUS",
},
[41378] = {
"Maloriak",
"Blackwing Descent",
"enUS",
},
[41442] = {
"Atramedes",
"Blackwing Descent",
"enUS",
},
[41570] = {
"Magmaw",
"Blackwing Descent",
"enUS",
},
[5722] = {
"Hazzas",
"Sunken Temple",
"enUS",
},
[11456] = {
"Wildspawn Shadowstalker",
"Dire Maul",
"enUS",
},
[11472] = {
"Eldreth Spirit",
"Dire Maul",
"enUS",
},
[11488] = {
"Illyanna Ravenoak",
"Dire Maul",
"enUS",
},
[5762] = {
"Deviate Moccasin",
"Wailing Caverns",
"enUS",
},
[13599] = {
"Stolid Snapjaw",
"Maraudon",
"enUS",
},
[48351] = {
"Mine Bunny",
"Deadmines",
"enUS",
},
[7849] = {
"Mobile Alert System",
"Gnomeregan",
"enUS",
},
[40291] = {
"Azureborne Seer",
"Grim Batol",
"enUS",
},
[40419] = {
"Charscale Assaulter",
"The Ruby Sanctum",
"enUS",
},
[44577] = {
"General Husam",
"Lost City of the Tol'vir",
"enUS",
},
[44641] = {
"Orphaned Emerald Whelp",
"The Bastion of Twilight",
"enUS",
},
[17307] = {
"Vazruden the Herald",
"Hellfire Citadel: Ramparts",
"enUS",
},
[5874] = {
"Strength of Earth Totem",
"Scholomance",
"enUS",
},
[17371] = {
"Shadowmoon Warlock",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[27638] = {
"Azure Ring Guardian",
"The Oculus",
"enUS",
},
[47136] = {
"Unstable Ravager",
"Shadowfang Keep",
"enUS",
},
[37029] = {
"Kor'kron Reaver",
"Icecrown Citadel",
"enUS",
},
[35046] = {
"Memory of Cyanigosa",
"Trial of the Champion",
"enUS",
},
[17723] = {
"Bog Giant",
"Coilfang: The Underbog",
"enUS",
},
[23960] = {
"Dragonflayer Runecaster",
"Utgarde Keep",
"enUS",
},
[6066] = {
"Earthgrab Totem",
"Zul'Farrak",
"enUS",
},
[18171] = {
"Infinite Defiler",
"The Escape From Durnholde",
"enUS",
},
[40484] = {
"Erudax",
"Grim Batol",
"enUS",
},
[10177] = {
"Spire Scarab",
"Blackrock Spire",
"enUS",
},
[18331] = {
"Ethereal Darkcaster",
"Auchindoun: Mana-Tombs",
"enUS",
},
[14303] = {
"Petrified Guardian",
"Dire Maul",
"enUS",
},
[14351] = {
"Gordok Bushwacker",
"Dire Maul",
"enUS",
},
[37030] = {
"Kor'kron Primalist",
"Icecrown Citadel",
"enUS",
},
[14399] = {
"Arcane Torrent",
"Dire Maul",
"enUS",
},
[37158] = {
"Quel'Delar",
"Halls of Reflection",
"enUS",
},
[6218] = {
"Irradiated Slime",
"Gnomeregan",
"enUS",
},
[6234] = {
"Mechanized Guardian",
"Gnomeregan",
"enUS",
},
[10433] = {
"Marduk Blackpool",
"Scholomance",
"enUS",
},
[45922] = {
"Empyrean Assassin",
"The Vortex Pinnacle",
"enUS",
},
[10481] = {
"Reanimated Corpse",
"Scholomance",
"enUS",
},
[39909] = {
"Azureborne Warlord",
"Grim Batol",
"enUS",
},
[48417] = {
"Defias Blood Wizard",
"Deadmines",
"enUS",
},
[4275] = {
"Archmage Arugal",
"Shadowfang Keep",
"enUS",
},
[4283] = {
"Scarlet Sentry",
"Scarlet Monastery",
"enUS",
},
[4291] = {
"Scarlet Diviner",
"Scarlet Monastery",
"enUS",
},
[4299] = {
"Scarlet Chaplain",
"Scarlet Monastery",
"enUS",
},
[27447] = {
"Varos Cloudstrider",
"The Oculus",
"enUS",
},
[17308] = {
"Omor the Unscarred",
"Hellfire Citadel: Ramparts",
"enUS",
},
[27639] = {
"Ring-Lord Sorceress",
"The Oculus",
"enUS",
},
[47138] = {
"Pustulant Monstrosity",
"Shadowfang Keep",
"enUS",
},
[37031] = {
"Kor'kron Oracle",
"Icecrown Citadel",
"enUS",
},
[4427] = {
"Ward Guardian",
"Razorfen Kraul",
"enUS",
},
[17724] = {
"Underbat",
"Coilfang: The Underbog",
"enUS",
},
[49825] = {
"Bound Deluge",
"The Bastion of Twilight",
"enUS",
},
[8898] = {
"Anvilrage Marshal",
"Blackrock Depths",
"enUS",
},
[8914] = {
"Twilight Bodyguard",
"Blackrock Depths",
"enUS",
},
[37799] = {
"Vile Spirit",
"Icecrown Citadel",
"enUS",
},
[37863] = {
"Suppresser",
"Icecrown Citadel",
"enUS",
},
[54303] = {
"Doomguard",
"Dire Maul",
"enUS",
},
[44260] = {
"Venomfang Crocolisk",
"Lost City of the Tol'vir",
"enUS",
},
[9042] = {
"Verek",
"Blackrock Depths",
"enUS",
},
[4531] = {
"Razorfen Beast Trainer",
"Razorfen Kraul",
"enUS",
},
[11121] = {
"Black Guard Swordsmith",
"Stratholme",
"enUS",
},
[18172] = {
"Infinite Saboteur",
"The Escape From Durnholde",
"enUS",
},
[38567] = {
"Phantom Hallucination",
"Halls of Reflection",
"enUS",
},
[42789] = {
"Stonecore Magmalord",
"The Stonecore",
"enUS",
},
[13280] = {
"Hydrospawn",
"Dire Maul",
"enUS",
},
[36840] = {
"Ymirjar Wrathbringer",
"Pit of Saron",
"enUS",
},
[28695] = {
"Molten Golem",
"Halls of Lightning",
"enUS",
},
[4627] = {
"Arugal's Voidwalker",
"Shadowfang Keep",
"enUS",
},
[37032] = {
"Kor'kron Defender",
"Icecrown Citadel",
"enUS",
},
[18556] = {
"Phasing Soldier",
"Auchindoun: Auchenai Crypts",
"enUS",
},
[15439] = {
"Fire Elemental Totem",
"The Bastion of Twilight",
"enUS",
},
[11361] = {
"Zulian Tiger",
"Zul'Gurub",
"enUS",
},
[35305] = {
"Argent Monk",
"Trial of the Champion",
"enUS",
},
[11441] = {
"Gordok Brute",
"Dire Maul",
"enUS",
},
[11457] = {
"Wildspawn Hellcaller",
"Dire Maul",
"enUS",
},
[11473] = {
"Eldreth Spectre",
"Dire Maul",
"enUS",
},
[11489] = {
"Tendris Warpwood",
"Dire Maul",
"enUS",
},
[44261] = {
"Sharptalon Eagle",
"Lost City of the Tol'vir",
"enUS",
},
[38184] = {
"Corrupted Ymirjar",
"Icecrown Citadel",
"enUS",
},
[40423] = {
"Charscale Commander",
"The Ruby Sanctum",
"enUS",
},
[4811] = {
"Twilight Aquamancer",
"Blackfathom Deeps",
"enUS",
},
[44645] = {
"Nether Scion",
"The Bastion of Twilight",
"enUS",
},
[4827] = {
"Deep Pool Threshfin",
"Blackfathom Deeps",
"enUS",
},
[17309] = {
"Hellfire Watcher",
"Hellfire Citadel: Ramparts",
"enUS",
},
[3450] = {
"Defias Companion",
"Deadmines",
"enUS",
},
[36841] = {
"Fallen Warrior",
"Pit of Saron",
"enUS",
},
[47140] = {
"Sorcerous Skeleton",
"Shadowfang Keep",
"enUS",
},
[37033] = {
"Kor'kron Invoker",
"Icecrown Citadel",
"enUS",
},
[45477] = {
"Gust Soldier",
"The Vortex Pinnacle",
"enUS",
},
[17725] = {
"Underbog Lurker",
"Coilfang: The Underbog",
"enUS",
},
[43686] = {
"Ignacious",
"The Bastion of Twilight",
"enUS",
},
[9938] = {
"Magmus",
"Blackrock Depths",
"enUS",
},
[43878] = {
"Grand Vizier Ertan",
"The Vortex Pinnacle",
"enUS",
},
[48420] = {
"Defias Digger",
"Deadmines",
"enUS",
},
[10082] = {
"Zerillis",
"Zul'Farrak",
"enUS",
},
[36522] = {
"Soul Horror",
"The Forge of Souls",
"enUS",
},
[26553] = {
"Dragonflayer Fanatic",
"Utgarde Pinnacle",
"enUS",
},
[18429] = {
"Arcane Fiend",
"Auchindoun: Mana-Tombs",
"enUS",
},
[47141] = {
"Dread Scryer",
"Shadowfang Keep",
"enUS",
},
[18493] = {
"Auchenai Soulpriest",
"Auchindoun: Auchenai Crypts",
"enUS",
},
[37034] = {
"Kor'kron Templar",
"Icecrown Citadel",
"enUS",
},
[18557] = {
"Phasing Cleric",
"Auchindoun: Auchenai Crypts",
"enUS",
},
[35307] = {
"Argent Priestess",
"Trial of the Champion",
"enUS",
},
[41576] = {
"Flash Freeze",
"Blackwing Descent",
"enUS",
},
[43687] = {
"Feludius",
"The Bastion of Twilight",
"enUS",
},
[7274] = {
"Sandfury Executioner",
"Zul'Farrak",
"enUS",
},
[45926] = {
"Servant of Asaad",
"The Vortex Pinnacle",
"enUS",
},
[10482] = {
"Risen Lackey",
"Scholomance",
"enUS",
},
[10498] = {
"Spectral Tutor",
"Scholomance",
"enUS",
},
[3654] = {
"Mutanus the Devourer",
"Wailing Caverns",
"enUS",
},
[29240] = {
"Stormforged Lieutenant",
"Halls of Lightning",
"enUS",
},
[29304] = {
"Slad'ran",
"Gundrak",
"enUS",
},
[3670] = {
"Lord Pythas",
"Wailing Caverns",
"enUS",
},
[3674] = {
"Skum",
"Wailing Caverns",
"enUS",
},
[7354] = {
"Ragglesnout",
"Razorfen Downs",
"enUS",
},
[40681] = {
"Living Inferno",
"The Ruby Sanctum",
"enUS",
},
[27641] = {
"Centrifuge Construct",
"The Oculus",
"enUS",
},
[36907] = {
"Wrathbone Siegesmith",
"Pit of Saron",
"enUS",
},
[27737] = {
"Risen Zombie",
"The Culling of Stratholme",
"enUS",
},
[41257] = {
"Water Bubble",
"Halls of Origination",
"enUS",
},
[17726] = {
"Wrathfin Myrmidon",
"Coilfang: The Underbog",
"enUS",
},
[43688] = {
"Arion",
"The Bastion of Twilight",
"enUS",
},
[35564] = {
"Risen Arelas Brightstar",
"Trial of the Champion",
"enUS",
},
[8915] = {
"Twilight's Hammer Ambassador",
"Blackrock Depths",
"enUS",
},
[28153] = {
"Snowflake",
"The Oculus",
"enUS",
},
[39978] = {
"Twilight Torturer",
"Blackrock Caverns",
"enUS",
},
[48230] = {
"Ogre Henchman",
"Deadmines",
"enUS",
},
[28249] = {
"Devouring Ghoul",
"The Culling of Stratholme",
"enUS",
},
[40170] = {
"Spatial Anomaly",
"Halls of Origination",
"enUS",
},
[46375] = {
"Rowdy Troublemaker",
"Stormwind Stockade",
"enUS",
},
[44648] = {
"Unyielding Behemoth",
"Throne of the Tides",
"enUS",
},
[26554] = {
"Dragonflayer Seer",
"Utgarde Pinnacle",
"enUS",
},
[36844] = {
"Risen Deathspeaker Servant",
"Icecrown Citadel",
"enUS",
},
[45096] = {
"Tamed Tol'vir Prowler",
"Lost City of the Tol'vir",
"enUS",
},
[28729] = {
"Watcher Narjil",
"Azjol-Nerub",
"enUS",
},
[3854] = {
"Shadowfang Wolfguard",
"Shadowfang Keep",
"enUS",
},
[26746] = {
"Crazed Mana-Wraith",
"The Nexus",
"enUS",
},
[28825] = {
"Cyclone",
"Halls of Lightning",
"enUS",
},
[3866] = {
"Vile Bat",
"Shadowfang Keep",
"enUS",
},
[3870] = {
"Stone Sleeper",
"Shadowfang Keep",
"enUS",
},
[35309] = {
"Argent Lightwielder",
"Trial of the Champion",
"enUS",
},
[3886] = {
"Razorclaw the Butcher",
"Shadowfang Keep",
"enUS",
},
[11458] = {
"Petrified Treant",
"Dire Maul",
"enUS",
},
[52761] = {
"Gordok Reaver",
"Dire Maul",
"enUS",
},
[11490] = {
"Zevrim Thornhoof",
"Dire Maul",
"enUS",
},
[5755] = {
"Deviate Viper",
"Wailing Caverns",
"enUS",
},
[37868] = {
"Risen Archmage",
"Icecrown Citadel",
"enUS",
},
[29209] = {
"Carrion Beetle",
"Azjol-Nerub",
"enUS",
},
[3914] = {
"Rethilgore",
"Shadowfang Keep",
"enUS",
},
[46248] = {
"Riverpaw Basher",
"Stormwind Stockade",
"enUS",
},
[29305] = {
"Moorabi",
"Gundrak",
"enUS",
},
[12220] = {
"Constrictor Vine",
"Maraudon",
"enUS",
},
[11793] = {
"Celebrian Dryad",
"Maraudon",
"enUS",
},
[49811] = {
"Vile Swill",
"Blackwing Descent",
"enUS",
},
[27386] = {
"Avenging Spirit",
"Utgarde Pinnacle",
"enUS",
},
[13533] = {
"Spewed Larva",
"Maraudon",
"enUS",
},
[38508] = {
"Blood Beast",
"Icecrown Citadel",
"enUS",
},
[45097] = {
"Oathsworn Tamer",
"Lost City of the Tol'vir",
"enUS",
},
[40683] = {
"Living Ember",
"The Ruby Sanctum",
"enUS",
},
[44841] = {
"Blight Beast",
"Throne of the Tides",
"enUS",
},
[46952] = {
"Chosen Seer",
"The Bastion of Twilight",
"enUS",
},
[47016] = {
"Shadow Lord",
"The Bastion of Twilight",
"enUS",
},
[27642] = {
"Phantasmal Mammoth",
"The Oculus",
"enUS",
},
[11794] = {
"Sister of Celebras",
"Maraudon",
"enUS",
},
[48418] = {
"Defias Envoker",
"Deadmines",
"enUS",
},
[4435] = {
"Razorfen Warrior",
"Razorfen Kraul",
"enUS",
},
[4530] = {
"Razorfen Handler",
"Razorfen Kraul",
"enUS",
},
[4539] = {
"Greater Kraul Bat",
"Razorfen Kraul",
"enUS",
},
[37229] = {
"Frostwarden Sorceress",
"Icecrown Citadel",
"enUS",
},
[40084] = {
"Bellows Slave",
"Blackrock Caverns",
"enUS",
},
[4514] = {
"Raging Agam'ar",
"Razorfen Kraul",
"enUS",
},
[24080] = {
"Dragonflayer Weaponsmith",
"Utgarde Keep",
"enUS",
},
[27962] = {
"Dark Rune Elementalist",
"Halls of Stone",
"enUS",
},
[39892] = {
"Enslaved Burning Ember",
"Grim Batol",
"enUS",
},
[5649] = {
"Sandfury Blood Drinker",
"Zul'Farrak",
"enUS",
},
[4625] = {
"Death's Head Ward Keeper",
"Razorfen Kraul",
"enUS",
},
[39788] = {
"Anraphet",
"Halls of Origination",
"enUS",
},
[45993] = {
"Theralion",
"The Bastion of Twilight",
"enUS",
},
[4515] = {
"Death's Head Acolyte",
"Razorfen Kraul",
"enUS",
},
[39980] = {
"Twilight Sadist",
"Blackrock Caverns",
"enUS",
},
[6035] = {
"Razorfen Stalker",
"Razorfen Kraul",
"enUS",
},
[46249] = {
"Riverpaw Slayer",
"Stormwind Stockade",
"enUS",
},
[38125] = {
"Ymirjar Deathbringer",
"Icecrown Citadel",
"enUS",
},
[8929] = {
"Princess Moira Bronzebeard",
"Blackrock Depths",
"enUS",
},
[42347] = {
"Exposed Head of Magmaw",
"Blackwing Descent",
"enUS",
},
[36893] = {
"Ymirjar Flamebearer",
"Pit of Saron",
"enUS",
},
[28410] = {
"Dragonflayer Spiritualist",
"Utgarde Keep",
"enUS",
},
[8138] = {
"Sul'lithuz Broodling",
"Zul'Farrak",
"enUS",
},
[44650] = {
"Storm Rider",
"The Bastion of Twilight",
"enUS",
},
[3637] = {
"Deviate Guardian",
"Wailing Caverns",
"enUS",
},
[11791] = {
"Putridus Trickster",
"Maraudon",
"enUS",
},
[12258] = {
"Razorlash",
"Maraudon",
"enUS",
},
[26555] = {
"Scourge Hulk",
"Utgarde Pinnacle",
"enUS",
},
[14321] = {
"Guard Fengus",
"Dire Maul",
"enUS",
},
[18431] = {
"Ethereal Beacon",
"Auchindoun: Mana-Tombs",
"enUS",
},
[47145] = {
"Spitebone Guardian",
"Shadowfang Keep",
"enUS",
},
[26683] = {
"Frenzied Worgen",
"Utgarde Pinnacle",
"enUS",
},
[37038] = {
"Vengeful Fleshreaper",
"Icecrown Citadel",
"enUS",
},
[18559] = {
"Phasing Stalker",
"Auchindoun: Auchenai Crypts",
"enUS",
},
[35119] = {
"Eadric the Pure",
"Trial of the Champion",
"enUS",
},
[37230] = {
"Spire Frostwyrm",
"Icecrown Citadel",
"enUS",
},
[5873] = {
"Stoneskin Totem",
"The Bastion of Twilight",
"enUS",
},
[28922] = {
"Anub'ar Crusher",
"Azjol-Nerub",
"enUS",
},
[6219] = {
"Corrosive Lurker",
"Gnomeregan",
"enUS",
},
[45912] = {
"Wild Vortex",
"The Vortex Pinnacle",
"enUS",
},
[6235] = {
"Electrocutioner 6000",
"Gnomeregan",
"enUS",
},
[10435] = {
"Magistrate Barthilas",
"Stratholme",
"enUS",
},
[4442] = {
"Razorfen Defender",
"Razorfen Kraul",
"enUS",
},
[45930] = {
"Minister of Air",
"The Vortex Pinnacle",
"enUS",
},
[6489] = {
"Ironspine",
"Scarlet Monastery",
"enUS",
},
[10499] = {
"Spectral Researcher",
"Scholomance",
"enUS",
},
[37934] = {
"Blistering Zombie",
"Icecrown Citadel",
"enUS",
},
[17814] = {
"Lordaeron Watchman",
"The Escape From Durnholde",
"enUS",
},
[46250] = {
"Riverpaw Poacher",
"Stormwind Stockade",
"enUS",
},
[29306] = {
"Gal'darah",
"Gundrak",
"enUS",
},
[38113] = {
"Marwyn",
"Halls of Reflection",
"enUS",
},
[37534] = {
"Spinestalker",
"Icecrown Citadel",
"enUS",
},
[41948] = {
"Chromatic Prototype",
"Blackwing Descent",
"enUS",
},
[34288] = {
"Salvagebot Sawblade",
"Ulduar",
"enUS",
},
[4300] = {
"Scarlet Wizard",
"Scarlet Monastery",
"enUS",
},
[4308] = {
"Unfettered Spirit",
"Scarlet Monastery",
"enUS",
},
[27483] = {
"King Dred",
"Drak'Tharon Keep",
"enUS",
},
[17280] = {
"Shattered Hand Warhound",
"Hellfire Citadel: Ramparts",
"enUS",
},
[42845] = {
"Rock Borer",
"The Stonecore",
"enUS",
},
[17941] = {
"Mennu the Betrayer",
"Coilfang: The Slave Pens",
"enUS",
},
[9265] = {
"Smolderthorn Shadow Hunter",
"Blackrock Spire",
"enUS",
},
[36968] = {
"Kor'kron Axethrower",
"Icecrown Citadel",
"enUS",
},
[47146] = {
"Spitebone Flayer",
"Shadowfang Keep",
"enUS",
},
[34928] = {
"Argent Confessor Paletress",
"Trial of the Champion",
"enUS",
},
[6427] = {
"Haunting Phantasm",
"Scarlet Monastery",
"enUS",
},
[8324] = {
"Atal'ai Skeleton",
"Sunken Temple",
"enUS",
},
[49813] = {
"Evolved Drakonaar",
"The Bastion of Twilight",
"enUS",
},
[50008] = {
"Twilight Sentry",
"The Bastion of Twilight",
"enUS",
},
[47714] = {
"Vapor",
"Deadmines",
"enUS",
},
[4420] = {
"Overlord Ramtusk",
"Razorfen Kraul",
"enUS",
},
[33329] = {
"Heart of the Deconstructor",
"Ulduar",
"enUS",
},
[27963] = {
"Dark Rune Theurgist",
"Halls of Stone",
"enUS",
},
[4444] = {
"Deathstalker Vincent",
"Shadowfang Keep",
"enUS",
},
[8900] = {
"Doomforge Arcanasmith",
"Blackrock Depths",
"enUS",
},
[8916] = {
"Arena Spectator",
"Blackrock Depths",
"enUS",
},
[39381] = {
"Crimsonborne Guardian",
"Grim Batol",
"enUS",
},
[39854] = {
"Azureborne Guardian",
"Grim Batol",
"enUS",
},
[34161] = {
"Mechanostriker 54-A",
"Ulduar",
"enUS",
},
[39982] = {
"Crazed Mage",
"Blackrock Caverns",
"enUS",
},
[8996] = {
"Voidwalker Minion",
"Ragefire Chasm",
"enUS",
},
[46251] = {
"Riverpaw Looter",
"Stormwind Stockade",
"enUS",
},
[4516] = {
"Death's Head Adept",
"Razorfen Kraul",
"enUS",
},
[46379] = {
"Vicious Thug",
"Stormwind Stockade",
"enUS",
},
[4532] = {
"Razorfen Beastmaster",
"Razorfen Kraul",
"enUS",
},
[4540] = {
"Scarlet Monk",
"Scarlet Monastery",
"enUS",
},
[18176] = {
"Tainted Earthgrab Totem",
"Coilfang: The Slave Pens",
"enUS",
},
[39390] = {
"Twilight Drake",
"Grim Batol",
"enUS",
},
[11789] = {
"Deep Borer",
"Maraudon",
"enUS",
},
[50857] = {
"Odo the Blindwatcher",
"Shadowfang Keep",
"enUS",
},
[9156] = {
"Ambassador Flamelash",
"Blackrock Depths",
"enUS",
},
[44896] = {
"Pygmy Brute",
"Lost City of the Tol'vir",
"enUS",
},
[13282] = {
"Noxxion",
"Maraudon",
"enUS",
},
[40019] = {
"Twilight Obsidian Borer",
"Blackrock Caverns",
"enUS",
},
[26620] = {
"Drakkari Guardian",
"Drak'Tharon Keep",
"enUS",
},
[9236] = {
"Shadow Hunter Vosh'gajin",
"Blackrock Spire",
"enUS",
},
[26684] = {
"Ravenous Furbolg",
"Utgarde Pinnacle",
"enUS",
},
[26716] = {
"Azure Warder",
"The Nexus",
"enUS",
},
[39722] = {
"Veil of Sky",
"Halls of Origination",
"enUS",
},
[11347] = {
"Zealot Lor'Khan",
"Zul'Gurub",
"enUS",
},
[37232] = {
"Nerub'ar Broodling",
"Icecrown Citadel",
"enUS",
},
[43873] = {
"Altairus",
"The Vortex Pinnacle",
"enUS",
},
[28923] = {
"Loken",
"Halls of Lightning",
"enUS",
},
[39721] = {
"Celestial Call",
"Halls of Origination",
"enUS",
},
[45676] = {
"Faceless Guardian",
"The Bastion of Twilight",
"enUS",
},
[18495] = {
"Auchenai Vindicator",
"Auchindoun: Auchenai Crypts",
"enUS",
},
[29051] = {
"Anub'ar Crypt Fiend",
"Azjol-Nerub",
"enUS",
},
[11475] = {
"Eldreth Phantasm",
"Dire Maul",
"enUS",
},
[45932] = {
"Skyfall Star",
"The Vortex Pinnacle",
"enUS",
},
[39855] = {
"Azureborne Seer",
"Grim Batol",
"enUS",
},
[9476] = {
"Watchman Doomgrip",
"Blackrock Depths",
"enUS",
},
[11459] = {
"Ironbark Protector",
"Dire Maul",
"enUS",
},
[39961] = {
"Enslaved Water Spirit",
"Grim Batol",
"enUS",
},
[46252] = {
"Riverpaw Shaman",
"Stormwind Stockade",
"enUS",
},
[29307] = {
"Drakkari Colossus",
"Gundrak",
"enUS",
},
[39587] = {
"Isiset",
"Halls of Origination",
"enUS",
},
[33572] = {
"Steelforged Defender",
"Ulduar",
"enUS",
},
[18325] = {
"Sethekk Prophet",
"Auchindoun: Sethekk Halls",
"enUS",
},
[39962] = {
"Twilight Stormbreaker",
"Grim Batol",
"enUS",
},
[4812] = {
"Twilight Loreseeker",
"Blackfathom Deeps",
"enUS",
},
[26830] = {
"Risen Drakkari Death Knight",
"Drak'Tharon Keep",
"enUS",
},
[26798] = {
"Commander Kolurg",
"The Nexus",
"enUS",
},
[17281] = {
"Bonechewer Ripper",
"Hellfire Citadel: Ramparts",
"enUS",
},
[45928] = {
"Executor of the Caliph",
"The Vortex Pinnacle",
"enUS",
},
[4852] = {
"Stonevault Oracle",
"Uldaman",
"enUS",
},
[4860] = {
"Stone Steward",
"Uldaman",
"enUS",
},
[27644] = {
"Phantasmal Wolf",
"The Oculus",
"enUS",
},
[26734] = {
"Azure Enforcer",
"The Nexus",
"enUS",
},
[37012] = {
"Ancient Skeletal Soldier",
"Icecrown Citadel",
"enUS",
},
[5648] = {
"Sandfury Shadowcaster",
"Zul'Farrak",
"enUS",
},
[29819] = {
"Drakkari Lancer",
"Gundrak",
"enUS",
},
[47404] = {
"Defias Watcher",
"Deadmines",
"enUS",
},
[13323] = {
"Subterranean Diemetradon",
"Maraudon",
"enUS",
},
[43438] = {
"Corborus",
"The Stonecore",
"enUS",
},
[35314] = {
"Orgrimmar Champion",
"Trial of the Champion",
"enUS",
},
[17820] = {
"Durnholde Rifleman",
"The Escape From Durnholde",
"enUS",
},
[27964] = {
"Dark Rune Scholar",
"Halls of Stone",
"enUS",
},
[30668] = {
"Azure Raider",
"Violet Hold",
"enUS",
},
[7011] = {
"Earthen Rocksmasher",
"Uldaman",
"enUS",
},
[39708] = {
"Twilight Flame Caller",
"Blackrock Caverns",
"enUS",
},
[9956] = {
"Shadowforge Flame Keeper",
"Blackrock Depths",
"enUS",
},
[47403] = {
"Defias Reaper",
"Deadmines",
"enUS",
},
[44752] = {
"Faceless Sapper",
"Throne of the Tides",
"enUS",
},
[39984] = {
"Malignant Trogg",
"Grim Batol",
"enUS",
},
[5267] = {
"Unliving Atal'ai",
"Sunken Temple",
"enUS",
},
[26799] = {
"Horde Berserker",
"The Nexus",
"enUS",
},
[4292] = {
"Scarlet Protector",
"Scarlet Monastery",
"enUS",
},
[46381] = {
"Shifty Thief",
"Stormwind Stockade",
"enUS",
},
[45915] = {
"Armored Mistral",
"The Vortex Pinnacle",
"enUS",
},
[40106] = {
"Star Shard",
"Halls of Origination",
"enUS",
},
[18177] = {
"Tainted Stoneskin Totem",
"Coilfang: The Slave Pens",
"enUS",
},
[47137] = {
"Mindless Horror",
"Shadowfang Keep",
"enUS",
},
[24207] = {
"Army of the Dead Ghoul",
"Icecrown Citadel",
"enUS",
},
[43927] = {
"Harbinger of Darkness",
"Lost City of the Tol'vir",
"enUS",
},
[3862] = {
"Slavering Worg",
"Shadowfang Keep",
"enUS",
},
[36658] = {
"Scourgelord Tyrannus",
"Pit of Saron",
"enUS",
},
[26685] = {
"Massive Jormungar",
"Utgarde Pinnacle",
"enUS",
},
[14322] = {
"Stomper Kreeg",
"Dire Maul",
"enUS",
},
[26621] = {
"Ghoul Tormentor",
"Drak'Tharon Keep",
"enUS",
},
[14354] = {
"Pusillin",
"Dire Maul",
"enUS",
},
[28732] = {
"Anub'ar Warrior",
"Azjol-Nerub",
"enUS",
},
[14386] = {
"Wandering Eye of Kilrogg",
"Dire Maul",
"enUS",
},
[17938] = {
"Coilfang Observer",
"Coilfang: The Slave Pens",
"enUS",
},
[37595] = {
"Darkfallen Blood Knight",
"Icecrown Citadel",
"enUS",
},
[48229] = {
"Kobold Digger",
"Deadmines",
"enUS",
},
[43119] = {
"Spirit of Angerforge",
"Blackwing Descent",
"enUS",
},
[28924] = {
"Anub'ar Champion",
"Azjol-Nerub",
"enUS",
},
[39698] = {
"Karsh Steelbender",
"Blackrock Caverns",
"enUS",
},
[10404] = {
"Pustulating Horror",
"Icecrown Citadel",
"enUS",
},
[35571] = {
"Runok Wildmane",
"Trial of the Champion",
"enUS",
},
[39665] = {
"Rom'ogg Bonecrusher",
"Blackrock Caverns",
"enUS",
},
[7275] = {
"Shadowpriest Sezz'ziz",
"Zul'Farrak",
"enUS",
},
[48421] = {
"Defias Overseer",
"Deadmines",
"enUS",
},
[7291] = {
"Galgann Firehammer",
"Uldaman",
"enUS",
},
[10500] = {
"Spectral Teacher",
"Scholomance",
"enUS",
},
[39985] = {
"Mad Prisoner",
"Blackrock Caverns",
"enUS",
},
[50284] = {
"Twilight Zealot",
"Blackrock Caverns",
"enUS",
},
[46254] = {
"Hogger",
"Stormwind Stockade",
"enUS",
},
[29308] = {
"Prince Taldaram",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[46382] = {
"Petty Criminal",
"Stormwind Stockade",
"enUS",
},
[34164] = {
"Mechagnome Battletank",
"Ulduar",
"enUS",
},
[7355] = {
"Tuten'kash",
"Razorfen Downs",
"enUS",
},
[27389] = {
"Dalronn the Controller",
"Utgarde Keep",
"enUS",
},
[48419] = {
"Defias Miner",
"Deadmines",
"enUS",
},
[9716] = {
"Bloodaxe Warmonger",
"Blackrock Spire",
"enUS",
},
[51660] = {
"Scarlet Chaplain",
"Scarlet Monastery",
"enUS",
},
[20343] = {
"Charming Totem",
"Auchindoun: Sethekk Halls",
"enUS",
},
[42800] = {
"Golem Sentry",
"Blackwing Descent",
"enUS",
},
[40817] = {
"Shadow of Obsidius",
"Blackrock Caverns",
"enUS",
},
[39900] = {
"Enslaved Rock Elemental",
"Grim Batol",
"enUS",
},
[27645] = {
"Phantasmal Cloudscraper",
"The Oculus",
"enUS",
},
[47150] = {
"Earth Ravager",
"The Bastion of Twilight",
"enUS",
},
[27709] = {
"Drakkari Invader",
"Drak'Tharon Keep",
"enUS",
},
[37107] = {
"Ulmi",
"Halls of Reflection",
"enUS",
},
[29820] = {
"Drakkari God Hunter",
"Gundrak",
"enUS",
},
[40357] = {
"Invoked Flaming Spirit",
"Grim Batol",
"enUS",
},
[11598] = {
"Risen Guardian",
"Scholomance",
"enUS",
},
[9197] = {
"Spirestone Battle Mage",
"Blackrock Spire",
"enUS",
},
[17819] = {
"Durnholde Sentry",
"The Escape From Durnholde",
"enUS",
},
[35572] = {
"Mokra the Skullcrusher",
"Trial of the Champion",
"enUS",
},
[17730] = {
"Murkblood Healer",
"Coilfang: The Underbog",
"enUS",
},
[41841] = {
"Prime Subject",
"Blackwing Descent",
"enUS",
},
[8901] = {
"Anvilrage Reservist",
"Blackrock Depths",
"enUS",
},
[17826] = {
"Swamplord Musel'ek",
"Coilfang: The Underbog",
"enUS",
},
[45935] = {
"Temple Adept",
"The Vortex Pinnacle",
"enUS",
},
[39705] = {
"Ascendant Lord Obsidius",
"Blackrock Caverns",
"enUS",
},
[36627] = {
"Rotface",
"Icecrown Citadel",
"enUS",
},
[6547] = {
"Suffering Victim",
"Scarlet Monastery",
"enUS",
},
[35029] = {
"Memory of Mutanus",
"Trial of the Champion",
"enUS",
},
[7347] = {
"Boneflayer Ghoul",
"Razorfen Downs",
"enUS",
},
[9029] = {
"Eviscerator",
"Blackrock Depths",
"enUS",
},
[46383] = {
"Randolph Moloch",
"Stormwind Stockade",
"enUS",
},
[7603] = {
"Leprous Assistant",
"Gnomeregan",
"enUS",
},
[5291] = {
"Hakkari Frostwing",
"Sunken Temple",
"enUS",
},
[41073] = {
"Twilight Armsmaster",
"Grim Batol",
"enUS",
},
[47087] = {
"Azureborne Destroyer",
"The Bastion of Twilight",
"enUS",
},
[205998] = {
"Mirror Image",
"The Oculus",
"enUS",
},
[36916] = {
"Ghoul Minion",
"The Forge of Souls",
"enUS",
},
[5280] = {
"Nightmare Wyrmkin",
"Sunken Temple",
"enUS",
},
[28733] = {
"Anub'ar Shadowcaster",
"Azjol-Nerub",
"enUS",
},
[36724] = {
"Servant of the Throne",
"Icecrown Citadel",
"enUS",
},
[36788] = {
"Deathwhisper Necrolyte",
"Pit of Saron",
"enUS",
},
[26622] = {
"Drakkari Bat",
"Drak'Tharon Keep",
"enUS",
},
[47151] = {
"Wind Breaker",
"The Bastion of Twilight",
"enUS",
},
[36980] = {
"Ice Tomb",
"Icecrown Citadel",
"enUS",
},
[9269] = {
"Smolderthorn Seer",
"Blackrock Spire",
"enUS",
},
[40017] = {
"Twilight Element Warden",
"Blackrock Caverns",
"enUS",
},
[1420] = {
"Toad",
"Coilfang: The Underbog",
"enUS",
},
[89] = {
"Infernal",
"Icecrown Citadel",
"enUS",
},
[10508] = {
"Ras Frostwhisper",
"Scholomance",
"enUS",
},
[28925] = {
"Anub'ar Necromancer",
"Azjol-Nerub",
"enUS",
},
[9219] = {
"Spirestone Butcher",
"Blackrock Spire",
"enUS",
},
[11492] = {
"Alzzin the Wildshaper",
"Dire Maul",
"enUS",
},
[11444] = {
"Gordok Mage-Lord",
"Dire Maul",
"enUS",
},
[11460] = {
"Alzzin's Minion",
"Dire Maul",
"enUS",
},
[7787] = {
"Sandfury Slave",
"Zul'Farrak",
"enUS",
},
[39795] = {
"Celestial Familiar",
"Halls of Origination",
"enUS",
},
[5756] = {
"Deviate Venomwing",
"Wailing Caverns",
"enUS",
},
[31260] = {
"Ymirjar Skycaller",
"Pit of Saron",
"enUS",
},
[39987] = {
"Evolved Twilight Zealot",
"Blackrock Caverns",
"enUS",
},
[24830] = {
"Stonevault Pillager",
"Uldaman",
"enUS",
},
[9267] = {
"Smolderthorn Axe Thrower",
"Blackrock Spire",
"enUS",
},
[29309] = {
"Elder Nadox",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[40935] = {
"Gilgoblin Hunter",
"Throne of the Tides",
"enUS",
},
[7247] = {
"Sandfury Soul Eater",
"Zul'Farrak",
"enUS",
},
[5283] = {
"Nightmare Wanderer",
"Sunken Temple",
"enUS",
},
[27390] = {
"Skarvald the Constructor",
"Utgarde Keep",
"enUS",
},
[51659] = {
"Scarlet Monk",
"Scarlet Monastery",
"enUS",
},
[9637] = {
"Scorching Totem",
"Blackrock Depths",
"enUS",
},
[42802] = {
"Drakonid Slayer",
"Blackwing Descent",
"enUS",
},
[36597] = {
"The Lich King",
"Icecrown Citadel",
"enUS",
},
[36661] = {
"Rimefang",
"Pit of Saron",
"enUS",
},
[36725] = {
"Nerub'ar Broodkeeper",
"Icecrown Citadel",
"enUS",
},
[9717] = {
"Bloodaxe Summoner",
"Blackrock Spire",
"enUS",
},
[36853] = {
"Sindragosa",
"Icecrown Citadel",
"enUS",
},
[47152] = {
"Twilight Elementalist",
"The Bastion of Twilight",
"enUS",
},
[43122] = {
"Spirit of Corehammer",
"Blackwing Descent",
"enUS",
},
[27742] = {
"Infinite Adversary",
"The Culling of Stratholme",
"enUS",
},
[44897] = {
"Pygmy Scout",
"Lost City of the Tol'vir",
"enUS",
},
[5721] = {
"Dreamscythe",
"Sunken Temple",
"enUS",
},
[25791] = {
"Fluffypuffy",
"Icecrown Citadel",
"enUS",
},
[9216] = {
"Spirestone Warlord",
"Blackrock Spire",
"enUS",
},
[17731] = {
"Fen Ray",
"Coilfang: The Underbog",
"enUS",
},
[26669] = {
"Ymirjar Savage",
"Utgarde Pinnacle",
"enUS",
},
[27966] = {
"Dark Rune Controller",
"Halls of Stone",
"enUS",
},
[28684] = {
"Krik'thir the Gatewatcher",
"Azjol-Nerub",
"enUS",
},
[8035] = {
"Dark Iron Land Mine",
"Gnomeregan",
"enUS",
},
[17827] = {
"Claw",
"Coilfang: The Underbog",
"enUS",
},
[7346] = {
"Splinterbone Centurion",
"Razorfen Downs",
"enUS",
},
[37813] = {
"Deathbringer Saurfang",
"Icecrown Citadel",
"enUS",
},
[30667] = {
"Azure Sorcerer",
"Violet Hold",
"enUS",
},
[45919] = {
"Young Storm Dragon",
"The Vortex Pinnacle",
"enUS",
},
[36626] = {
"Festergut",
"Icecrown Citadel",
"enUS",
},
[12219] = {
"Barbed Lasher",
"Maraudon",
"enUS",
},
[45917] = {
"Cloud Prince",
"The Vortex Pinnacle",
"enUS",
},
[37098] = {
"Val'kyr Herald",
"Icecrown Citadel",
"enUS",
},
[45412] = {
"Lord Aurius Rivendare",
"Stratholme",
"enUS",
},
[5056] = {
"Deviate Dreadfang",
"Wailing Caverns",
"enUS",
},
[18179] = {
"Corrupted Nova Totem",
"Coilfang: The Slave Pens",
"enUS",
},
[30621] = {
"Zicer",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[44658] = {
"Deep Murloc Invader",
"Throne of the Tides",
"enUS",
},
[8179] = {
"Greater Healing Ward",
"Zul'Farrak",
"enUS",
},
[26623] = {
"Scourge Brute",
"Drak'Tharon Keep",
"enUS",
},
[42803] = {
"Drakeadon Mongrel",
"Blackwing Descent",
"enUS",
},
[18371] = {
"Shirrak the Dead Watcher",
"Auchindoun: Auchenai Crypts",
"enUS",
},
[14323] = {
"Guard Slip'kik",
"Dire Maul",
"enUS",
},
[49136] = {
"Helix' Crew",
"Deadmines",
"enUS",
},
[47720] = {
"Camel",
"Lost City of the Tol'vir",
"enUS",
},
[36982] = {
"Kor'kron Rocketeer",
"Icecrown Citadel",
"enUS",
},
[40177] = {
"Forgemaster Throngus",
"Grim Batol",
"enUS",
},
[24078] = {
"Dragonflayer Metalworker",
"Utgarde Keep",
"enUS",
},
[48140] = {
"Temple Runecaster",
"Halls of Origination",
"enUS",
},
[3849] = {
"Deathstalker Adamant",
"Shadowfang Keep",
"enUS",
},
[27640] = {
"Ring-Lord Conjurer",
"The Oculus",
"enUS",
},
[28926] = {
"Spark of Ionar",
"Halls of Lightning",
"enUS",
},
[6220] = {
"Irradiated Horror",
"Gnomeregan",
"enUS",
},
[10405] = {
"Plague Ghoul",
"Stratholme",
"enUS",
},
[7023] = {
"Obsidian Sentinel",
"Uldaman",
"enUS",
},
[10437] = {
"Nerub'enkan",
"Stratholme",
"enUS",
},
[31133] = {
"Flametongue Totem VIII",
"Icecrown Citadel",
"enUS",
},
[29118] = {
"Anub'ar Crypt Fiend",
"Azjol-Nerub",
"enUS",
},
[10485] = {
"Risen Aberration",
"Scholomance",
"enUS",
},
[39450] = {
"Trogg Dweller",
"Grim Batol",
"enUS",
},
[29214] = {
"Anub'ar Assassin",
"Azjol-Nerub",
"enUS",
},
[17537] = {
"Vazruden",
"Hellfire Citadel: Ramparts",
"enUS",
},
[10436] = {
"Baroness Anastari",
"Stratholme",
"enUS",
},
[29310] = {
"Jedoga Shadowseeker",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[7209] = {
"Obsidian Shard",
"Uldaman",
"enUS",
},
[18934] = {
"Durnholde Mage",
"The Escape From Durnholde",
"enUS",
},
[19203] = {
"Syth Fire Elemental",
"Auchindoun: Sethekk Halls",
"enUS",
},
[4293] = {
"Scarlet Scryer",
"Scarlet Monastery",
"enUS",
},
[38454] = {
"Kinetic Bomb",
"Icecrown Citadel",
"enUS",
},
[46962] = {
"Baron Ashbury",
"Shadowfang Keep",
"enUS",
},
[36535] = {
"Corrupted Soul Fragment",
"The Forge of Souls",
"enUS",
},
[44976] = {
"Neferset Plaguebringer",
"Lost City of the Tol'vir",
"enUS",
},
[49137] = {
"Helix' Crew",
"Deadmines",
"enUS",
},
[29630] = {
"Fanged Pit Viper",
"Gundrak",
"enUS",
},
[36791] = {
"Blazing Skeleton",
"Icecrown Citadel",
"enUS",
},
[36855] = {
"Lady Deathwhisper",
"Icecrown Citadel",
"enUS",
},
[43214] = {
"Slabhide",
"The Stonecore",
"enUS",
},
[27633] = {
"Azure Inquisitor",
"The Oculus",
"enUS",
},
[27743] = {
"Infinite Hunter",
"The Culling of Stratholme",
"enUS",
},
[29822] = {
"Drakkari Fire Weaver",
"Gundrak",
"enUS",
},
[2529] = {
"Son of Arugal",
"Shadowfang Keep",
"enUS",
},
[8902] = {
"Shadowforge Citizen",
"Blackrock Depths",
"enUS",
},
[27871] = {
"Flesheating Ghoul",
"Drak'Tharon Keep",
"enUS",
},
[4421] = {
"Charlga Razorflank",
"Razorfen Kraul",
"enUS",
},
[10901] = {
"Lorekeeper Polkelt",
"Scholomance",
"enUS",
},
[4437] = {
"Razorfen Warden",
"Razorfen Kraul",
"enUS",
},
[8886] = {
"Deviate Python",
"Wailing Caverns",
"enUS",
},
[15043] = {
"Zulian Crocolisk",
"Zul'Gurub",
"enUS",
},
[18105] = {
"Ghaz'an",
"Coilfang: The Underbog",
"enUS",
},
[17860] = {
"Durnholde Veteran",
"The Escape From Durnholde",
"enUS",
},
[7915] = {
"Walking Bomb",
"Gnomeregan",
"enUS",
},
[4848] = {
"Shadowforge Darkcaster",
"Uldaman",
"enUS",
},
[39990] = {
"Twilight Zealot",
"Blackrock Caverns",
"enUS",
},
[39190] = {
"Wicked Spirit",
"Icecrown Citadel",
"enUS",
},
[50417] = {
"Bound Flames",
"Blackrock Caverns",
"enUS",
},
[4517] = {
"Death's Head Priest",
"Razorfen Kraul",
"enUS",
},
[4525] = {
"Razorfen Earthbreaker",
"Razorfen Kraul",
"enUS",
},
[44404] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[4541] = {
"Blood of Agamaggan",
"Razorfen Kraul",
"enUS",
},
[4824] = {
"Aku'mai Fisher",
"Blackfathom Deeps",
"enUS",
},
[17848] = {
"Lieutenant Drake",
"The Escape From Durnholde",
"enUS",
},
[9045] = {
"Scarshield Acolyte",
"Blackrock Spire",
"enUS",
},
[38711] = {
"Bone Spike",
"Icecrown Citadel",
"enUS",
},
[46963] = {
"Lord Walden",
"Shadowfang Keep",
"enUS",
},
[30622] = {
"Lilypa",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[30654] = {
"Totem of Wrath IV",
"Icecrown Citadel",
"enUS",
},
[44980] = {
"Neferset Theurgist",
"Lost City of the Tol'vir",
"enUS",
},
[26624] = {
"Wretched Belcher",
"Drak'Tharon Keep",
"enUS",
},
[18500] = {
"Unliving Cleric",
"Auchindoun: Auchenai Crypts",
"enUS",
},
[43125] = {
"Spirit of Moltenfist",
"Blackwing Descent",
"enUS",
},
[24082] = {
"Proto-Drake Handler",
"Utgarde Keep",
"enUS",
},
[29117] = {
"Anub'ar Champion",
"Azjol-Nerub",
"enUS",
},
[41270] = {
"Onyxia",
"Blackwing Descent",
"enUS",
},
[7344] = {
"Splinterbone Warrior",
"Razorfen Downs",
"enUS",
},
[42166] = {
"Arcanotron",
"Blackwing Descent",
"enUS",
},
[39415] = {
"Ascended Flameseeker",
"Grim Batol",
"enUS",
},
[45620] = {
"Naz'jar Soldier",
"Throne of the Tides",
"enUS",
},
[48139] = {
"Temple Swiftstalker",
"Halls of Origination",
"enUS",
},
[11445] = {
"Gordok Captain",
"Dire Maul",
"enUS",
},
[11461] = {
"Warpwood Guardian",
"Dire Maul",
"enUS",
},
[31134] = {
"Cyanigosa",
"Violet Hold",
"enUS",
},
[29119] = {
"Anub'ar Necromancer",
"Azjol-Nerub",
"enUS",
},
[39863] = {
"Halion",
"The Ruby Sanctum",
"enUS",
},
[44981] = {
"Oathsworn Skinner",
"Lost City of the Tol'vir",
"enUS",
},
[19204] = {
"Syth Frost Elemental",
"Auchindoun: Sethekk Halls",
"enUS",
},
[11483] = {
"Mana Remnant",
"Dire Maul",
"enUS",
},
[46260] = {
"Searing Destroyer",
"Stormwind Stockade",
"enUS",
},
[29311] = {
"Herald Volazj",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[46964] = {
"Lord Godfrey",
"Shadowfang Keep",
"enUS",
},
[4861] = {
"Shrike Bat",
"Uldaman",
"enUS",
},
[34234] = {
"Runeforged Sentry",
"Ulduar",
"enUS",
},
[4805] = {
"Blackfathom Sea Witch",
"Blackfathom Deeps",
"enUS",
},
[4813] = {
"Twilight Shadowmage",
"Blackfathom Deeps",
"enUS",
},
[4821] = {
"Skittering Crustacean",
"Blackfathom Deeps",
"enUS",
},
[4829] = {
"Aku'mai",
"Blackfathom Deeps",
"enUS",
},
[27648] = {
"Phantasmal Naga",
"The Oculus",
"enUS",
},
[38712] = {
"Bone Spike",
"Icecrown Citadel",
"enUS",
},
[4853] = {
"Stonevault Geomancer",
"UNKNOWN",
"enUS",
},
[19428] = {
"Cobalt Serpent",
"Auchindoun: Sethekk Halls",
"enUS",
},
[49139] = {
"Helix' Crew",
"Deadmines",
"enUS",
},
[1732] = {
"Defias Squallshaper",
"Deadmines",
"enUS",
},
[43126] = {
"Spirit of Thaurissan",
"Blackwing Descent",
"enUS",
},
[27744] = {
"Infinite Agent",
"The Culling of Stratholme",
"enUS",
},
[14370] = {
"Cadaverous Worm",
"Dire Maul",
"enUS",
},
[40925] = {
"Tainted Sentry",
"Throne of the Tides",
"enUS",
},
[26529] = {
"Meathook",
"The Culling of Stratholme",
"enUS",
},
[30623] = {
"Aiwa",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[23970] = {
"Vrykul Skeleton",
"Utgarde Keep",
"enUS",
},
[18341] = {
"Pandemonius",
"Auchindoun: Mana-Tombs",
"enUS",
},
[18373] = {
"Exarch Maladaar",
"Auchindoun: Auchenai Crypts",
"enUS",
},
[44982] = {
"Neferset Darkcaster",
"Lost City of the Tol'vir",
"enUS",
},
[7012] = {
"Earthen Sculptor",
"Uldaman",
"enUS",
},
[30111] = {
"Twilight Worshipper",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[39800] = {
"Flame Warden",
"Halls of Origination",
"enUS",
},
[43127] = {
"Spirit of Ironstar",
"Blackwing Descent",
"enUS",
},
[32786] = {
"Rotted Troll Corpse",
"Drak'Tharon Keep",
"enUS",
},
[17957] = {
"Coilfang Champion",
"Coilfang: The Slave Pens",
"enUS",
},
[31007] = {
"Azure Binder",
"Violet Hold",
"enUS",
},
[46261] = {
"Enraged Fire Elemental",
"Stormwind Stockade",
"enUS",
},
[7076] = {
"Earthen Guardian",
"Uldaman",
"enUS",
},
[9196] = {
"Highlord Omokk",
"Blackrock Spire",
"enUS",
},
[10406] = {
"Ghoul Ravener",
"Stratholme",
"enUS",
},
[28384] = {
"Lesser Air Elemental",
"Halls of Stone",
"enUS",
},
[18320] = {
"Time-Lost Shadowmage",
"Auchindoun: Sethekk Halls",
"enUS",
},
[4528] = {
"Stone Rumbler",
"Razorfen Kraul",
"enUS",
},
[48756] = {
"Hooked Net",
"Grim Batol",
"enUS",
},
[46262] = {
"Rumbling Earth",
"Stormwind Stockade",
"enUS",
},
[18309] = {
"Ethereal Scavenger",
"Auchindoun: Mana-Tombs",
"enUS",
},
[36666] = {
"Spectral Warden",
"The Forge of Souls",
"enUS",
},
[14308] = {
"Ferra",
"Dire Maul",
"enUS",
},
[14324] = {
"Cho'Rush the Observer",
"Dire Maul",
"enUS",
},
[26625] = {
"Darkweb Recluse",
"Drak'Tharon Keep",
"enUS",
},
[40633] = {
"Naz'jar Honor Guard",
"Throne of the Tides",
"enUS",
},
[28736] = {
"Skittering Infector",
"Azjol-Nerub",
"enUS",
},
[43128] = {
"Spirit of Anvilrage",
"Blackwing Descent",
"enUS",
},
[37025] = {
"Stinky",
"Icecrown Citadel",
"enUS",
},
[30879] = {
"Planar Anomaly",
"The Oculus",
"enUS",
},
[8899] = {
"Doomforge Dragoon",
"Blackrock Depths",
"enUS",
},
[7228] = {
"Ironaya",
"Uldaman",
"enUS",
},
[10374] = {
"Spire Spider",
"Blackrock Spire",
"enUS",
},
[10390] = {
"Skeletal Guardian",
"Stratholme",
"enUS",
},
[35451] = {
"The Black Knight",
"Trial of the Champion",
"enUS",
},
[37562] = {
"Gas Cloud",
"Icecrown Citadel",
"enUS",
},
[10438] = {
"Maleki the Pallid",
"Stratholme",
"enUS",
},
[7276] = {
"Zul'Farrak Dead Hero",
"Zul'Farrak",
"enUS",
},
[39801] = {
"Earth Warden",
"Halls of Origination",
"enUS",
},
[10486] = {
"Risen Warrior",
"Scholomance",
"enUS",
},
[10502] = {
"Lady Illucia Barov",
"Scholomance",
"enUS",
},
[29216] = {
"Anub'ar Guardian",
"Azjol-Nerub",
"enUS",
},
[6575] = {
"Scarlet Trainee",
"Scarlet Monastery",
"enUS",
},
[5277] = {
"Nightmare Scalebane",
"Sunken Temple",
"enUS",
},
[29312] = {
"Lavanthor",
"Violet Hold",
"enUS",
},
[3671] = {
"Lady Anacondra",
"Wailing Caverns",
"enUS",
},
[7348] = {
"Thorn Eater Ghoul",
"Razorfen Downs",
"enUS",
},
[8567] = {
"Glutton",
"Razorfen Downs",
"enUS",
},
[19205] = {
"Syth Arcane Elemental",
"Auchindoun: Sethekk Halls",
"enUS",
},
[4520] = {
"Razorfen Geomancer",
"Razorfen Kraul",
"enUS",
},
[40142] = {
"Halion",
"The Ruby Sanctum",
"enUS",
},
[10678] = {
"Plagued Hatchling",
"Scholomance",
"enUS",
},
[7396] = {
"Earthen Stonebreaker",
"Uldaman",
"enUS",
},
[42808] = {
"Stonecore Flayer",
"The Stonecore",
"enUS",
},
[40825] = {
"Erunak Stonespeaker",
"Throne of the Tides",
"enUS",
},
[19429] = {
"Avian Darkhawk",
"Eastern Kingdoms",
"enUS",
},
[40953] = {
"Khaaphom",
"Grim Batol",
"enUS",
},
[8876] = {
"Sandfury Acolyte",
"Zul'Farrak",
"enUS",
},
[17478] = {
"Bleeding Hollow Scryer",
"Hellfire Citadel: Ramparts",
"enUS",
},
[32191] = {
"Azure Stalker",
"Violet Hold",
"enUS",
},
[3851] = {
"Shadowfang Whitescalp",
"Shadowfang Keep",
"enUS",
},
[11030] = {
"Mindless Undead",
"Stratholme",
"enUS",
},
[48502] = {
"Defias Enforcer",
"Deadmines",
"enUS",
},
[29920] = {
"Ruins Dweller",
"Gundrak",
"enUS",
},
[17840] = {
"Durnholde Tracking Hound",
"The Escape From Durnholde",
"enUS",
},
[50869] = {
"Razorclaw the Butcher",
"Shadowfang Keep",
"enUS",
},
[17734] = {
"Underbog Lord",
"Coilfang: The Underbog",
"enUS",
},
[26530] = {
"Salramm the Fleshcrafter",
"The Culling of Stratholme",
"enUS",
},
[8903] = {
"Anvilrage Captain",
"Blackrock Depths",
"enUS",
},
[27979] = {
"Forged Iron Trogg",
"Halls of Stone",
"enUS",
},
[17862] = {
"Captain Skarloc",
"The Escape From Durnholde",
"enUS",
},
[30176] = {
"Ahn'kahar Guardian",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[26690] = {
"Ymirjar Warrior",
"Utgarde Pinnacle",
"enUS",
},
[17958] = {
"Coilfang Defender",
"Coilfang: The Slave Pens",
"enUS",
},
[17990] = {
"Underbog Mushroom",
"Coilfang: The Underbog",
"enUS",
},
[46263] = {
"Slag Fury",
"Stormwind Stockade",
"enUS",
},
[47626] = {
"Admiral Ripsnarl",
"Deadmines",
"enUS",
},
[13141] = {
"Deeprot Stomper",
"Maraudon",
"enUS",
},
[7604] = {
"Sergeant Bly",
"Zul'Farrak",
"enUS",
},
[50613] = {
"Wailing Guardsman",
"Shadowfang Keep",
"enUS",
},
[11318] = {
"Ragefire Trogg",
"Ragefire Chasm",
"enUS",
},
[44600] = {
"Halfus Wyrmbreaker",
"The Bastion of Twilight",
"enUS",
},
[36476] = {
"Ick",
"Pit of Saron",
"enUS",
},
[40634] = {
"Naz'jar Tempest Witch",
"Throne of the Tides",
"enUS",
},
[3863] = {
"Lupine Horror",
"Shadowfang Keep",
"enUS",
},
[30624] = {
"Aiwa",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[13285] = {
"Death Lash",
"Dire Maul",
"enUS",
},
[31008] = {
"Azure Invader",
"Violet Hold",
"enUS",
},
[26626] = {
"Scourge Reanimator",
"Drak'Tharon Keep",
"enUS",
},
[9239] = {
"Smolderthorn Mystic",
"Blackrock Spire",
"enUS",
},
[43129] = {
"Spirit of Shadowforge",
"Blackwing Descent",
"enUS",
},
[26722] = {
"Azure Magus",
"The Nexus",
"enUS",
},
[3859] = {
"Shadowfang Ragetooth",
"Shadowfang Keep",
"enUS",
},
[11350] = {
"Gurubashi Axe Thrower",
"Zul'Gurub",
"enUS",
},
[9319] = {
"Houndmaster Grebmar",
"Blackrock Depths",
"enUS",
},
[11382] = {
"Bloodlord Mandokir",
"Zul'Gurub",
"enUS",
},
[3875] = {
"Haunted Servitor",
"Shadowfang Keep",
"enUS",
},
[5709] = {
"Shade of Eranikus",
"Sunken Temple",
"enUS",
},
[5717] = {
"Mijan",
"Sunken Temple",
"enUS",
},
[3887] = {
"Baron Silverlaine",
"Shadowfang Keep",
"enUS",
},
[31104] = {
"Ahn'kahar Watcher",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[7788] = {
"Sandfury Drudge",
"Zul'Farrak",
"enUS",
},
[7796] = {
"Nekrum Gutchewer",
"Zul'Farrak",
"enUS",
},
[29153] = {
"Animated Bones",
"Azjol-Nerub",
"enUS",
},
[40251] = {
"Stone Trogg Brute",
"Halls of Origination",
"enUS",
},
[29217] = {
"Anub'ar Venomancer",
"Azjol-Nerub",
"enUS",
},
[42362] = {
"Drakonid Drudge",
"Blackwing Descent",
"enUS",
},
[46264] = {
"Lord Overheat",
"Stormwind Stockade",
"enUS",
},
[29313] = {
"Ichoron",
"Violet Hold",
"enUS",
},
[3927] = {
"Wolf Master Nandos",
"Shadowfang Keep",
"enUS",
},
[11622] = {
"Rattlegore",
"Scholomance",
"enUS",
},
[47134] = {
"Corpse Eater",
"Shadowfang Keep",
"enUS",
},
[19206] = {
"Syth Shadow Elemental",
"Auchindoun: Sethekk Halls",
"enUS",
},
[29335] = {
"Anub'ar Webspinner",
"Azjol-Nerub",
"enUS",
},
[36477] = {
"Krick",
"Pit of Saron",
"enUS",
},
[10417] = {
"Venom Belcher",
"Stratholme",
"enUS",
},
[3527] = {
"Healing Stream Totem",
"Scholomance",
"enUS",
},
[42810] = {
"Crystalspawn Giant",
"The Stonecore",
"enUS",
},
[39899] = {
"Baltharus the Warborn",
"The Ruby Sanctum",
"enUS",
},
[6426] = {
"Anguished Dead",
"Scarlet Monastery",
"enUS",
},
[27650] = {
"Phantasmal Air",
"The Oculus",
"enUS",
},
[3975] = {
"Herod",
"Scarlet Monastery",
"enUS",
},
[43130] = {
"Spirit of Burningeye",
"Blackwing Descent",
"enUS",
},
[11830] = {
"Hakkari Priest",
"Zul'Gurub",
"enUS",
},
[37117] = {
"Kor'kron Battle-Mage",
"Icecrown Citadel",
"enUS",
},
[31216] = {
"Lågan",
"Icecrown Citadel",
"enUS",
},
[17398] = {
"Nascent Fel Orc",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[14400] = {
"Arcane Feedback",
"Dire Maul",
"enUS",
},
[17735] = {
"Wrathfin Warrior",
"Coilfang: The Underbog",
"enUS",
},
[33343] = {
"XS-013 Scrapbot",
"Ulduar",
"enUS",
},
[37501] = {
"Nerub'ar Champion",
"Icecrown Citadel",
"enUS",
},
[32273] = {
"Infinite Corruptor",
"The Culling of Stratholme",
"enUS",
},
[11476] = {
"Skeletal Highborne",
"Dire Maul",
"enUS",
},
[17252] = {
"Izikvazin",
"Icecrown Citadel",
"enUS",
},
[39804] = {
"Stone Trogg Pillager",
"Halls of Origination",
"enUS",
},
[17959] = {
"Coilfang Slavehandler",
"Coilfang: The Slave Pens",
"enUS",
},
[6021] = {
"Boar Spirit",
"Razorfen Kraul",
"enUS",
},
[37949] = {
"Cult Adherent",
"Icecrown Citadel",
"enUS",
},
[17991] = {
"Rokmar the Crackler",
"Coilfang: The Slave Pens",
"enUS",
},
[38369] = {
"Dark Nucleus",
"Icecrown Citadel",
"enUS",
},
[50376] = {
"Angered Earth",
"Blackrock Caverns",
"enUS",
},
[40252] = {
"Stone Trogg Rock Flinger",
"Halls of Origination",
"enUS",
},
[24516] = {
"Igor",
"Icecrown Citadel",
"enUS",
},
[50615] = {
"Tormented Officer",
"Shadowfang Keep",
"enUS",
},
[26691] = {
"Ymirjar Witch Doctor",
"Utgarde Pinnacle",
"enUS",
},
[14389] = {
"Netherwalker",
"Dire Maul",
"enUS",
},
[36478] = {
"Soulguard Watchman",
"The Forge of Souls",
"enUS",
},
[8156] = {
"Servant of Antu'sul",
"Zul'Farrak",
"enUS",
},
[28546] = {
"Ionar",
"Halls of Lightning",
"enUS",
},
[30625] = {
"Aiwa",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[44922] = {
"Oathsworn Axemaster",
"Lost City of the Tol'vir",
"enUS",
},
[14325] = {
"Captain Kromcrush",
"Dire Maul",
"enUS",
},
[26627] = {
"Crystal Handler",
"Drak'Tharon Keep",
"enUS",
},
[47161] = {
"Twilight Brute",
"The Bastion of Twilight",
"enUS",
},
[18503] = {
"Phantasmal Possessor",
"Auchindoun: Auchenai Crypts",
"enUS",
},
[26723] = {
"Keristrasza",
"The Nexus",
"enUS",
},
[48440] = {
"Mining Monkey",
"Deadmines",
"enUS",
},
[17381] = {
"The Maker",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[7267] = {
"Chief Ukorz Sandscalp",
"Zul'Farrak",
"enUS",
},
[35327] = {
"Undercity Champion",
"Trial of the Champion",
"enUS",
},
[10375] = {
"Spire Spiderling",
"Blackrock Spire",
"enUS",
},
[33344] = {
"XM-024 Pummeller",
"Ulduar",
"enUS",
},
[37502] = {
"Nerub'ar Webweaver",
"Icecrown Citadel",
"enUS",
},
[43707] = {
"Blood of the Old God",
"The Bastion of Twilight",
"enUS",
},
[10439] = {
"Ramstein the Gorger",
"Stratholme",
"enUS",
},
[5763] = {
"Nightmare Ectoplasm",
"Wailing Caverns",
"enUS",
},
[10471] = {
"Scholomance Acolyte",
"Scholomance",
"enUS",
},
[10487] = {
"Risen Protector",
"Scholomance",
"enUS",
},
[37886] = {
"Gluttonous Abomination",
"Icecrown Citadel",
"enUS",
},
[27969] = {
"Dark Rune Giant",
"Halls of Stone",
"enUS",
},
[21126] = {
"Coilfang Scale-Healer",
"Coilfang: The Slave Pens",
"enUS",
},
[48505] = {
"Defias Shadowguard",
"Deadmines",
"enUS",
},
[29314] = {
"Zuramat the Obliterator",
"Violet Hold",
"enUS",
},
[48441] = {
"Mining Monkey",
"Deadmines",
"enUS",
},
[4278] = {
"Commander Springvale",
"Shadowfang Keep",
"enUS",
},
[42428] = {
"Devout Follower",
"The Stonecore",
"enUS",
},
[4294] = {
"Scarlet Sorcerer",
"Scarlet Monastery",
"enUS",
},
[4302] = {
"Scarlet Champion",
"Scarlet Monastery",
"enUS",
},
[6207] = {
"Caverndeep Ambusher",
"Gnomeregan",
"enUS",
},
[17377] = {
"Keli'dan the Breaker",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[14398] = {
"Eldreth Darter",
"Dire Maul",
"enUS",
},
[40765] = {
"Commander Ulthok",
"Throne of the Tides",
"enUS",
},
[14821] = {
"Razzashi Raptor",
"Zul'Gurub",
"enUS",
},
[37134] = {
"Ymirjar Huntress",
"Icecrown Citadel",
"enUS",
},
[27651] = {
"Phantasmal Fire",
"The Oculus",
"enUS",
},
[47162] = {
"Glubtok",
"Deadmines",
"enUS",
},
[17942] = {
"Quagmirran",
"Coilfang: The Slave Pens",
"enUS",
},
[5256] = {
"Atal'ai Warrior",
"Sunken Temple",
"enUS",
},
[29826] = {
"Drakkari Medicine Man",
"Gundrak",
"enUS",
},
[43324] = {
"Cho'gall",
"The Bastion of Twilight",
"enUS",
},
[12902] = {
"Lorgus Jett",
"Blackfathom Deeps",
"enUS",
},
[27971] = {
"Unrelenting Construct",
"Halls of Stone",
"enUS",
},
[4422] = {
"Agathelos the Raging",
"Razorfen Kraul",
"enUS",
},
[30114] = {
"Twilight Initiate",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[4438] = {
"Razorfen Spearhide",
"Razorfen Kraul",
"enUS",
},
[6493] = {
"Illusionary Phantasm",
"Scarlet Monastery",
"enUS",
},
[8904] = {
"Shadowforge Senator",
"Blackrock Depths",
"enUS",
},
[37695] = {
"Drudge Ghoul",
"Icecrown Citadel",
"enUS",
},
[8920] = {
"Weapon Technician",
"Blackrock Depths",
"enUS",
},
[39870] = {
"Twilight Firecatcher",
"Grim Batol",
"enUS",
},
[24069] = {
"Dragonflayer Bonecrusher",
"Utgarde Keep",
"enUS",
},
[17960] = {
"Coilfang Soothsayer",
"Coilfang: The Slave Pens",
"enUS",
},
[30338] = {
"Ahn'kahar Swarmer",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[9016] = {
"Bael'Gar",
"Blackrock Depths",
"enUS",
},
[4518] = {
"Death's Head Sage",
"Razorfen Kraul",
"enUS",
},
[13142] = {
"Deeprot Tangler",
"Maraudon",
"enUS",
},
[4534] = {
"Tamed Hyena",
"Razorfen Kraul",
"enUS",
},
[4542] = {
"High Inquisitor Fairbanks",
"Scarlet Monastery",
"enUS",
},
[28419] = {
"Frenzied Geist",
"Utgarde Keep",
"enUS",
},
[36957] = {
"Kor'kron Reaver",
"Icecrown Citadel",
"enUS",
},
[10391] = {
"Skeletal Berserker",
"Stratholme",
"enUS",
},
[18344] = {
"Nexus-Prince Shaffar",
"Auchindoun: Mana-Tombs",
"enUS",
},
[28547] = {
"Storming Vortex",
"Halls of Lightning",
"enUS",
},
[28579] = {
"Hardened Steel Berserker",
"Halls of Lightning",
"enUS",
},
[44924] = {
"Oathsworn Myrmidon",
"Lost City of the Tol'vir",
"enUS",
},
[9240] = {
"Smolderthorn Shadow Priest",
"Blackrock Spire",
"enUS",
},
[26628] = {
"Drakkari Scytheclaw",
"Drak'Tharon Keep",
"enUS",
},
[18472] = {
"Darkweaver Syth",
"Auchindoun: Sethekk Halls",
"enUS",
},
[26692] = {
"Ymirjar Harpooner",
"Utgarde Pinnacle",
"enUS",
},
[11319] = {
"Ragefire Shaman",
"Ragefire Chasm",
"enUS",
},
[27636] = {
"Azure Ley-Whelp",
"The Oculus",
"enUS",
},
[11351] = {
"Gurubashi Headhunter",
"Zul'Gurub",
"enUS",
},
[5273] = {
"Atal'ai High Priest",
"Sunken Temple",
"enUS",
},
[8909] = {
"Fireguard",
"Blackrock Depths",
"enUS",
},
[27647] = {
"Phantasmal Ogre",
"The Oculus",
"enUS",
},
[31010] = {
"Azure Mage Slayer",
"Violet Hold",
"enUS",
},
[47739] = {
"\"Captain\" Cookie",
"Deadmines",
"enUS",
},
[49850] = {
"Defias Enforcer",
"Deadmines",
"enUS",
},
[39679] = {
"Corla, Herald of Twilight",
"Blackrock Caverns",
"enUS",
},
[3983] = {
"Interrogator Vishas",
"Scarlet Monastery",
"enUS",
},
[37907] = {
"Rot Worm",
"Icecrown Citadel",
"enUS",
},
[41918] = {
"Animated Bone Warrior",
"Blackwing Descent",
"enUS",
},
[6047] = {
"Aqua Guardian",
"Blackfathom Deeps",
"enUS",
},
[9201] = {
"Spirestone Ogre Magus",
"Blackrock Spire",
"enUS",
},
[19016] = {
"Hellfire Familiar",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[37531] = {
"Frostwarden Handler",
"Icecrown Citadel",
"enUS",
},
[29315] = {
"Erekem",
"Violet Hold",
"enUS",
},
[37901] = {
"Vampiric Fiend",
"Icecrown Citadel",
"enUS",
},
[40319] = {
"Drahga Shadowburner",
"Grim Batol",
"enUS",
},
[4798] = {
"Fallenroot Shadowstalker",
"Blackfathom Deeps",
"enUS",
},
[40447] = {
"Chains of Woe",
"Blackrock Caverns",
"enUS",
},
[2408] = {
"Snapjaw",
"The Escape From Durnholde",
"enUS",
},
[4822] = {
"Snapping Crustacean",
"Blackfathom Deeps",
"enUS",
},
[36609] = {
"Val'kyr Shadowguard",
"Icecrown Citadel",
"enUS",
},
[44797] = {
"Time Warden",
"The Bastion of Twilight",
"enUS",
},
[18311] = {
"Ethereal Crypt Raider",
"Auchindoun: Mana-Tombs",
"enUS",
},
[4854] = {
"Grimlok",
"Uldaman",
"enUS",
},
[11324] = {
"Searing Blade Warlock",
"Ragefire Chasm",
"enUS",
},
[11783] = {
"Theradrim Shardling",
"Maraudon",
"enUS",
},
[26532] = {
"Chrono-Lord Epoch",
"The Culling of Stratholme",
"enUS",
},
[26639] = {
"Drakkari Shaman",
"Drak'Tharon Keep",
"enUS",
},
[11831] = {
"Hakkari Witch Doctor",
"Zul'Gurub",
"enUS",
},
[27978] = {
"Sjonnir The Ironshaper",
"Halls of Stone",
"enUS",
},
[35311] = {
"Fountain of Light",
"Trial of the Champion",
"enUS",
},
[28826] = {
"Stormfury Revenant",
"Halls of Lightning",
"enUS",
},
[18498] = {
"Unliving Soldier",
"Auchindoun: Auchenai Crypts",
"enUS",
},
[9696] = {
"Bloodaxe Worg",
"Blackrock Spire",
"enUS",
},
[17429] = {
"Fel Orc Neophyte",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[27972] = {
"Lightning Construct",
"Halls of Stone",
"enUS",
},
[39616] = {
"Naz'jar Invader",
"Throne of the Tides",
"enUS",
},
[37697] = {
"Volatile Ooze",
"Icecrown Citadel",
"enUS",
},
[17833] = {
"Durnholde Warden",
"The Escape From Durnholde",
"enUS",
},
[9040] = {
"Dope'rel",
"Blackrock Depths",
"enUS",
},
[30179] = {
"Twilight Apostle",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[32258] = {
"Gold Beetle",
"Northrend",
"enUS",
},
[17961] = {
"Coilfang Enchantress",
"Coilfang: The Slave Pens",
"enUS",
},
[6212] = {
"Dark Iron Agent",
"Gnomeregan",
"enUS",
},
[36941] = {
"Risen Witch Doctor",
"Halls of Reflection",
"enUS",
},
[7077] = {
"Earthen Hallshaper",
"Uldaman",
"enUS",
},
[2520] = {
"Remote-Controlled Golem",
"Deadmines",
"enUS",
},
[40320] = {
"Valiona",
"Grim Batol",
"enUS",
},
[36877] = {
"Wrathbone Skeleton",
"Pit of Saron",
"enUS",
},
[40448] = {
"Twilight Enforcer",
"Grim Batol",
"enUS",
},
[18524] = {
"Angered Skeleton",
"Auchindoun: Auchenai Crypts",
"enUS",
},
[27600] = {
"Risen Shadowcaster",
"Drak'Tharon Keep",
"enUS",
},
[8440] = {
"Avatar of Hakkar",
"Sunken Temple",
"enUS",
},
[18313] = {
"Ethereal Sorcerer",
"Auchindoun: Mana-Tombs",
"enUS",
},
[26533] = {
"Mal'Ganis",
"The Culling of Stratholme",
"enUS",
},
[44926] = {
"Oathsworn Wanderer",
"Lost City of the Tol'vir",
"enUS",
},
[14326] = {
"Guard Mol'dar",
"Dire Maul",
"enUS",
},
[18441] = {
"Stolen Soul",
"Auchindoun: Auchenai Crypts",
"enUS",
},
[18473] = {
"Talon King Ikiss",
"Auchindoun: Sethekk Halls",
"enUS",
},
[26693] = {
"Skadi the Ruthless",
"Utgarde Pinnacle",
"enUS",
},
[29213] = {
"Anub'ar Darter",
"Azjol-Nerub",
"enUS",
},
[37122] = {
"Captain Arnath",
"Icecrown Citadel",
"enUS",
},
[28836] = {
"Stormforged Runeshaper",
"Halls of Lightning",
"enUS",
},
[43391] = {
"Millhouse Manastorm",
"The Stonecore",
"enUS",
},
[37890] = {
"Cult Fanatic",
"Icecrown Citadel",
"enUS",
},
[39425] = {
"Temple Guardian Anhuur",
"Halls of Origination",
"enUS",
},
[36880] = {
"Decaying Colossus",
"Icecrown Citadel",
"enUS",
},
[10408] = {
"Rockwing Gargoyle",
"Stratholme",
"enUS",
},
[49852] = {
"Defias Shadowguard",
"Deadmines",
"enUS",
},
[7269] = {
"Scarab",
"Zul'Farrak",
"enUS",
},
[37698] = {
"Shambling Horror",
"Icecrown Citadel",
"enUS",
},
[10472] = {
"Scholomance Occultist",
"Scholomance",
"enUS",
},
[39873] = {
"Twilight Wyrmcaller",
"Grim Batol",
"enUS",
},
[10504] = {
"Lord Alexei Barov",
"Scholomance",
"enUS",
},
[7309] = {
"Earthen Custodian",
"Uldaman",
"enUS",
},
[5270] = {
"Atal'ai Corpse Eater",
"Sunken Temple",
"enUS",
},
[7333] = {
"Withered Battle Boar",
"Razorfen Downs",
"enUS",
},
[21128] = {
"Coilfang Ray",
"Coilfang: The Slave Pens",
"enUS",
},
[48445] = {
"Oaf Lackey",
"Deadmines",
"enUS",
},
[7349] = {
"Tomb Fiend",
"Razorfen Downs",
"enUS",
},
[7357] = {
"Mordresh Fire Eye",
"Razorfen Downs",
"enUS",
},
[8585] = {
"Frost Spectre",
"Razorfen Downs",
"enUS",
},
[644] = {
"Rhahk'Zor",
"Deadmines",
"enUS",
},
[40577] = {
"Naz'jar Sentinel",
"Throne of the Tides",
"enUS",
},
[7405] = {
"Deadly Cleft Scorpid",
"Uldaman",
"enUS",
},
[7397] = {
"Earthen Stonecarver",
"Uldaman",
"enUS",
},
[48957] = {
"Fire Blossom",
"Deadmines",
"enUS",
},
[33346] = {
"XE-321 Boombot",
"Ulduar",
"enUS",
},
[26686] = {
"Ferocious Rhino",
"Utgarde Pinnacle",
"enUS",
},
[27653] = {
"Phantasmal Water",
"The Oculus",
"enUS",
},
[23180] = {
"Tarren Mill Protector",
"The Escape From Durnholde",
"enUS",
},
[37712] = {
"Deathwhisper Shadowcaster",
"Pit of Saron",
"enUS",
},
[18343] = {
"Tavarok",
"Auchindoun: Mana-Tombs",
"enUS",
},
[37123] = {
"Captain Brandon",
"Icecrown Citadel",
"enUS",
},
[5775] = {
"Verdan the Everliving",
"Wailing Caverns",
"enUS",
},
[27970] = {
"Raging Construct",
"Halls of Stone",
"enUS",
},
[17540] = {
"Fiendish Hound",
"Hellfire Citadel: Ramparts",
"enUS",
},
[27909] = {
"Darkweb Victim",
"Drak'Tharon Keep",
"enUS",
},
[31176] = {
"Stoneskin Totem X",
"Icecrown Citadel",
"enUS",
},
[27973] = {
"Crystalline Shardling",
"Halls of Stone",
"enUS",
},
[37571] = {
"Darkfallen Advisor",
"Icecrown Citadel",
"enUS",
},
[8905] = {
"Warbringer Construct",
"Blackrock Depths",
"enUS",
},
[39746] = {
"General Zarithrian",
"The Ruby Sanctum",
"enUS",
},
[2748] = {
"Archaedas",
"Uldaman",
"enUS",
},
[17962] = {
"Coilfang Collaborator",
"Coilfang: The Slave Pens",
"enUS",
},
[28165] = {
"Iron Sludge",
"Halls of Stone",
"enUS",
},
[37955] = {
"Blood-Queen Lana'thel",
"Icecrown Citadel",
"enUS",
},
[30276] = {
"Ahn'kahar Web Winder",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[9017] = {
"Lord Incendius",
"Blackrock Depths",
"enUS",
},
[11348] = {
"Zealot Zath",
"Zul'Gurub",
"enUS",
},
[18314] = {
"Nexus Stalker",
"Auchindoun: Mana-Tombs",
"enUS",
},
[7605] = {
"Raven",
"Zul'Farrak",
"enUS",
},
[5719] = {
"Morphaz",
"Sunken Temple",
"enUS",
},
[9097] = {
"Scarshield Legionnaire",
"Blackrock Spire",
"enUS",
},
[28581] = {
"Stormforged Tactician",
"Halls of Lightning",
"enUS",
},
[49670] = {
"Glubtok",
"Deadmines",
"enUS",
},
[26694] = {
"Ymirjar Dusk Shaman",
"Utgarde Pinnacle",
"enUS",
},
[36612] = {
"Lord Marrowgar",
"Icecrown Citadel",
"enUS",
},
[48958] = {
"Frost Blossom",
"Deadmines",
"enUS",
},
[30660] = {
"Portal Guardian",
"Violet Hold",
"enUS",
},
[26918] = {
"Chaotic Rift",
"The Nexus",
"enUS",
},
[26630] = {
"Trollgore",
"Drak'Tharon Keep",
"enUS",
},
[3864] = {
"Fel Steed",
"Shadowfang Keep",
"enUS",
},
[9257] = {
"Scarshield Warlock",
"Blackrock Spire",
"enUS",
},
[11320] = {
"Earthborer",
"Ragefire Chasm",
"enUS",
},
[37124] = {
"Captain Grondel",
"Icecrown Citadel",
"enUS",
},
[11352] = {
"Gurubashi Berserker",
"Zul'Gurub",
"enUS",
},
[11368] = {
"Bloodseeker Bat",
"Zul'Gurub",
"enUS",
},
[28965] = {
"Titanium Thunderer",
"Halls of Lightning",
"enUS",
},
[11322] = {
"Searing Blade Cultist",
"Ragefire Chasm",
"enUS",
},
[5710] = {
"Jammal'an the Prophet",
"Sunken Temple",
"enUS",
},
[11480] = {
"Arcane Aberration",
"Dire Maul",
"enUS",
},
[49854] = {
"Defias Blood Wizard",
"Deadmines",
"enUS",
},
[11464] = {
"Warpwood Tangler",
"Dire Maul",
"enUS",
},
[7789] = {
"Sandfury Cretin",
"Zul'Farrak",
"enUS",
},
[7797] = {
"Ruuzlu",
"Zul'Farrak",
"enUS",
},
[18478] = {
"Avatar of the Martyred",
"Auchindoun: Auchenai Crypts",
"enUS",
},
[17414] = {
"Shadowmoon Technician",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[11258] = {
"Frail Skeleton",
"Scholomance",
"enUS",
},
[39747] = {
"Saviana Ragefire",
"The Ruby Sanctum",
"enUS",
},
[42178] = {
"Magmatron",
"Blackwing Descent",
"enUS",
},
[23176] = {
"Tarren Mill Guardsman",
"The Escape From Durnholde",
"enUS",
},
[48447] = {
"Monstrous Parrot",
"Deadmines",
"enUS",
},
[8921] = {
"Bloodhound",
"Blackrock Depths",
"enUS",
},
[18318] = {
"Sethekk Initiate",
"Eastern Kingdoms",
"enUS",
},
[14507] = {
"High Priest Venoxis",
"Zul'Gurub",
"enUS",
},
[19306] = {
"Mana Leech",
"Auchindoun: Mana-Tombs",
"enUS",
},
[2924] = {
"Wolf",
"Auchindoun: Auchenai Crypts",
"enUS",
},
[17259] = {
"Bonechewer Hungerer",
"Hellfire Citadel: Ramparts",
"enUS",
},
[29573] = {
"Drakkari Elemental",
"Gundrak",
"enUS",
},
[17455] = {
"Bonechewer Beastmaster",
"Hellfire Citadel: Ramparts",
"enUS",
},
[29637] = {
"Crafty Snake",
"Gundrak",
"enUS",
},
[36805] = {
"Deathspeaker Servant",
"Icecrown Citadel",
"enUS",
},
[27654] = {
"Drakos the Interrogator",
"The Oculus",
"enUS",
},
[47231] = {
"Shadowy Attendant",
"Shadowfang Keep",
"enUS",
},
[47232] = {
"Ghostly Cook",
"Shadowfang Keep",
"enUS",
},
[47296] = {
"Helix Gearbreaker",
"Deadmines",
"enUS",
},
[29829] = {
"Drakkari Earthshaker",
"Gundrak",
"enUS",
},
[45377] = {
"Augh",
"Lost City of the Tol'vir",
"enUS",
},
[40579] = {
"Deep Murloc Hunter",
"Throne of the Tides",
"enUS",
},
[5950] = {
"Flametongue Totem",
"Scholomance",
"enUS",
},
[17771] = {
"Murkblood Oracle",
"Coilfang: The Underbog",
"enUS",
},
[35590] = {
"Risen Champion",
"Trial of the Champion",
"enUS",
},
[27974] = {
"Eroded Shardling",
"Halls of Stone",
"enUS",
},
[2992] = {
"Healing Ward V",
"Razorfen Kraul",
"enUS",
},
[43778] = {
"Foe Reaper 5000",
"Deadmines",
"enUS",
},
[28731] = {
"Watcher Silthik",
"Azjol-Nerub",
"enUS",
},
[18506] = {
"Raging Soul",
"Auchindoun: Auchenai Crypts",
"enUS",
},
[26687] = {
"Gortok Palehoof",
"Utgarde Pinnacle",
"enUS",
},
[37665] = {
"Darkfallen Lieutenant",
"Icecrown Citadel",
"enUS",
},
[17963] = {
"Wastewalker Slave",
"Coilfang: The Slave Pens",
"enUS",
},
[30277] = {
"Ahn'kahar Slasher",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[42179] = {
"Electron",
"Blackwing Descent",
"enUS",
},
[24200] = {
"Skarvald the Constructor",
"Utgarde Keep",
"enUS",
},
[5053] = {
"Deviate Crocolisk",
"Wailing Caverns",
"enUS",
},
[24071] = {
"Dragonflayer Heartsplitter",
"Utgarde Keep",
"enUS",
},
[18312] = {
"Ethereal Spellbinder",
"Auchindoun: Mana-Tombs",
"enUS",
},
[33387] = {
"Writhing Lasher",
"Ulduar",
"enUS",
},
[5761] = {
"Deviate Shambler",
"Wailing Caverns",
"enUS",
},
[8891] = {
"Anvilrage Guardsman",
"Blackrock Depths",
"enUS",
},
[12216] = {
"Poison Sprite",
"Maraudon",
"enUS",
},
[18315] = {
"Ethereal Theurgist",
"Auchindoun: Mana-Tombs",
"enUS",
},
[36678] = {
"Professor Putricide",
"Icecrown Citadel",
"enUS",
},
[30661] = {
"Azure Invader",
"Violet Hold",
"enUS",
},
[14327] = {
"Lethtendris",
"Dire Maul",
"enUS",
},
[26631] = {
"Novos the Summoner",
"Drak'Tharon Keep",
"enUS",
},
[45122] = {
"Oathsworn Captain",
"Lost City of the Tol'vir",
"enUS",
},
[27977] = {
"Krystallus",
"Halls of Stone",
"enUS",
},
[26727] = {
"Mage Hunter Ascendant",
"The Nexus",
"enUS",
},
[37126] = {
"Sister Svalna",
"Icecrown Citadel",
"enUS",
},
[45378] = {
"Augh",
"Lost City of the Tol'vir",
"enUS",
},
[10407] = {
"Fleshflayer Ghoul",
"Stratholme",
"enUS",
},
[6206] = {
"Caverndeep Burrower",
"Gnomeregan",
"enUS",
},
[10409] = {
"Rockwing Screecher",
"Stratholme",
"enUS",
},
[6222] = {
"Leprous Technician",
"Gnomeregan",
"enUS",
},
[6230] = {
"Peacekeeper Security Suit",
"Gnomeregan",
"enUS",
},
[47297] = {
"Lumbering Oaf",
"Deadmines",
"enUS",
},
[29062] = {
"Anub'ar Champion",
"Azjol-Nerub",
"enUS",
},
[28838] = {
"Titanium Vanguard",
"Halls of Lightning",
"enUS",
},
[28961] = {
"Titanium Siegebreaker",
"Halls of Lightning",
"enUS",
},
[10489] = {
"Risen Guard",
"Scholomance",
"enUS",
},
[10505] = {
"Instructor Malicia",
"Scholomance",
"enUS",
},
[11462] = {
"Warpwood Treant",
"Dire Maul",
"enUS",
},
[36551] = {
"Spiteful Apparition",
"The Forge of Souls",
"enUS",
},
[42180] = {
"Toxitron",
"Blackwing Descent",
"enUS",
},
[23177] = {
"Tarren Mill Lookout",
"The Escape From Durnholde",
"enUS",
},
[47238] = {
"Whipping Wind",
"The Vortex Pinnacle",
"enUS",
},
[4279] = {
"Odo the Blindwatcher",
"Shadowfang Keep",
"enUS",
},
[4287] = {
"Scarlet Gallant",
"Scarlet Monastery",
"enUS",
},
[4295] = {
"Scarlet Myrmidon",
"Scarlet Monastery",
"enUS",
},
[27431] = {
"Drakkari Commander",
"Drak'Tharon Keep",
"enUS",
},
[19307] = {
"Nexus Terror",
"Auchindoun: Mana-Tombs",
"enUS",
},
[42692] = {
"Stonecore Bruiser",
"The Stonecore",
"enUS",
},
[10697] = {
"Bile Slime",
"Stratholme",
"enUS",
},
[26637] = {
"Risen Drakkari Handler",
"Drak'Tharon Keep",
"enUS",
},
[36811] = {
"Deathspeaker Attendant",
"Icecrown Citadel",
"enUS",
},
[36807] = {
"Deathspeaker Disciple",
"Icecrown Citadel",
"enUS",
},
[27655] = {
"Mage-Lord Urom",
"The Oculus",
"enUS",
},
[29830] = {
"Living Mojo",
"Gundrak",
"enUS",
},
[13160] = {
"Carrion Swarmer",
"Dire Maul",
"enUS",
},
[15111] = {
"Mad Servant",
"Zul'Gurub",
"enUS",
},
[37127] = {
"Ymirjar Frostbinder",
"Icecrown Citadel",
"enUS",
},
[45379] = {
"Augh",
"Lost City of the Tol'vir",
"enUS",
},
[28199] = {
"Tomb Stalker",
"The Culling of Stratholme",
"enUS",
},
[39366] = {
"Sun-Touched Servant",
"Halls of Origination",
"enUS",
},
[28231] = {
"Crystalline Tender",
"The Nexus",
"enUS",
},
[18092] = {
"Tarren Mill Guardsman",
"The Escape From Durnholde",
"enUS",
},
[45699] = {
"Twilight Shadow Mender",
"The Bastion of Twilight",
"enUS",
},
[8890] = {
"Anvilrage Warden",
"Blackrock Depths",
"enUS",
},
[50561] = {
"Bloodthirsty Ghoul",
"Shadowfang Keep",
"enUS",
},
[8922] = {
"Bloodhound Mastiff",
"Blackrock Depths",
"enUS",
},
[39814] = {
"Onyx Flamecaller",
"The Ruby Sanctum",
"enUS",
},
[7358] = {
"Amnennar the Coldbringer",
"Razorfen Downs",
"enUS",
},
[46083] = {
"Drakeadon Mongrel",
"Blackwing Descent",
"enUS",
},
[17964] = {
"Wastewalker Worker",
"Coilfang: The Slave Pens",
"enUS",
},
[30278] = {
"Ahn'kahar Spell Flinger",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[4511] = {
"Agam'ar",
"Razorfen Kraul",
"enUS",
},
[4519] = {
"Death's Head Seer",
"Razorfen Kraul",
"enUS",
},
[48450] = {
"Sunwing Squawker",
"Deadmines",
"enUS",
},
[4535] = {
"Tamed Battleboar",
"Razorfen Kraul",
"enUS",
},
[4543] = {
"Bloodmage Thalnos",
"Scarlet Monastery",
"enUS",
},
[9098] = {
"Scarshield Spellbinder",
"Blackrock Spire",
"enUS",
},
[27960] = {
"Dark Rune Warrior",
"Halls of Stone",
"enUS",
},
[11257] = {
"Scholomance Handler",
"Scholomance",
"enUS",
},
[7334] = {
"Battle Boar Horror",
"Razorfen Downs",
"enUS",
},
[26792] = {
"Crystalline Protector",
"The Nexus",
"enUS",
},
[28583] = {
"Blistering Steamrager",
"Halls of Lightning",
"enUS",
},
[44932] = {
"Oathsworn Pathfinder",
"Lost City of the Tol'vir",
"enUS",
},
[36808] = {
"Deathspeaker Zealot",
"Icecrown Citadel",
"enUS",
},
[26632] = {
"The Prophet Tharon'ja",
"Drak'Tharon Keep",
"enUS",
},
[4623] = {
"Quilguard Champion",
"Razorfen Kraul",
"enUS",
},
[9258] = {
"Scarshield Raider",
"Blackrock Spire",
"enUS",
},
[11321] = {
"Molten Elemental",
"Ragefire Chasm",
"enUS",
},
[45572] = {
"Howling Gale",
"The Vortex Pinnacle",
"enUS",
},
[15447] = {
"Wrath of Air Totem",
"Icecrown Citadel",
"enUS",
},
[26824] = {
"Drakkari Raptor Mount",
"Drak'Tharon Keep",
"enUS",
},
[15479] = {
"Strength of Earth Totem VI",
"Auchindoun: Auchenai Crypts",
"enUS",
},
[18700] = {
"Reanimated Bones",
"Auchindoun: Auchenai Crypts",
"enUS",
},
[4849] = {
"Shadowforge Archaeologist",
"Uldaman",
"enUS",
},
[45700] = {
"Twilight Portal Shaper",
"The Bastion of Twilight",
"enUS",
},
[9178] = {
"Burning Spirit",
"Blackrock Depths",
"enUS",
},
[11465] = {
"Warpwood Stomper",
"Dire Maul",
"enUS",
},
[39751] = {
"Baltharus the Warborn",
"The Ruby Sanctum",
"enUS",
},
[5259] = {
"Atal'ai Witch Doctor",
"Sunken Temple",
"enUS",
},
[7286] = {
"Zul'Farrak Zombie",
"Zul'Farrak",
"enUS",
},
[3640] = {
"Evolving Ectoplasm",
"Wailing Caverns",
"enUS",
},
[3636] = {
"Deviate Ravager",
"Wailing Caverns",
"enUS",
},
[27281] = {
"Ritual Channeler",
"Utgarde Pinnacle",
"enUS",
},
[29340] = {
"Anub'ar Brood Keeper",
"Azjol-Nerub",
"enUS",
},
[23178] = {
"Tarren Mill Lookout",
"The Escape From Durnholde",
"enUS",
},
[48451] = {
"Ol' Beaky",
"Deadmines",
"enUS",
},
[10394] = {
"Black Guard Sentry",
"Stratholme",
"enUS",
},
[4799] = {
"Fallenroot Hellcaller",
"Blackfathom Deeps",
"enUS",
},
[4807] = {
"Blackfathom Myrmidon",
"Blackfathom Deeps",
"enUS",
},
[4815] = {
"Murkshallow Snapclaw",
"Blackfathom Deeps",
"enUS",
},
[4823] = {
"Barbed Crustacean",
"Blackfathom Deeps",
"enUS",
},
[27656] = {
"Ley-Guardian Eregos",
"The Oculus",
"enUS",
},
[4887] = {
"Ghamoo-ra",
"Blackfathom Deeps",
"enUS",
},
[4847] = {
"Shadowforge Relic Hunter",
"Uldaman",
"enUS",
},
[4855] = {
"Stonevault Brawler",
"UNKNOWN",
"enUS",
},
[4863] = {
"Jadespine Basilisk",
"Uldaman",
"enUS",
},
[43014] = {
"Imp",
"The Stonecore",
"enUS",
},
[29735] = {
"Savage Worg",
"Utgarde Keep",
"enUS",
},
[41095] = {
"Twilight Drake",
"Grim Batol",
"enUS",
},
[17517] = {
"Hellfire Sentry",
"Hellfire Citadel: Ramparts",
"enUS",
},
[26763] = {
"Anomalus",
"The Nexus",
"enUS",
},
[29063] = {
"Anub'ar Crypt Fiend",
"Azjol-Nerub",
"enUS",
},
[49539] = {
"James Harrington",
"Deadmines",
"enUS",
},
[26730] = {
"Mage Slayer",
"The Nexus",
"enUS",
},
[38154] = {
"Warhawk",
"Icecrown Citadel",
"enUS",
},
[6910] = {
"Revelosh",
"Uldaman",
"enUS",
},
[27736] = {
"Patchwork Construct",
"The Culling of Stratholme",
"enUS",
},
[36874] = {
"Disturbed Glacial Revenant",
"Pit of Saron",
"enUS",
},
[27961] = {
"Dark Rune Worker",
"Halls of Stone",
"enUS",
},
[7022] = {
"Venomlash Scorpid",
"Uldaman",
"enUS",
},
[7030] = {
"Shadowforge Geologist",
"Uldaman",
"enUS",
},
[26536] = {
"Mindless Servant",
"Utgarde Pinnacle",
"enUS",
},
[28200] = {
"Dark Necromancer",
"The Culling of Stratholme",
"enUS",
},
[40008] = {
"Lucky",
"Blackrock Caverns",
"enUS",
},
[30279] = {
"Deep Crawler",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[26696] = {
"Ymirjar Berserker",
"Utgarde Pinnacle",
"enUS",
},
[7078] = {
"Cleft Scorpid",
"Uldaman",
"enUS",
},
[18093] = {
"Tarren Mill Protector",
"The Escape From Durnholde",
"enUS",
},
[12217] = {
"Corruptor",
"Maraudon",
"enUS",
},
[5055] = {
"Deviate Lasher",
"Wailing Caverns",
"enUS",
},
[12201] = {
"Princess Theradras",
"Maraudon",
"enUS",
},
[3560] = {
"Healing Ward",
"Uldaman",
"enUS",
},
[40584] = {
"Naz'jar Invader",
"Throne of the Tides",
"enUS",
},
[42695] = {
"Stonecore Sentry",
"The Stonecore",
"enUS",
},
[18317] = {
"Ethereal Priest",
"Auchindoun: Mana-Tombs",
"enUS",
},
[28584] = {
"Unbound Firestorm",
"Halls of Lightning",
"enUS",
},
[10470] = {
"Scholomance Neophyte",
"Scholomance",
"enUS",
},
[30695] = {
"Portal Keeper",
"Violet Hold",
"enUS",
},
[45062] = {
"Oathsworn Scorpid Keeper",
"Lost City of the Tol'vir",
"enUS",
},
[11520] = {
"Taragaman the Hungerer",
"Ragefire Chasm",
"enUS",
},
[41096] = {
"Naz'jar Spiritmender",
"Throne of the Tides",
"enUS",
},
[26729] = {
"Steward",
"The Nexus",
"enUS",
},
[7206] = {
"Ancient Stone Keeper",
"Uldaman",
"enUS",
},
[26793] = {
"Crystalline Frayer",
"The Nexus",
"enUS",
},
[4303] = {
"Scarlet Abbot",
"Scarlet Monastery",
"enUS",
},
[39369] = {
"Sun-Touched Sprite",
"Halls of Origination",
"enUS",
},
[18501] = {
"Unliving Stalker",
"Auchindoun: Auchenai Crypts",
"enUS",
},
[7246] = {
"Sandfury Shadowhunter",
"Zul'Farrak",
"enUS",
},
[205958] = {
"Zombie Horror",
"The Culling of Stratholme",
"enUS",
},
[39625] = {
"General Umbriss",
"Grim Batol",
"enUS",
},
[29064] = {
"Anub'ar Necromancer",
"Azjol-Nerub",
"enUS",
},
[29096] = {
"Anub'ar Champion",
"Azjol-Nerub",
"enUS",
},
[29128] = {
"Anub'ar Prime Guard",
"Azjol-Nerub",
"enUS",
},
[24201] = {
"Dalronn the Controller",
"Utgarde Keep",
"enUS",
},
[10506] = {
"Kirtonos the Herald",
"Scholomance",
"enUS",
},
[26728] = {
"Mage Hunter Initiate",
"The Nexus",
"enUS",
},
[5271] = {
"Atal'ai Deathwalker",
"Sunken Temple",
"enUS",
},
[11353] = {
"Gurubashi Blood Drinker",
"Zul'Gurub",
"enUS",
},
[23179] = {
"Tarren Mill Protector",
"The Escape From Durnholde",
"enUS",
},
[7342] = {
"Skeletal Summoner",
"Razorfen Downs",
"enUS",
},
[28582] = {
"Stormforged Mender",
"Halls of Lightning",
"enUS",
},
[3680] = {
"Serpentbloom Snake",
"Wailing Caverns",
"enUS",
},
[38410] = {
"Severed Essence",
"Icecrown Citadel",
"enUS",
},
[9034] = {
"Hate'rel",
"Blackrock Depths",
"enUS",
},
[9018] = {
"High Interrogator Gerstahn",
"Blackrock Depths",
"enUS",
},
[42696] = {
"Stonecore Warbringer",
"The Stonecore",
"enUS",
},
[36619] = {
"Bone Spike",
"Icecrown Citadel",
"enUS",
},
[27975] = {
"Maiden of Grief",
"Halls of Stone",
"enUS",
},
[28167] = {
"Stratholme Citizen",
"The Culling of Stratholme",
"enUS",
},
[44999] = {
"Shen'dralar Watcher",
"Dire Maul",
"enUS",
},
[45063] = {
"Bonesnapper Scorpid",
"Lost City of the Tol'vir",
"enUS",
},
[36939] = {
"High Overlord Saurfang",
"Icecrown Citadel",
"enUS",
},
[29768] = {
"Unyielding Constrictor",
"Gundrak",
"enUS",
},
[27753] = {
"Drakkari Invader",
"Drak'Tharon Keep",
"enUS",
},
[29832] = {
"Drakkari Golem",
"Gundrak",
"enUS",
},
[26861] = {
"King Ymiron",
"Utgarde Pinnacle",
"enUS",
},
[49541] = {
"Vanessa VanCleef",
"Deadmines",
"enUS",
},
[39370] = {
"Sun-Touched Spriteling",
"Halls of Origination",
"enUS",
},
[33293] = {
"XT-002 Deconstructor",
"Ulduar",
"enUS",
},
[28837] = {
"Stormforged Sentinel",
"Halls of Lightning",
"enUS",
},
[45703] = {
"Faceless Minion",
"The Bastion of Twilight",
"enUS",
},
[39626] = {
"Crimsonborne Warlord",
"Grim Batol",
"enUS",
},
[42691] = {
"Stonecore Rift Conjurer",
"The Stonecore",
"enUS",
},
[8923] = {
"Panzor the Invincible",
"Blackrock Depths",
"enUS",
},
[18096] = {
"Epoch Hunter",
"The Escape From Durnholde",
"enUS",
},
[18499] = {
"Unliving Sorcerer",
"Auchindoun: Auchenai Crypts",
"enUS",
},
[28169] = {
"Stratholme Resident",
"The Culling of Stratholme",
"enUS",
},
[28201] = {
"Bile Golem",
"The Culling of Stratholme",
"enUS",
},
[48262] = {
"Ogre Bodyguard",
"Deadmines",
"enUS",
},
[9019] = {
"Emperor Dagran Thaurissan",
"Blackrock Depths",
"enUS",
},
[9035] = {
"Anger'rel",
"Blackrock Depths",
"enUS",
},
[18094] = {
"Tarren Mill Lookout",
"The Escape From Durnholde",
"enUS",
},
[7606] = {
"Oro Eyegouge",
"Zul'Farrak",
"enUS",
},
[37125] = {
"Captain Rupert",
"Icecrown Citadel",
"enUS",
},
[17729] = {
"Murkblood Spearman",
"Coilfang: The Underbog",
"enUS",
},
[11784] = {
"Theradrim Guardian",
"Maraudon",
"enUS",
},
[40586] = {
"Lady Naz'jar",
"Throne of the Tides",
"enUS",
},
[11448] = {
"Gordok Warlock",
"Dire Maul",
"enUS",
},
[36620] = {
"Soulguard Adept",
"The Forge of Souls",
"enUS",
},
[28585] = {
"Slag",
"Halls of Lightning",
"enUS",
},
[30664] = {
"Azure Mage Slayer",
"Violet Hold",
"enUS",
},
[3840] = {
"Druid of the Fang",
"Wailing Caverns",
"enUS",
},
[13321] = {
"Frog",
"Coilfang: The Slave Pens",
"enUS",
},
[36940] = {
"Raging Ghoul",
"Halls of Reflection",
"enUS",
},
[9259] = {
"Firebrand Grunt",
"Blackrock Spire",
"enUS",
},
[37068] = {
"Terabass",
"Halls of Reflection",
"enUS",
},
[37132] = {
"Ymirjar Battle-Maiden",
"Icecrown Citadel",
"enUS",
},
[26794] = {
"Ormorok the Tree-Shaper",
"The Nexus",
"enUS",
},
[3868] = {
"Blood Seeker",
"Shadowfang Keep",
"enUS",
},
[3872] = {
"Deathsworn Captain",
"Shadowfang Keep",
"enUS",
},
[18702] = {
"Auchenai Necromancer",
"Auchindoun: Auchenai Crypts",
"enUS",
},
[5711] = {
"Ogom the Wretched",
"Sunken Temple",
"enUS",
},
[45704] = {
"Lurking Tempest",
"The Vortex Pinnacle",
"enUS",
},
[11450] = {
"Gordok Reaver",
"Dire Maul",
"enUS",
},
[11466] = {
"Highborne Summoner",
"Dire Maul",
"enUS",
},
[29097] = {
"Anub'ar Crypt Fiend",
"Azjol-Nerub",
"enUS",
},
[18894] = {
"Felguard Brute",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[8889] = {
"Anvilrage Overseer",
"Kalimdor",
"enUS",
},
[17770] = {
"Hungarfen",
"Coilfang: The Underbog",
"enUS",
},
[40011] = {
"Spot",
"Blackrock Caverns",
"enUS",
},
[38028] = {
"Web Wrap",
"Icecrown Citadel",
"enUS",
},
[37023] = {
"Plague Scientist",
"Icecrown Citadel",
"enUS",
},
[29321] = {
"Ichor Globule",
"Violet Hold",
"enUS",
},
[28730] = {
"Watcher Gashra",
"Azjol-Nerub",
"enUS",
},
[30666] = {
"Azure Captain",
"Violet Hold",
"enUS",
},
[27734] = {
"Crypt Fiend",
"The Culling of Stratholme",
"enUS",
},
[37035] = {
"Kor'kron Vanquisher",
"Icecrown Citadel",
"enUS",
},
[7341] = {
"Skeletal Frostweaver",
"Razorfen Downs",
"enUS",
},
[23175] = {
"Tarren Mill Guardsman",
"The Escape From Durnholde",
"enUS",
},
[10488] = {
"Risen Construct",
"Scholomance",
"enUS",
},
[49532] = {
"Enraged Worgen",
"Deadmines",
"enUS",
},
[28580] = {
"Hardened Steel Skycaller",
"Halls of Lightning",
"enUS",
},
[10120] = {
"Vault Warder",
"Uldaman",
"enUS",
},
[45001] = {
"Enslaved Bandit",
"Lost City of the Tol'vir",
"enUS",
},
[45065] = {
"Tol'vir Merchant",
"Lost City of the Tol'vir",
"enUS",
},
[3976] = {
"Scarlet Commander Mograine",
"Scarlet Monastery",
"enUS",
},
[3855] = {
"Shadowfang Darksoul",
"Shadowfang Keep",
"enUS",
},
[37069] = {
"Lumbering Abomination",
"Halls of Reflection",
"enUS",
},
[37133] = {
"Ymirjar Warlord",
"Icecrown Citadel",
"enUS",
},
[4958] = {
"Haunting Spirit",
"Shadowfang Keep",
"enUS",
},
[29982] = {
"Drakkari Raider",
"Gundrak",
"enUS",
},
[10399] = {
"Thuzadin Acolyte",
"Stratholme",
"enUS",
},
[4301] = {
"Scarlet Centurion",
"Scarlet Monastery",
"enUS",
},
[33264] = {
"Ironwork Cannon",
"Ulduar",
"enUS",
},
[43658] = {
"Frenzied Crocolisk",
"Lost City of the Tol'vir",
"enUS",
},
[28921] = {
"Hadronox",
"Azjol-Nerub",
"enUS",
},
[4814] = {
"Twilight Elementalist",
"Blackfathom Deeps",
"enUS",
},
[9736] = {
"Quartermaster Zigris",
"Blackrock Spire",
"enUS",
},
[17871] = {
"Underbog Shambler",
"Coilfang: The Underbog",
"enUS",
},
[598] = {
"Defias Miner",
"Deadmines",
"enUS",
},
[24076] = {
"ZdoniuLove",
"Icecrown Citadel",
"enUS",
},
[21127] = {
"Coilfang Tempest",
"Coilfang: The Slave Pens",
"enUS",
},
[29932] = {
"Eck the Ferocious",
"Gundrak",
"enUS",
},
[44234] = {
"Vicious Leech",
"Lost City of the Tol'vir",
"enUS",
},
[37228] = {
"Frostwarden Warrior",
"Icecrown Citadel",
"enUS",
},
[40268] = {
"Twilight War-Mage",
"Grim Batol",
"enUS",
},
[9416] = {
"Scarshield Worg",
"Blackrock Spire",
"enUS",
},
[7290] = {
"Shadowforge Sharpshooter",
"Uldaman",
"enUS",
},
[9436] = {
"Spawn of Bael'Gar",
"Blackrock Depths",
"enUS",
},
[28835] = {
"Stormforged Construct",
"Halls of Lightning",
"enUS",
},
[36494] = {
"Forgemaster Garfrost",
"Pit of Saron",
"enUS",
},
[12218] = {
"Vile Larva",
"Maraudon",
"enUS",
},
[18319] = {
"Time-Lost Scryer",
"Auchindoun: Sethekk Halls",
"enUS",
},
[28586] = {
"General Bjarngrim",
"Halls of Lightning",
"enUS",
},
[48442] = {
"Mining Monkey",
"Deadmines",
"enUS",
},
[30178] = {
"Ahn'kahar Swarmer ",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[26635] = {
"Risen Drakkari Warrior",
"Drak'Tharon Keep",
"enUS",
},
[18558] = {
"Phasing Sorcerer",
"Auchindoun: Auchenai Crypts",
"enUS",
},
[7343] = {
"Splinterbone Skeleton",
"Razorfen Downs",
"enUS",
},
[26731] = {
"Grand Magus Telestra",
"The Nexus",
"enUS",
},
[49416] = {
"Blazing Bone Construct",
"Blackwing Descent",
"enUS",
},
[11477] = {
"Rotting Highborne",
"Dire Maul",
"enUS",
},
[9198] = {
"Spirestone Mystic",
"Blackrock Spire",
"enUS",
},
[39373] = {
"Sun-Touched Speaker",
"Halls of Origination",
"enUS",
},
[4286] = {
"Scarlet Soldier",
"Scarlet Monastery",
"enUS",
},
[6223] = {
"Leprous Defender",
"Gnomeregan",
"enUS",
},
[24079] = {
"Dragonflayer Forge Master",
"Utgarde Keep",
"enUS",
},
[49864] = {
"Twilight Fiend",
"The Bastion of Twilight",
"enUS",
},
[31009] = {
"Azure Spellbreaker",
"Violet Hold",
"enUS",
},
[29098] = {
"Anub'ar Necromancer",
"Azjol-Nerub",
"enUS",
},
[10475] = {
"Scholomance Student",
"Scholomance",
"enUS",
},
[10491] = {
"Risen Bonewarder",
"Scholomance",
"enUS",
},
[10507] = {
"The Ravenian",
"Scholomance",
"enUS",
},
[40013] = {
"Buster",
"Blackrock Caverns",
"enUS",
},
[28578] = {
"Hardened Steel Reaver",
"Halls of Lightning",
"enUS",
},
[42188] = {
"Ozruk",
"The Stonecore",
"enUS",
},
[28734] = {
"Anub'ar Skirmisher",
"Azjol-Nerub",
"enUS",
},
[40269] = {
"Enslaved Thunder Spirit",
"Grim Batol",
"enUS",
},
[48521] = {
"Defias Squallshaper",
"Deadmines",
"enUS",
},
[4288] = {
"Scarlet Beastmaster",
"Scarlet Monastery",
"enUS",
},
[4296] = {
"Scarlet Adept",
"Scarlet Monastery",
"enUS",
},
[4304] = {
"Scarlet Tracking Hound",
"Scarlet Monastery",
"enUS",
},
[27228] = {
"Jormungar Worm",
"Utgarde Pinnacle",
"enUS",
},
[17264] = {
"Bonechewer Ravener",
"Hellfire Citadel: Ramparts",
"enUS",
},
[42764] = {
"Pyrecraw",
"Blackwing Descent",
"enUS",
},
[28920] = {
"Stormforged Giant",
"Halls of Lightning",
"enUS",
},
[9263] = {
"Firebrand Dreadweaver",
"Blackrock Spire",
"enUS",
},
[14509] = {
"High Priest Thekal",
"Zul'Gurub",
"enUS",
},
[36879] = {
"Plagueborn Horror",
"Pit of Saron",
"enUS",
},
[3947] = {
"Goblin Shipbuilder",
"Deadmines",
"enUS",
},
[37007] = {
"Deathbound Ward",
"Icecrown Citadel",
"enUS",
},
[45259] = {
"Servant of Siamat",
"Lost City of the Tol'vir",
"enUS",
},
[29834] = {
"Drakkari Frenzy",
"Gundrak",
"enUS",
},
[39803] = {
"Air Warden",
"Halls of Origination",
"enUS",
},
[35325] = {
"Thunder Bluff Champion",
"Trial of the Champion",
"enUS",
},
[4416] = {
"Defias Strip Miner",
"Deadmines",
"enUS",
},
[4424] = {
"Aggem Thorncurse",
"Razorfen Kraul",
"enUS",
},
[27947] = {
"Horde Commander",
"The Nexus",
"enUS",
},
[4440] = {
"Razorfen Totemic",
"Razorfen Kraul",
"enUS",
},
[8892] = {
"Anvilrage Footman",
"Blackrock Depths",
"enUS",
},
[8908] = {
"Molten War Golem",
"Blackrock Depths",
"enUS",
},
[37711] = {
"Hungering Ghoul",
"Pit of Saron",
"enUS",
},
[39994] = {
"Conflagration",
"Blackrock Caverns",
"enUS",
},
[39802] = {
"Water Warden",
"Halls of Origination",
"enUS",
},
[6487] = {
"Arcanist Doan",
"Scarlet Monastery",
"enUS",
},
[45687] = {
"Twilight-Shifter",
"The Bastion of Twilight",
"enUS",
},
[48266] = {
"Defias Cannon",
"Deadmines",
"enUS",
},
[4512] = {
"Rotting Agam'ar",
"Razorfen Kraul",
"enUS",
},
[9036] = {
"Vile'rel",
"Blackrock Depths",
"enUS",
},
[40270] = {
"Twilight Thundercaller",
"Grim Batol",
"enUS",
},
[48522] = {
"Defias Pirate",
"Deadmines",
"enUS",
},
[27649] = {
"Phantasmal Murloc",
"The Oculus",
"enUS",
},
[7332] = {
"Withered Spearhide",
"Razorfen Downs",
"enUS",
},
[29120] = {
"Anub'arak",
"Azjol-Nerub",
"enUS",
},
[52019] = {
"Skyfall Star",
"The Vortex Pinnacle",
"enUS",
},
[7268] = {
"Sandfury Guardian",
"Zul'Farrak",
"enUS",
},
[48906] = {
"Blaze of the Heavens",
"Lost City of the Tol'vir",
"enUS",
},
[28587] = {
"Volkhan",
"Halls of Lightning",
"enUS",
},
[28619] = {
"Web Wrap",
"Azjol-Nerub",
"enUS",
},
[35323] = {
"Sen'jin Champion",
"Trial of the Champion",
"enUS",
},
[26636] = {
"Risen Drakkari Soulmage",
"Drak'Tharon Keep",
"enUS",
},
[26668] = {
"Svala Sorrowgrave",
"Utgarde Pinnacle",
"enUS",
},
[9260] = {
"Firebrand Legionnaire",
"Blackrock Spire",
"enUS",
},
[11323] = {
"Searing Blade Enforcer",
"Ragefire Chasm",
"enUS",
},
[11339] = {
"Hakkari Shadow Hunter",
"Zul'Gurub",
"enUS",
},
[21891] = {
"Avian Ripper",
"Auchindoun: Sethekk Halls",
"enUS",
},
[11371] = {
"Razzashi Serpent",
"Zul'Gurub",
"enUS",
},
[11387] = {
"Sandfury Speaker",
"Zul'Gurub",
"enUS",
},
[49674] = {
"Helix Gearbreaker",
"Deadmines",
"enUS",
},
[9701] = {
"Spire Scorpid",
"Blackrock Spire",
"enUS",
},
[49267] = {
"Crystal Shard",
"The Stonecore",
"enUS",
},
[11451] = {
"Wildspawn Satyr",
"Dire Maul",
"enUS",
},
[17477] = {
"Hellfire Imp",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[41806] = {
"Lava Parasite",
"Blackwing Descent",
"enUS",
},
[43917] = {
"Rock Borer",
"The Stonecore",
"enUS",
},
[8336] = {
"Hakkari Sapper",
"Sunken Temple",
"enUS",
},
[44045] = {
"Darkened Creation",
"The Bastion of Twilight",
"enUS",
},
[40015] = {
"Runty",
"Blackrock Caverns",
"enUS",
},
[9218] = {
"Spirestone Battle Lord",
"Blackrock Spire",
"enUS",
},
[2385] = {
"Foothill Stalker",
"The Escape From Durnholde",
"enUS",
},
[10876] = {
"Undead Scarab",
"Stratholme",
"enUS",
},
[17728] = {
"Murkblood Tribesman",
"Coilfang: The Underbog",
"enUS",
},
[49138] = {
"Helix' Crew",
"Deadmines",
"enUS",
},
[8912] = {
"Twilight's Hammer Torturer",
"Blackrock Depths",
"enUS",
},
[37970] = {
"Prince Valanar",
"Icecrown Citadel",
"enUS",
},
[10398] = {
"Thuzadin Shadowcaster",
"Stratholme",
"enUS",
},
[36497] = {
"Bronjahm",
"The Forge of Souls",
"enUS",
},
[4832] = {
"Twilight Lord Kelris",
"Blackfathom Deeps",
"enUS",
},
[178449] = {
"MbL",
"Icecrown Citadel",
"enUS",
},
[9692] = {
"Bloodaxe Raider",
"Blackrock Spire",
"enUS",
},
[18321] = {
"Sethekk Talon Lord",
"Auchindoun: Sethekk Halls",
"enUS",
},
[9262] = {
"Firebrand Invoker",
"Blackrock Spire",
"enUS",
},
[36881] = {
"Skeletal Slave",
"Pit of Saron",
"enUS",
},
[17732] = {
"Lykul Wasp",
"Coilfang: The Underbog",
"enUS",
},
[39414] = {
"Ascended Windwalker",
"Grim Batol",
"enUS",
},
[45261] = {
"Twilight Shadow Knight",
"The Bastion of Twilight",
"enUS",
},
[17380] = {
"Broggok",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[19632] = {
"Lykul Stinger",
"Coilfang: The Underbog",
"enUS",
},
[40306] = {
"Twilight Armsmaster",
"Grim Batol",
"enUS",
},
[29931] = {
"Drakkari Rhino",
"Gundrak",
"enUS",
},
[17400] = {
"Felguard Annihilator",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[8317] = {
"Atal'ai Deathwalker's Spirit",
"Sunken Temple",
"enUS",
},
[43662] = {
"Unbound Earth Rager",
"The Stonecore",
"enUS",
},
[2354] = {
"Vicious Gray Bear",
"The Escape From Durnholde",
"enUS",
},
[18497] = {
"Auchenai Monk",
"Auchindoun: Auchenai Crypts",
"enUS",
},
[37713] = {
"Deathwhisper Torturer",
"Pit of Saron",
"enUS",
},
[10469] = {
"Scholomance Adept",
"Scholomance",
"enUS",
},
[9268] = {
"Smolderthorn Berserker",
"Blackrock Spire",
"enUS",
},
[26125] = {
"Rompefango",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[39378] = {
"Rajh",
"Halls of Origination",
"enUS",
},
[30283] = {
"Plague Walker",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[10413] = {
"Crypt Beast",
"Stratholme",
"enUS",
},
[7079] = {
"Viscous Fallout",
"Gnomeregan",
"enUS",
},
[40272] = {
"Ascended Rockbreaker",
"Grim Batol",
"enUS",
},
[5048] = {
"Deviate Adder",
"Wailing Caverns",
"enUS",
},
[20208] = {
"Mennu's Healing Ward",
"Coilfang: The Slave Pens",
"enUS",
},
[3869] = {
"Lesser Gargoyle",
"Shadowfang Keep",
"enUS",
},
[14369] = {
"Shen'dralar Zealot",
"Dire Maul",
"enUS",
},
[12203] = {
"Landslide",
"Maraudon",
"enUS",
},
[48844] = {
"Faceless Corruptor",
"Grim Batol",
"enUS",
},
[42767] = {
"Ivoroc",
"Blackwing Descent",
"enUS",
},
[41040] = {
"Twisted Visage",
"Grim Batol",
"enUS",
},
[10220] = {
"Halycon",
"Blackrock Spire",
"enUS",
},
[36829] = {
"Deathspeaker High Priest",
"Icecrown Citadel",
"enUS",
},
[7175] = {
"Stonevault Ambusher",
"Uldaman",
"enUS",
},
[10268] = {
"Gizrul the Slavener",
"Blackrock Spire",
"enUS",
},
[41139] = {
"Naz'jar Spiritmender",
"Throne of the Tides",
"enUS",
},
[40167] = {
"Twilight Beguiler",
"Grim Batol",
"enUS",
},
[11471] = {
"Eldreth Apparition",
"Dire Maul",
"enUS",
},
[42973] = {
"Eye of Naxxramas",
"Stratholme",
"enUS",
},
[44977] = {
"Neferset Torturer",
"Lost City of the Tol'vir",
"enUS",
},
[33236] = {
"Steelforged Defender",
"Ulduar",
"enUS",
},
[44704] = {
"Minion of Siamat",
"Lost City of the Tol'vir",
"enUS",
},
[49740] = {
"Obnoxious Fiend",
"Blackwing Descent",
"enUS",
},
[10412] = {
"Crypt Crawler",
"Stratholme",
"enUS",
},
[17727] = {
"Wrathfin Sentry",
"Coilfang: The Underbog",
"enUS",
},
[7271] = {
"Witch Doctor Zum'rah",
"Zul'Farrak",
"enUS",
},
[205997] = {
"Mirror Image",
"The Oculus",
"enUS",
},
[10476] = {
"Scholomance Necrolyte",
"Scholomance",
"enUS",
},
[45467] = {
"Trogg Dweller",
"Grim Batol",
"enUS",
},
[48141] = {
"Temple Shadowlancer",
"Halls of Origination",
"enUS",
},
[8477] = {
"Skeletal Servant",
"Razorfen Downs",
"enUS",
},
[26782] = {
"Crystalline Keeper",
"The Nexus",
"enUS",
},
[7327] = {
"Withered Warrior",
"Razorfen Downs",
"enUS",
},
[7335] = {
"Death's Head Geomancer",
"Razorfen Downs",
"enUS",
},
[40273] = {
"Ascended Waterlasher",
"Grim Batol",
"enUS",
},
[7351] = {
"Tomb Reaver",
"Razorfen Downs",
"enUS",
},
[40936] = {
"Faceless Watcher",
"Throne of the Tides",
"enUS",
},
[17815] = {
"Lordaeron Sentry",
"The Escape From Durnholde",
"enUS",
},
[39720] = {
"Astral Rain",
"Halls of Origination",
"enUS",
},
[36499] = {
"Soulguard Reaper",
"The Forge of Souls",
"enUS",
},
[35570] = {
"Zul'tore",
"Trial of the Champion",
"enUS",
},
[42768] = {
"Maimgor",
"Blackwing Descent",
"enUS",
},
[205999] = {
"Mirror Image",
"The Oculus",
"enUS",
},
[27597] = {
"Hulking Corpse",
"Drak'Tharon Keep",
"enUS",
},
[45007] = {
"Enslaved Bandit",
"Lost City of the Tol'vir",
"enUS",
},
[27965] = {
"Dark Rune Shaper",
"Halls of Stone",
"enUS",
},
[49229] = {
"Molten Slag",
"Deadmines",
"enUS",
},
[37011] = {
"The Damned",
"Icecrown Citadel",
"enUS",
},
[45924] = {
"Turbulent Squall",
"The Vortex Pinnacle",
"enUS",
},
[29836] = {
"Drakkari Battle Rider",
"Gundrak",
"enUS",
},
[47086] = {
"Crimsonborne Firestarter",
"The Bastion of Twilight",
"enUS",
},
[36723] = {
"Frostsworn General",
"Halls of Reflection",
"enUS",
},
[33237] = {
"Ulduar Colossus",
"Ulduar",
"enUS",
},
[43875] = {
"Asaad",
"The Vortex Pinnacle",
"enUS",
},
[10596] = {
"Mother Smolderweb",
"Blackrock Spire",
"enUS",
},
[27981] = {
"Malformed Ooze",
"Halls of Stone",
"enUS",
},
[8893] = {
"Anvilrage Soldier",
"Blackrock Depths",
"enUS",
},
[21904] = {
"Avian Warhawk",
"Auchindoun: Sethekk Halls",
"enUS",
},
[8925] = {
"Dredge Worm",
"Blackrock Depths",
"enUS",
},
[23965] = {
"Frost Tomb",
"Utgarde Keep",
"enUS",
},
[39890] = {
"Twilight Earthshaper",
"Grim Batol",
"enUS",
},
[39954] = {
"Twilight Shadow Weaver",
"Grim Batol",
"enUS",
},
[40290] = {
"Crimsonborne Seer",
"Grim Batol",
"enUS",
},
[30284] = {
"Bonegrinder",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[17397] = {
"Shadowmoon Adept",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[9037] = {
"Gloom'rel",
"Blackrock Depths",
"enUS",
},
[42321] = {
"Lava Parasite",
"Blackwing Descent",
"enUS",
},
[39960] = {
"Deep Murloc Drudge",
"Throne of the Tides",
"enUS",
},
[636] = {
"Defias Blackguard",
"Deadmines",
"enUS",
},
[40923] = {
"Unstable Corruption",
"Throne of the Tides",
"enUS",
},
[44715] = {
"Vicious Mindlasher",
"Throne of the Tides",
"enUS",
},
[35617] = {
"Deathstalker Visceri",
"Trial of the Champion",
"enUS",
},
[36564] = {
"Soulguard Bonecaster",
"The Forge of Souls",
"enUS",
},
[18322] = {
"Sethekk Ravenguard",
"Auchindoun: Sethekk Halls",
"enUS",
},
[44898] = {
"Pygmy Firebreather",
"Lost City of the Tol'vir",
"enUS",
},
[42897] = {
"Poison Bomb",
"Blackwing Descent",
"enUS",
},
[20465] = {
"Underbog Frenzy",
"Coilfang: The Underbog",
"enUS",
},
[26638] = {
"Risen Drakkari Bat Rider",
"Drak'Tharon Keep",
"enUS",
},
[26670] = {
"Ymirjar Flesh Hunter",
"Utgarde Pinnacle",
"enUS",
},
[9261] = {
"Firebrand Darkweaver",
"Blackrock Spire",
"enUS",
},
[45264] = {
"Twilight Crossfire",
"The Bastion of Twilight",
"enUS",
},
[40943] = {
"Gilgoblin Aquamage",
"Throne of the Tides",
"enUS",
},
[11356] = {
"Gurubashi Champion",
"Zul'Gurub",
"enUS",
},
[11372] = {
"Razzashi Adder",
"Zul'Gurub",
"enUS",
},
[36842] = {
"Wrathbone Coldwraith",
"Pit of Saron",
"enUS",
},
[43537] = {
"Stonecore Earthshaper",
"The Stonecore",
"enUS",
},
[40166] = {
"Enslaved Gronn Brute",
"Grim Batol",
"enUS",
},
[5720] = {
"Weaver",
"Sunken Temple",
"enUS",
},
[11452] = {
"Wildspawn Rogue",
"Dire Maul",
"enUS",
},
[622] = {
"Goblin Engineer",
"Deadmines",
"enUS",
},
[11484] = {
"Residual Monstrosity",
"Dire Maul",
"enUS",
},
[39405] = {
"Crimsonborne Seer",
"Grim Batol",
"enUS",
},
[30416] = {
"Bound Fire Elemental",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[48143] = {
"Temple Fireshaper",
"Halls of Origination",
"enUS",
},
[37972] = {
"Prince Keleseth",
"Icecrown Citadel",
"enUS",
},
[45266] = {
"Twilight Dark Mender",
"The Bastion of Twilight",
"enUS",
},
[46951] = {
"Chosen Warrior",
"The Bastion of Twilight",
"enUS",
},
[47017] = {
"Fire Elemental",
"The Bastion of Twilight",
"enUS",
},
[47081] = {
"Elemental Firelord",
"The Bastion of Twilight",
"enUS",
},
[45992] = {
"Valiona",
"The Bastion of Twilight",
"enUS",
},
[4436] = {
"Razorfen Quilguard",
"Razorfen Kraul",
"enUS",
},
[4428] = {
"Death Speaker Jargba",
"Razorfen Kraul",
"enUS",
},
[42333] = {
"High Priestess Azil",
"The Stonecore",
"enUS",
},
[47143] = {
"Spitebone Skeleton",
"Shadowfang Keep",
"enUS",
},
[23953] = {
"Prince Keleseth",
"Utgarde Keep",
"enUS",
},
[43622] = {
"Corrupting Adherent",
"The Bastion of Twilight",
"enUS",
},
[9693] = {
"Bloodaxe Evoker",
"Blackrock Spire",
"enUS",
},
[27598] = {
"Fetid Troll Corpse",
"Drak'Tharon Keep",
"enUS",
},
[17395] = {
"Shadowmoon Summoner",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[43689] = {
"Terrastra",
"The Bastion of Twilight",
"enUS",
},
[50834] = {
"Rethilgore",
"Shadowfang Keep",
"enUS",
},
[17491] = {
"Laughing Skull Rogue",
"Hellfire Citadel: The Blood Furnace",
"enUS",
},
[45265] = {
"Twilight Soul Blade",
"The Bastion of Twilight",
"enUS",
},
[37663] = {
"Darkfallen Noble",
"Icecrown Citadel",
"enUS",
},
[6211] = {
"Caverndeep Reaver",
"Gnomeregan",
"enUS",
},
[3974] = {
"Houndmaster Loksey",
"Scarlet Monastery",
"enUS",
},
[43430] = {
"Stonecore Berserker",
"The Stonecore",
"enUS",
},
[39444] = {
"Pit Viper",
"Halls of Origination",
"enUS",
},
[49826] = {
"Bound Rumbler",
"The Bastion of Twilight",
"enUS",
},
[27982] = {
"Forged Iron Dwarf",
"Halls of Stone",
"enUS",
},
[4523] = {
"Razorfen Groundshaker",
"Razorfen Kraul",
"enUS",
},
[39700] = {
"Beauty",
"Blackrock Caverns",
"enUS",
},
[13601] = {
"Tinkerer Gizlock",
"Maraudon",
"enUS",
},
[4538] = {
"Kraul Bat",
"Razorfen Kraul",
"enUS",
},
[6016] = {
"Elemental Protection Totem",
"Razorfen Kraul",
"enUS",
},
[39956] = {
"Twilight Enforcer",
"Grim Batol",
"enUS",
},
[37973] = {
"Prince Taldaram",
"Icecrown Citadel",
"enUS",
},
[30285] = {
"Eye of Taldaram",
"Ahn'kahet: The Old Kingdom",
"enUS",
},
[8095] = {
"Sul'lithuz Sandcrawler",
"Zul'Farrak",
"enUS",
},
[4425] = {
"Blind Hunter",
"Razorfen Kraul",
"enUS",
},
[11790] = {
"Putridus Satyr",
"Maraudon",
"enUS",
},
[11792] = {
"Putridus Shadowstalker",
"Maraudon",
"enUS",
},
[8127] = {
"Antu'sul",
"Zul'Farrak",
"enUS",
},
[12236] = {
"Lord Vyletongue",
"Maraudon",
"enUS",
},
[23961] = {
"Dragonflayer Ironhelm",
"Utgarde Keep",
"enUS",
},
[36502] = {
"Devourer of Souls",
"The Forge of Souls",
"enUS",
},
[6112] = {
"Windfury Totem",
"Auchindoun: Auchenai Crypts",
"enUS",
},
[47132] = {
"Dark Creeper",
"Shadowfang Keep",
"enUS",
},
},
["health_selection_overlay_alpha"] = 0.09999999403953552,
["cast_statusbar_fadeout_time"] = 0.4999999701976776,
["script_data_trash"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1625793282,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1154,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["NpcNames"] = {
},
["Name"] = "Cast - Alert + Timer [P]",
["SpellIds"] = {
350421,
355787,
348513,
},
["PlaterCore"] = 1,
["version"] = -1,
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.4313725490196079,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Key"] = "flashDuration",
["Value"] = 0.4,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Key"] = "castBarHeight",
["Value"] = 5,
["Fraction"] = false,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Key"] = "shakeDuration",
["Value"] = 0.2,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Key"] = "shakeAmplitude",
["Value"] = 8,
["Name"] = "Shake Amplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Key"] = "shakeFrequency",
["Value"] = 40,
["Name"] = "Shake Frequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 7,
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Value"] = {
{
"350421",
"5",
},
{
"355787",
"15",
},
{
"348513",
"14",
},
{
"348513",
"14",
},
},
["Key"] = "timerList",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["__TrashAt"] = 1708800999,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604354364,
["url"] = "",
["NpcNames"] = {
"164427",
"164414",
"164185",
"164567",
"165408",
},
["Enabled"] = true,
["Revision"] = 206,
["Options"] = {
},
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["SpellIds"] = {
},
["version"] = -1,
["Name"] = "Countdown",
["PlaterCore"] = 1,
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["semver"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["__TrashAt"] = 1746237856,
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604087921,
["url"] = "",
["NpcNames"] = {
},
["Enabled"] = true,
["Revision"] = 266,
["Options"] = {
},
["Author"] = "Tecno-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["version"] = -1,
["Name"] = "Fixate On You [Plater]",
["PlaterCore"] = 1,
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["semver"] = "",
["Icon"] = 841383,
["__TrashAt"] = 1746237856,
},
},
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
},
["script_auto_imported"] = {
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Cast - Circular Swipe"] = 4,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 2,
["Cast - Small Alert"] = 12,
["Add - Important [P]"] = 4,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Cast - Glowing [P]"] = 10,
["Cast - Important Target [P]"] = 2,
["Cast - Shield Interrupt"] = 2,
["Cast - Alert + Timer [P]"] = 4,
["Aura is Shield [P]"] = 2,
["Add - Warning [P]"] = 5,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Unit - Show Energy"] = 11,
["Explosion Affix M+"] = 14,
["Auto Set Skull"] = 11,
["Cast - Quick Flash"] = 2,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Stop Casting"] = 4,
["Add - Explode on Die [P]"] = 1,
["Cast - On Going Cast [P]"] = 2,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 15,
["Fixate"] = 11,
["Countdown"] = 12,
["Spiteful Affix"] = 3,
["Cast - Very Important"] = 15,
["Fixate On You"] = 12,
},
["range_check_alpha"] = 0.6499999761581421,
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Extra Border"] = 2,
["Cast Bar Icon Config"] = 2,
["Execute Range"] = 1,
["Hide Neutral Units"] = 1,
["Attacking Specific Unit"] = 2,
["Target Color"] = 3,
["Aura Reorder"] = 3,
["Combo Points"] = 6,
},
["aura2_x_offset"] = 0,
["saved_cvars"] = {
["nameplateMinAlpha"] = "0.90135484",
["nameplateMinAlphaDistance"] = "-158489.31924611",
["nameplateSelectedAlpha"] = "1",
["nameplateRemovalAnimation"] = "1",
["nameplateShowEnemies"] = "1",
["nameplateNotSelectedAlpha"] = "1",
["nameplateOtherAtBase"] = "0",
},
["login_counter"] = 1862,
["hover_highlight_alpha"] = 0.2999999821186066,
["plate_config"] = {
["global_health_height"] = 12,
["friendlyplayer"] = {
["actorname_text_spacing"] = 9,
["level_text_alpha"] = 0.699999988079071,
},
["global_health_width"] = 112,
["enemyplayer"] = {
["actorname_text_spacing"] = 11,
["level_text_alpha"] = 0.699999988079071,
},
["enemynpc"] = {
["level_text_alpha"] = 0.699999988079071,
},
},
["aura_y_offset"] = 5,
["resources_settings"] = {
["chr"] = {
["Player-4467-04790947"] = "ComboPoints",
},
},
["indicator_scale"] = 0.9999999403953552,
["hook_data"] = {
{
["Enabled"] = false,
["Revision"] = 50,
["semver"] = "",
["LastHookEdited"] = "",
["Name"] = "Color Automation [Plater]",
["Author"] = "Kastfall-Azralon",
["Time"] = 1547392935,
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
},
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["LastHookEdited"] = "",
["Name"] = "Hide Neutral Units [Plater]",
["Author"] = "Izimode-Azralon",
["Time"] = 1541606242,
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["race"] = {
},
},
["url"] = "",
["Icon"] = 1990989,
["HooksTemp"] = {
},
},
{
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Time"] = 1596791840,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 574574,
["Enabled"] = false,
["Revision"] = 93,
["Options"] = {
},
["Author"] = "Kastfall-Azralon",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["Name"] = "Reorder Nameplate [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
},
{
["Enabled"] = false,
["Revision"] = 59,
["semver"] = "",
["LastHookEdited"] = "",
["Name"] = "Don't Have Aura [Plater]",
["Author"] = "Izimode-Azralon",
["Time"] = 1554138845,
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
},
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 176,
["semver"] = "",
["LastHookEdited"] = "",
["Name"] = "Extra Border [Plater]",
["Author"] = "Tecno-Azralon",
["Time"] = 1547409079,
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"NamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["HooksTemp"] = {
},
},
{
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["LastHookEdited"] = "",
["Name"] = "Current Target Color [Plater]",
["Author"] = "Izimode-Azralon",
["Time"] = 1552354619,
["Desc"] = "Changes the target color to the color set in the constructor script.",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 878211,
["HooksTemp"] = {
},
},
{
["HooksTemp"] = {
},
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Time"] = 1597097268,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["race"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["Enabled"] = false,
["Revision"] = 348,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Icon Settings",
["Value"] = "Icon Settings:",
["Key"] = "option4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Icon",
["Value"] = true,
["Key"] = "showIcon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Name"] = "Icon on Left Side",
["Value"] = true,
["Key"] = "iconOnLeftSide",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Name"] = "Icon Size Offset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "iconSizeOffset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Name"] = "Icon Padding",
["Value"] = 0,
["Key"] = "iconPadding",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = false,
},
{
["Type"] = 6,
["Name"] = "Blank Space",
["Value"] = 0,
["Key"] = "option6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Name"] = "Interrupt Texture",
["Value"] = "Can't Interrupt Texture:",
["Key"] = "option5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Name"] = "Show Texture",
["Value"] = true,
["Key"] = "showTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Name"] = "Texture Path",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Key"] = "iconTexturePath",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Name"] = "Texture Desaturated",
["Value"] = true,
["Key"] = "desaturatedTexture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Name"] = "Texture Color",
["Value"] = {
1,
1,
1,
0.3056715726852417,
},
["Key"] = "textureColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 10,
["Name"] = "Texture Width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "textureWidth",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Name"] = "Texture Height Mod",
["Value"] = 0,
["Key"] = "textureHeightMod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Fraction"] = false,
["Value"] = 0,
["Name"] = "Texture Position",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Key"] = "texturePosition",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Key"] = "textureAlpha",
["Value"] = 1,
["Fraction"] = true,
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
},
["Author"] = "Ditador-Azralon",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Name"] = "Cast Bar Icon Settings [P]",
["PlaterCore"] = 1,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
},
{
["Enabled"] = false,
["Revision"] = 84,
["semver"] = "",
["LastHookEdited"] = "",
["Name"] = "Execute Range [Plater]",
["Author"] = "Ahwa-Azralon",
["Time"] = 1547406548,
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["role"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["HooksTemp"] = {
},
},
{
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Time"] = 1620377377,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["Enabled"] = false,
["Revision"] = 363,
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.5019607843137255,
0.5019607843137255,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
["Author"] = "Kastfall-Azralon",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["Name"] = "Attacking Specific Unit [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
},
{
["HooksTemp"] = {
},
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Time"] = 1621935143,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = 135426,
["Enabled"] = false,
["Revision"] = 284,
["Options"] = {
},
["Author"] = "Izimode-Azralon",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["Name"] = "Combo Points [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
},
{
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["LastHookEdited"] = "",
["Name"] = "Players Targeting a Target [Plater]",
["Author"] = "Izimode-Azralon",
["Time"] = 1548278227,
["Desc"] = "Show how many raid members are targeting the unit",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["version"] = -1,
["PlaterCore"] = 1,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["race"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["affix"] = {
},
["encounter_ids"] = {
},
["role"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["HooksTemp"] = {
},
},
{
["HooksTemp"] = {
},
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1608663128,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["spec"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["affix"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = false,
["Revision"] = 356,
["Options"] = {
},
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["Name"] = "Aura Reorder [Plater]",
["PlaterCore"] = 1,
["semver"] = "",
["LastHookEdited"] = "",
["version"] = -1,
},
},
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1,
},
},
["ghost_auras"] = {
["auras"] = {
["PRIEST"] = {
[3] = {
[589] = true,
[34914] = true,
},
},
["WARLOCK"] = {
{
[172] = true,
[980] = true,
},
},
},
},
["cast_statusbar_fadein_time"] = 0.01999999955296516,
["aura_x_offset"] = 0,
["first_run3"] = true,
["ui_parent_scale_tune"] = 1.111111140545504,
["aura_tracker"] = {
["buff_tracked"] = {
[209859] = true,
},
},
["target_shady_alpha"] = 0.5999999642372131,
["patch_version"] = 39,
["range_check_in_range_or_target_alpha"] = 0.8999999761581421,
["use_ui_parent"] = true,
["number_region_first_run"] = true,
},
["phil"] = {
["target_highlight"] = false,
["castbar_icon_x_offset"] = 0.4960994720459,
["aura_breakline_space"] = 15,
["script_data"] = {
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (you may need /reload if some configs isn't applied immediately)    \n    --change the nameplate color to this if allowed\n    envTable.CanChangeNameplateColor = scriptTable.config.changeNameplateColor --\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset --\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/skullbones_128]])\n    unitFrame.UnitImportantSkullTexture:SetPoint(\"center\", unitFrame.healthBar, \"center\", 0, -5)\n    \n    unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n    unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n    unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n164362 - smily morsel - plaguefall\n168882 - fleeting manifestation - sanguine depths\n170234 - oppressive banner - theater of pain\n168988 - overgrowth - Mists of Tirna Scithe\n170452 - essesnce orb - torghast\n\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can change the nameplate color\n    if (envTable.CanChangeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1604599472,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 355,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\nend\n\n\n\n\n",
["NpcNames"] = {
"164362",
"168882",
"168988",
"170234",
"165905",
"170452",
80875,
163746,
152033,
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Unit - Important [Plater]",
["SpellIds"] = {
},
["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.52549019607843,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "nameplateSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Size Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.71372549019608,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Skull Texture",
["Name"] = "Skull Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.46274509803922,
0,
1,
},
["Name"] = "Skull Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "skullAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Alpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "",
["Min"] = 0.4,
["Fraction"] = true,
["Value"] = 0.6,
["Key"] = "skullScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Scale",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    \n    \n    \nend",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 632,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\n    \nend\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura - Buff Alert [Plater]",
["SpellIds"] = {
398151,
323149,
324392,
340544,
342189,
333227,
163689,
227931,
233210,
300207,
301629,
297133,
377738,
378149,
},
["Desc"] = "Add the buff name in the trigger box.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.40392156862745,
0.003921568627451,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.32156862745098,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.castBar, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1673994690,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_darkorange",
["Enabled"] = true,
["Revision"] = 828,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.castBar, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    envTable.BackgroundFlash:Play()\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    --Dominator on Shadowmoon Burial Grounds\n    if (envTable._SpellID == 154327) then\n        if (UnitHealth(unitId) == UnitHealthMax(unitId)) then\n            if (envTable._Duration == 604800) then\n                Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, {1, 0, 0, 1}, envTable)\n            end\n        end\n    end\nend",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Very Important [Plater]",
["SpellIds"] = {
373046,
372863,
164686,
153072,
153680,
196497,
388886,
387145,
384365,
152964,
398150,
152801,
397878,
397914,
183263,
3636,
376171,
350687,
321247,
334522,
320232,
319962,
325879,
324427,
322999,
325360,
322903,
324103,
333294,
333540,
319521,
326021,
326450,
322711,
329104,
295000,
242391,
320197,
329608,
161090,
156301,
166341,
163379,
166923,
172952,
164426,
163665,
227578,
228528,
227789,
227779,
229608,
227925,
300129,
296522,
294349,
293854,
297834,
299588,
302682,
291946,
295169,
285440,
291613,
283551,
372735,
373017,
392488,
257732,
256060,
257899,
384633,
374339,
395694,
391634,
372701,
369328,
265487,
413044,
183526,
88194,
87762,
413385,
411001,
378282,
384161,
259572,
255371,
427460,
429172,
426500,
413607,
412922,
417481,
201399,
411994,
415770,
260907,
260703,
260741,
265876,
263959,
266225,
253517,
},
["Desc"] = "Highlight a very important cast applying several effects into the Cast Bar. Add spell in the Add Trigger field.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a big animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.56470588235294,
0.56470588235294,
0.56470588235294,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.41176470588235,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to run the update as fast as the game framerate\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \n    local dotSpeed = abs(envTable._Duration - envTable._RemainingTime) + 1.5\n    envTable.dotAnimation.textureInfo.speedMultiplier = dotSpeed\nend\n\n\n\n\n",
["Time"] = 1670201853,
["url"] = "",
["Icon"] = 2175503,
["Enabled"] = true,
["Revision"] = 533,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    Plater.SetCastBarColorForScript(self, true, scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end       \nend\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Explosion Affix M+ [Plater]",
["SpellIds"] = {
240446,
385339,
198077,
210261,
360857,
273577,
},
["Desc"] = "Apply several animations when the explosion orb cast starts on a Mythic Dungeon with Explosion Affix",
["Options"] = {
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Changes the cast bar color to this one.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.6156862745098,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 4,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "Option 18",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Nameplate Color",
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.1843137294054,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Health Bar Color",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --creates a glow around the icon\n    envTable.buffIconGlow = envTable.buffIconGlow or Plater.CreateIconGlow (self, scriptTable.config.glowColor)\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Hide()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        Plater.StopDotAnimation(self, envTable.dotAnimation)\n    end\n    \n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["Time"] = 1669327144,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura",
["Enabled"] = true,
["Revision"] = 368,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.glowEnabled) then\n        envTable.buffIconGlow:Show()\n    end\n    \n    if (scriptTable.config.dotsEnabled) then\n        envTable.dotAnimation = Plater.PlayDotAnimation(self, 6, scriptTable.config.dotsColor, 6, 3) \n    end\nend\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura - Debuff Alert [Plater]",
["Desc"] = "Add the debuff name in the trigger box.",
["SpellIds"] = {
337220,
337253,
337251,
},
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Buff in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = false,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.40392156862745,
0.003921568627451,
0,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "dotsEnabled",
["Value"] = true,
["Name"] = "Dots Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.32156862745098,
0,
1,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsShowingCastBarTest) then\n        --don't execute on battlegrounds and arenas\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end    \n    end\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203603,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = false,
["Revision"] = 1194,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (not Plater.IsShowingCastBarTest) then\n        if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"none\") then\n            return\n        end\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Big Alert [Plater]",
["SpellIds"] = {
396640,
372743,
377389,
396812,
388392,
387955,
386546,
377503,
384808,
386024,
387615,
387606,
225100,
211401,
211470,
215433,
192563,
198959,
152818,
156776,
398206,
153524,
396073,
396018,
345202,
377950,
372223,
338353,
334748,
334749,
320784,
341352,
341520,
341522,
336005,
339777,
331933,
326617,
324914,
324776,
326046,
340634,
319070,
328295,
317936,
327413,
319654,
323821,
320772,
324293,
330562,
330868,
341902,
342139,
342675,
323190,
332836,
327648,
328217,
322938,
340544,
325876,
325700,
323552,
332666,
332612,
332706,
340026,
294171,
292910,
294165,
338871,
330813,
335694,
327461,
329787,
304946,
15245,
276754,
304831,
277036,
320657,
294362,
270248,
292926,
350421,
352158,
349985,
329239,
328400,
164192,
176032,
166335,
166387,
162066,
163689,
227592,
228254,
227999,
227987,
232115,
29580,
227616,
241828,
228606,
227800,
228239,
229706,
294884,
301629,
284219,
301689,
300650,
297835,
300171,
300087,
300414,
300436,
301088,
293729,
291928,
384194,
392451,
392924,
397889,
209413,
207980,
257397,
257736,
382787,
374699,
377402,
369602,
369465,
369400,
381593,
265091,
265433,
382791,
376780,
225573,
278444,
164887,
168082,
76813,
227913,
265368,
},
["Desc"] = "Flash, Bounce and Red Color the CastBar border when when an important cast is happening. Add spell in the Add Trigger field.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.43137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.4,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --flash duration\n    local CONFIG_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --manually create a new texture for the flash animation\n    if (not envTable.SmallFlashTexture) then\n        envTable.SmallFlashTexture = envTable.SmallFlashTexture or Plater:CreateImage (unitFrame.castBar)\n        envTable.SmallFlashTexture:SetColorTexture (1, 1, 1)\n        envTable.SmallFlashTexture:SetAllPoints()\n    end\n    \n    --manually create a flash animation using the framework\n    if (not envTable.SmallFlashAnimationHub) then \n        \n        local onPlay = function()\n            envTable.SmallFlashTexture:Show()\n        end\n        \n        local onFinished = function()\n            envTable.SmallFlashTexture:Hide()\n        end\n        \n        local animationHub = Plater:CreateAnimationHub (envTable.SmallFlashTexture, onPlay, onFinished)\n        envTable.flashIn = Plater:CreateAnimation (animationHub, \"Alpha\", 1, CONFIG_FLASH_DURATION/2, 0, .6)\n        envTable.flashOut = Plater:CreateAnimation (animationHub, \"Alpha\", 2, CONFIG_FLASH_DURATION/2, 1, 0)\n        \n        envTable.SmallFlashAnimationHub = animationHub\n    end\n    \n    envTable.flashIn:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.flashOut:SetDuration(scriptTable.config.flashDuration / 2)\n    envTable.SmallFlashTexture:SetColorTexture (Plater:ParseColors(scriptTable.config.flashColor))\n    \nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    \nend\n\n\n",
["Time"] = 1669325410,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar",
["Enabled"] = true,
["Revision"] = 662,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.SmallFlashAnimationHub:Play()\n    \nend\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Small Alert [Plater]",
["SpellIds"] = {
376851,
396044,
381517,
373932,
397801,
208165,
392576,
198750,
387843,
387411,
211299,
198595,
198934,
198962,
156722,
320170,
320171,
320462,
330712,
332170,
333875,
326836,
342135,
333861,
341969,
317963,
327481,
328331,
322614,
325701,
326438,
323538,
321764,
296523,
330755,
295929,
296019,
335685,
170751,
342207,
350554,
348513,
351779,
328180,
319898,
166335,
172810,
172943,
173148,
163376,
228011,
228277,
29928,
228559,
230050,
374743,
227615,
229716,
229083,
299525,
300514,
285388,
294324,
294180,
293827,
297128,
294015,
291865,
281420,
274383,
259092,
367521,
374544,
385039,
382474,
369823,
377500,
260879,
186269,
378818,
371875,
372225,
200658,
266036,
265407,
164965,
429176,
428526,
418200,
407124,
415437,
264050,
267824,
},
["Desc"] = "Flashes the Cast Bar when a spell in the trigger list is Cast. Add spell in the Add Trigger field.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a small animation when the cast start.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --color to set the nameplate\n    envTable.NameplateColor = \"gray\"\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --only change the nameplate color in combat\n    if (InCombatLockdown()) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n\n\n",
["Time"] = 1538256464,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_invalid",
["Enabled"] = true,
["Revision"] = 106,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura - Invalidate Unit [Plater]",
["Desc"] = "When an aura makes the unit invulnarable and you don't want to attack it. Add spell in the Add Trigger field.",
["SpellIds"] = {
261265,
261266,
271590,
},
["Options"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings:\n    do\n        \n        --change the nameplate color to this color\n        --can use color names: \"red\", \"yellow\"\n        --can use color hex: \"#FF0000\", \"#FFFF00\"\n        --con use color table: {1, 0, 0}, {1, 1, 0}\n        \n        envTable.Color = \"green\"\n        \n        --if true, it'll replace the health info with the unit name\n        envTable.ReplaceHealthWithName = false\n        \n        --use flash when the unit is shown in the screen\n        envTable.FlashNameplate = true\n        \n    end\n    \n    --private:\n    do\n        --create a flash for when the unit if shown\n        envTable.smallFlash = envTable.smallFlash or Plater.CreateFlash (unitFrame.healthBar, 0.15, 1, envTable.Color)\n        \n    end\n    \nend\n\n--[=[\n\nNpc IDS:\n\n141851: Spawn of G'Huun on Mythic Dungeons\n\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --make plater refresh the nameplate color\n    Plater.RefreshNameplateColor (unitFrame)\n    \n        envTable.smallFlash:Stop()\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --adjust the nameplate color\n    Plater.SetNameplateColor (unitFrame, envTable.Color)\n    \n    --check if can replace the health amount with the unit name\n    if (envTable.ReplaceHealthWithName) then\n        \n        local healthPercent = format (\"%.1f\", unitFrame.healthBar.CurrentHealth / unitFrame.healthBar.CurrentHealthMax *100)\n        \n        unitFrame.healthBar.lifePercent:SetText (unitFrame.namePlateUnitName .. \"  (\" .. healthPercent  .. \"%)\")\n        \n    end\n    \nend\n\n\n",
["Time"] = 1543253273,
["url"] = "",
["Icon"] = 135024,
["Enabled"] = true,
["Revision"] = 59,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can flash the nameplate\n    if (envTable.FlashNameplate) then\n        envTable.smallFlash:Play()\n    end\n    \nend\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
"141851",
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Color Change [Plater]",
["Desc"] = "Add a unitID or unit name in 'Add Trigger' entry. See the constructor script for options.",
["SpellIds"] = {
},
["Options"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings (require a /reload after editing any setting)\n    do\n        --blink and glow\n        envTable.BlinkEnabled = scriptTable.config.blinkEnabled\n        envTable.GlowEnabled = scriptTable.config.glowEnabled \n        envTable.ChangeNameplateColor = scriptTable.config.changeNameplateColor;\n        envTable.TimeLeftToBlink = scriptTable.config.timeleftToBlink;\n        envTable.BlinkSpeed = scriptTable.config.blinkSpeed; \n        envTable.BlinkColor = scriptTable.config.blinkColor; \n        envTable.BlinkMaxAlpha = scriptTable.config.blinkMaxAlpha; \n        envTable.NameplateColor = scriptTable.config.nameplateColor; \n        \n        --text color\n        envTable.TimerColorEnabled = scriptTable.config.timerColorEnabled \n        envTable.TimeLeftWarning = scriptTable.config.timeLeftWarning;\n        envTable.TimeLeftCritical = scriptTable.config.timeLeftCritical;\n        envTable.TextColor_Warning = scriptTable.config.warningColor; \n        envTable.TextColor_Critical = scriptTable.config.criticalColor; \n        \n        --list of spellIDs to ignore\n        envTable.IgnoredSpellID = {\n            [12] = true, --use a simple comma here\n            [13] = true,\n        }\n    end\n    \n    \n    --private\n    do\n        --if not envTable.blinkTexture then\n        envTable.blinkTexture = Plater:CreateImage (self, \"\", 1, 1, \"overlay\")\n        envTable.blinkTexture:SetPoint ('center', 0, 0)\n        envTable.blinkTexture:Hide()\n        \n        local onPlay = function()\n            envTable.blinkTexture:Show() \n            envTable.blinkTexture.color = envTable.BlinkColor\n        end\n        local onStop = function()\n            envTable.blinkTexture:Hide()  \n        end\n        envTable.blinkAnimation = Plater:CreateAnimationHub (envTable.blinkTexture, onPlay, onStop)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 1, envTable.BlinkSpeed / 2, 0, envTable.BlinkMaxAlpha)\n        Plater:CreateAnimation (envTable.blinkAnimation, \"ALPHA\", 2, envTable.BlinkSpeed / 2, envTable.BlinkMaxAlpha, 0)\n        --end\n        \n        envTable.glowEffect = envTable.glowEffect or self.overlay or Plater.CreateIconGlow (self)\n        --envTable.glowEffect = envTable.glowEffect or Plater.CreateIconGlow (self)\n        --envTable.glowEffect:Show() --envTable.glowEffect:Hide()\n        \n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.blinkAnimation:Stop()\n    envTable.blinkTexture:Hide()\n    envTable.blinkAnimation:Stop()\n    envTable.glowEffect:Stop()\n    Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local timeLeft = envTable._RemainingTime\n    \n    --check if the spellID isn't being ignored\n    if (envTable.IgnoredSpellID [envTable._SpellID]) then\n        return\n    end\n    \n    --check the time left and start or stop the blink animation and also check if the time left is > zero\n    if ((envTable.BlinkEnabled or envTable.GlowEnabled) and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftToBlink) then\n            --blink effect\n            if (envTable.BlinkEnabled) then\n                if (not envTable.blinkAnimation:IsPlaying()) then\n                    envTable.blinkAnimation:Play()\n                end\n            end\n            --glow effect\n            if (envTable.GlowEnabled) then\n                envTable.glowEffect:Show()\n            end\n            --nameplate color\n            if (envTable.ChangeNameplateColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n            end\n        else\n            --blink effect\n            if (envTable.blinkAnimation:IsPlaying()) then\n                envTable.blinkAnimation:Stop()\n            end\n            --glow effect\n            if (envTable.GlowEnabled and envTable.glowEffect:IsShown()) then\n                envTable.glowEffect:Hide()\n            end\n        end\n    end\n    \n    --timer color\n    if (envTable.TimerColorEnabled and timeLeft > 0) then\n        if (timeLeft < envTable.TimeLeftCritical) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Critical)\n        elseif (timeLeft < envTable.TimeLeftWarning) then\n            Plater:SetFontColor (self.Cooldown.Timer, envTable.TextColor_Warning)        \n        else\n            Plater:SetFontColor (self.Cooldown.Timer, Plater.db.profile.aura_timer_text_color)\n        end\n    end\n    \nend",
["Time"] = 1626382829,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_blink",
["Enabled"] = true,
["Revision"] = 375,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.blinkTexture:SetSize (self:GetSize())\n    \nend\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura - Blink by Time Left [Plater]",
["SpellIds"] = {
},
["Desc"] = "Blink, change the number and nameplate color. Add the debuffs int he trigger box. Set settings on constructor script.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option17",
["Value"] = "Enter the spell name or spellID in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 17",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "blinkEnabled",
["Value"] = true,
["Name"] = "Blink Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable blink",
},
{
["Type"] = 4,
["Key"] = "glowEnabled",
["Value"] = true,
["Name"] = "Glow Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable glows",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = false,
["Name"] = "Change NamePlate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'true' to enable nameplate color change",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the blink effect only",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Key"] = "timeleftToBlink",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Timeleft to Blink",
},
{
["Type"] = 2,
["Max"] = 3,
["Desc"] = "time to complete a blink loop",
["Min"] = 0.5,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "blinkSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "max transparency in the animation loop (1.0 is full opaque)",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.6,
["Key"] = "blinkMaxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color of the blink",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.28627450980392,
0.003921568627451,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "nameplate color if ChangeNameplateColor is true",
},
{
["Type"] = 6,
["Key"] = "option10",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "timerColorEnabled",
["Value"] = true,
["Name"] = "Timer Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "set to 'false' to disable changes in the color of the time left text",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 8,
["Key"] = "timeLeftWarning",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Time Left Warning",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "in seconds, affects the color of the text",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 3,
["Key"] = "timeLeftCritical",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Time Left Critical",
},
{
["Type"] = 1,
["Key"] = "warningColor",
["Value"] = {
1,
0.87058823529412,
0,
1,
},
["Name"] = "Warning Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left entered in a warning zone",
},
{
["Type"] = 1,
["Key"] = "criticalColor",
["Value"] = {
1,
0.074509803921569,
0,
1,
},
["Name"] = "Critical Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "color when the time left is critical",
},
},
},
{
["ConstructorCode"] = "--gray lines are comments and doesn't affect the code\n\n--1) add the aura you want by typing its name or spellID into the \"Add Trigger\" and click the \"Add\" button.\n--2) the border will use the default color set below, to a custom color type aura name and the color you want in the BorderColorByAura table.\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --default color if the aura name isn't found in the Color By Aura table below\n    envTable.DefaultBorderColor = \"orange\"\n    \n    --transparency, affect all borders\n    envTable.BorderAlpha = 1.0\n    \n    --add the aura name and the color, \n    envTable.BorderColorByAura = {\n        \n        --examples:\n        --[\"Aura Name\"] = \"yellow\", --using regular aura name | using the name of the color\n        --[\"aura name\"] = \"#FFFF00\", --using lower case in the aura name |using html #hex for the color\n        --[54214] = {1, 1, 0}, --using the spellID instead of the name | using rgb table (0 to 1) for the color\n        --color table uses zero to one values: 255 = 1.0, 127 = 0.5, orange color = {1, 0.7, 0}\n        \n        --add your custom border colors below:\n        \n        [\"Aura Name\"] = {1, .5, 0}, --example to copy/paste\n        \n    }\n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --reset the border color\n    self:SetBackdropBorderColor (0, 0, 0, 0)\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the custom color added by the user or the default color\n    local color = envTable.CustomBorderColor or envTable.DefaultBorderColor\n    --parse the color since it can be a color name, hex or color table\n    local r, g, b = DetailsFramework:ParseColors (color)\n    \n    --set the border color\n    self:SetBackdropBorderColor (r, g, b, envTable.BorderAlpha)\n    \nend\n\n\n\n\n",
["Time"] = 1543680853,
["url"] = "",
["Icon"] = 133006,
["Enabled"] = false,
["Revision"] = 45,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --get the aura name in lower case\n    local auraLowerName = string.lower (envTable._SpellName)\n    \n    --attempt to get a custom color added by the user in the constructor script\n    local hasCustomBorderColor = envTable.BorderColorByAura [auraLowerName] or envTable.BorderColorByAura [envTable._SpellName] or envTable.BorderColorByAura [envTable._SpellID]\n    \n    --save the custom color\n    envTable.CustomBorderColor = hasCustomBorderColor\n    \nend\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura - Border Color [Plater]",
["Desc"] = "Add a border to an aura icon. Add the aura into the Add Trigger entry. You can customize the icon color at the constructor script.",
["SpellIds"] = {
},
["Options"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);\nend\n\n--[=[\n\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount.text = \"\" .. UnitPower (unitId);\nend\n\n\n",
["Time"] = 1539015649,
["url"] = "",
["Icon"] = 136048,
["Enabled"] = true,
["Revision"] = 131,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["NpcNames"] = {
"Guardian of Yogg-Saron",
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "UnitPower [Plater]",
["Desc"] = "Show the energy amount above the nameplate",
["SpellIds"] = {
},
["Options"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local movingArrowTexture = unitFrame._movingArrowTexture\n    if (not movingArrowTexture) then\n        movingArrowTexture = self:CreateTexture(nil, \"artwork\", nil, 6)\n        unitFrame._movingArrowTexture = movingArrowTexture\n    end\n    \n    envTable.movingAnimation = envTable.movingAnimation or Plater:CreateAnimationHub (unitFrame._movingArrowTexture, \n        function() \n            unitFrame._movingArrowTexture:Show() \n            unitFrame._movingArrowTexture:SetPoint(\"left\", 0, 0)\n        end, \n        function() unitFrame._movingArrowTexture:Hide() end)\n    \n    envTable.movingAnimation:SetLooping (\"REPEAT\")\n    \n    envTable.arrowAnimation = envTable.arrowAnimation or Plater:CreateAnimation (envTable.movingAnimation, \"translation\", 1, 0.20, self:GetWidth()-16, 0)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.movingAnimation:Stop()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    \n    local percent = envTable.movingAnimation:GetProgress()\n    \n    if (percent < 0.4) then\n        local value = Lerp(0.01, scriptTable.config.arrowAlpha, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n        \n    elseif (percent > 0.6) then\n        local value = Lerp(scriptTable.config.arrowAlpha, 0.01, percent) or 0\n        unitFrame._movingArrowTexture:SetAlpha(Saturate(value))\n    end\n    \n    --unitFrame._movingArrowTexture:SetAlpha(1)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1670202265,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_frontal",
["Enabled"] = true,
["Revision"] = 620,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame._movingArrowTexture:SetTexture([[Interface\\PETBATTLES\\PetBattle-StatIcons]])\n    unitFrame._movingArrowTexture:SetSize(16, self:GetHeight() - 2)\n    unitFrame._movingArrowTexture:SetTexCoord(unpack({0, 15/32, 18/32, 30/32}))\n    unitFrame._movingArrowTexture:SetAlpha(scriptTable.config.arrowAlpha)\n    unitFrame._movingArrowTexture:SetDesaturated(scriptTable.config.desaturateArrow)    \n    \n    unitFrame._movingArrowTexture:SetParent(self.FrameOverlay)\n    unitFrame._movingArrowTexture:SetDrawLayer(\"overlay\",  7)\n    \n    envTable.arrowAnimation:SetDuration(scriptTable.config.animSpeed)\n    envTable.movingAnimation:Play()\nend\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Frontal Cone [Plater]",
["SpellIds"] = {
375943,
385958,
388623,
377034,
374361,
381525,
386660,
385578,
384699,
153501,
153686,
154442,
192018,
219488,
372087,
391726,
391723,
377383,
388976,
370764,
387067,
391118,
391136,
382233,
209027,
212031,
207261,
207979,
198888,
199805,
199050,
191508,
152792,
153395,
323489,
323496,
319941,
319592,
334266,
325258,
334913,
326221,
322936,
323236,
321834,
336752,
325418,
324667,
327233,
324368,
324205,
323943,
319713,
320596,
320729,
323608,
330614,
320063,
332708,
334023,
317231,
317943,
320966,
334053,
328458,
321968,
331718,
325793,
330453,
326997,
334051,
292903,
330843,
294173,
189200,
352833,
330403,
166675,
176127,
166380,
162058,
167516,
166923,
178299,
172982,
163390,
173384,
173514,
29513,
227672,
228603,
227339,
227493,
241774,
229611,
229151,
300188,
299475,
299502,
300777,
301681,
298946,
298940,
300424,
283422,
294290,
291973,
293986,
291878,
292264,
209495,
257426,
255952,
257870,
413147,
383107,
377559,
388060,
376170,
384524,
375351,
390111,
369791,
369573,
369563,
369335,
369061,
375727,
265016,
265019,
260793,
260292,
272457,
272609,
269843,
183465,
226296,
188169,
183088,
410873,
411012,
88308,
382708,
375251,
375439,
372311,
373742,
372201,
374533,
377204,
201226,
204667,
198379,
200768,
253239,
250258,
255567,
194956,
427510,
426645,
412505,
412129,
419351,
401482,
404916,
200345,
200261,
198641,
265372,
271174,
264694,
264923,
},
["Desc"] = "Does an animation for casts that affect the frontal area of the enemy. Add spell in the Add Trigger field.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces an effect to indicate the spell will hit players in front of the enemy.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Set the alpha of the moving arrow",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.73,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Time that takes for an arrow to travel from the to right.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "animSpeed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Speed",
},
{
["Type"] = 4,
["Key"] = "desaturateArrow",
["Value"] = false,
["Name"] = "Use White Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the arrow color will be desaturated.",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.BuffFrame, \"top\", 0, 10);    \n    \n    envTable.FixateIcon = Plater:CreateImage (unitFrame, 236188, 16, 16, \"overlay\");\n    envTable.FixateIcon:SetPoint (\"bottom\", envTable.FixateTarget, \"top\", 0, 4);    \n    \n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n--165560 = Gormling Larva - MTS\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:Hide()\n    envTable.FixateIcon:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    local targetName = UnitName (unitId .. \"target\");\n    if (targetName) then\n        local _, class = UnitClass (unitId .. \"target\");\n        targetName = Plater.SetTextColorByClass (unitId .. \"target\", targetName);\n        envTable.FixateTarget.text = targetName;\n        \n        envTable.FixateTarget:Show();\n        envTable.FixateIcon:Show();\n    end    \nend\n\n\n",
["Time"] = 1604239880,
["url"] = "",
["Icon"] = 1029718,
["Enabled"] = true,
["Revision"] = 269,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["NpcNames"] = {
"165560",
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Fixate [Plater]",
["SpellIds"] = {
},
["Desc"] = "Show above the nameplate who is the player fixated",
["Options"] = {
},
},
{
["ConstructorCode"] = "--todo: add npc ids for multilanguage support\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.TextAboveNameplate = \"** On You **\"\n    envTable.NameplateColor = \"green\"\n    \n    --label to show the text above the nameplate\n    envTable.FixateTarget = Plater:CreateLabel (unitFrame);\n    envTable.FixateTarget:SetPoint (\"bottom\", unitFrame.healthBar, \"top\", 0, 30);\n    \n    --the spell casted by the npc in the trigger list needs to be in the list below as well\n    local spellList = {\n        [321891] = \"Freeze Tag Fixation\", --Illusionary Vulpin - MTS\n        \n    }\n    \n    --build the list with localized spell names\n    envTable.FixateDebuffs = {}\n    for spellID, enUSSpellName in pairs (spellList) do\n        local localizedSpellName = GetSpellInfo (spellID)\n        envTable.FixateDebuffs [localizedSpellName or enUSSpellName] = true\n    end\n    \n    --debug - smuggled crawg\n    envTable.FixateDebuffs [\"Jagged Maw\"] = true\n    \nend\n\n--[=[\nNpcIDs:\n136461: Spawn of G'huun (mythic uldir G'huun)\n\n--]=]\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    envTable.FixateTarget:SetText (\"\")\n    envTable.FixateTarget:Hide()\n    \n    envTable.IsFixated = false\n    \n    Plater.RefreshNameplateColor (unitFrame)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable)\n    \n    --swap this to true when it is fixated\n    local isFixated = false\n    \n    --check the debuffs the player has and see if any of these debuffs has been placed by this unit\n    for debuffId = 1, 40 do\n        local name, texture, count, debuffType, duration, expirationTime, caster = UnitDebuff (\"player\", debuffId)\n        \n        --cancel the loop if there's no more debuffs on the player\n        if (not name) then \n            break \n        end\n        \n        --check if the owner of the debuff is this unit\n        if (envTable.FixateDebuffs [name] and caster and UnitIsUnit (caster, unitId)) then\n            --the debuff the player has, has been placed by this unit, set the name above the unit name\n            envTable.FixateTarget:SetText (envTable.TextAboveNameplate)\n            envTable.FixateTarget:Show()\n            Plater.SetNameplateColor (unitFrame,  envTable.NameplateColor)\n            isFixated = true\n            \n            if (not envTable.IsFixated) then\n                envTable.IsFixated = true\n                Plater.FlashNameplateBody (unitFrame, \"fixate\", .2)\n            end\n        end\n        \n    end\n    \n    --check if the nameplate color is changed but isn't fixated any more\n    if (not isFixated and envTable.IsFixated) then\n        --refresh the nameplate color\n        Plater.RefreshNameplateColor (unitFrame)\n        --reset the text\n        envTable.FixateTarget:SetText (\"\")\n        \n        envTable.IsFixated = false\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604087921,
["url"] = "",
["Icon"] = 841383,
["Enabled"] = true,
["Revision"] = 266,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable)\n    \nend\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Fixate On You [Plater]",
["Desc"] = "When an enemy places a debuff and starts to chase you. This script changes the nameplate color and place your name above the nameplate as well.",
["SpellIds"] = {
"spawn of g'huun",
"smuggled crawg",
"sergeant bainbridge",
"blacktooth scrapper",
"irontide grenadier",
"feral bloodswarmer",
"earthrager",
"crawler mine",
"rezan",
},
["Options"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --settings\n    envTable.NameplateSizeOffset = scriptTable.config.castBarHeight\n    envTable.ShowArrow = scriptTable.config.showArrow\n    envTable.ArrowAlpha = scriptTable.config.arrowAlpha\n    \n    --creates the spark to show the cast progress inside the health bar\n    envTable.overlaySpark = envTable.overlaySpark or Plater:CreateImage (unitFrame.healthBar)\n    envTable.overlaySpark:SetBlendMode (\"ADD\")\n    envTable.overlaySpark.width = 16\n    envTable.overlaySpark.height = 36\n    envTable.overlaySpark.alpha = .9\n    envTable.overlaySpark.texture = [[Interface\\AddOns\\Plater\\images\\spark3]]\n    \n    envTable.topArrow = envTable.topArrow or Plater:CreateImage (unitFrame.healthBar)\n    envTable.topArrow:SetBlendMode (\"ADD\")\n    envTable.topArrow.width = scriptTable.config.arrowWidth\n    envTable.topArrow.height = scriptTable.config.arrowHeight\n    envTable.topArrow.alpha = envTable.ArrowAlpha\n    envTable.topArrow.texture = [[Interface\\BUTTONS\\Arrow-Down-Up]]\n    \n    --scale animation\n    envTable.smallScaleAnimation = envTable.smallScaleAnimation or Plater:CreateAnimationHub (unitFrame.healthBar)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 1, 0.075, 1, 1, 1.08, 1.08)\n    Plater:CreateAnimation (envTable.smallScaleAnimation, \"SCALE\", 2, 0.075, 1, 1, 0.95, 0.95)    \n    --envTable.smallScaleAnimation:Play() --envTable.smallScaleAnimation:Stop()\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))    \n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\nend\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    \n    envTable.overlaySpark:Hide()\n    envTable.topArrow:Hide()\n    \n    Plater.RefreshNameplateColor (unitFrame)\n    \n    envTable.smallScaleAnimation:Stop()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)\n    \n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --update the percent\n    envTable.overlaySpark:SetPoint (\"left\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100)-9, 0)\n    \n    envTable.topArrow:SetPoint (\"bottomleft\", unitFrame.healthBar, \"topleft\", unitFrame.healthBar:GetWidth() * (envTable._CastPercent / 100) - 4, 2 )\n    \n    --forces the script to update on a 60Hz base\n    self.ThrottleUpdate = 0\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670790652,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_red",
["Enabled"] = true,
["Revision"] = 694,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.overlaySpark:Show()\n    \n    if (envTable.ShowArrow) then\n        envTable.topArrow:Show()\n    else\n        envTable.topArrow:Hide()\n    end\n    \n    Plater.FlashNameplateBorder (unitFrame, 0.05)   \n    Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n    \n    envTable.smallScaleAnimation:Play()\n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    envTable.overlaySpark.height = nameplateHeight + 5\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, customColor or scriptTable.config.castBarColor, envTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.healthBarColor)        \n        Plater.DenyColorChange(unitFrame, true)            \n    end\n    \nend",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Ultra Important [P]",
["SpellIds"] = {
383823,
382670,
388537,
372851,
200682,
192307,
196838,
193827,
194043,
209410,
211464,
361180,
156718,
395859,
358320,
374045,
386757,
367500,
370225,
376200,
332329,
320103,
321406,
335817,
321061,
320141,
326171,
163966,
227966,
372107,
388923,
376934,
384899,
373960,
374724,
385551,
259732,
373424,
373084,
87618,
255041,
428926,
76634,
200050,
197546,
198079,
199193,
266181,
253544,
},
["Desc"] = "Used on casts that make the mob explode or transform if the cast passes.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Plays a special animation showing the explosion time.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option3",
["Value"] = 0,
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "Increases the health bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Health Bar Height Mod",
},
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above Use Cast Bar Color",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.431372,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast Bar Color",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Arrow:",
["Name"] = "Arrow:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showArrow",
["Value"] = true,
["Name"] = "Show Arrow",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show an arrow above the nameplate showing the cast bar progress.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Arrow alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Key"] = "arrowAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Alpha",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Width.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Width",
},
{
["Type"] = 2,
["Max"] = 12,
["Desc"] = "Arrow Height.",
["Min"] = 4,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "arrowHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Arrow Height",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation:",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
0.6156862745098,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dot animation.",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 4,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dot Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"200682",
"darkslateblue",
},
{
"192307",
"goldenrod",
},
{
"196838",
"maroon",
},
{
"193827",
"darkgreen",
},
{
"194043",
"darkgreen",
},
{
"156718",
"DRUID",
},
{
"395859",
"ROGUE",
},
},
["Name"] = "Color List by SpellId",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the spellId in the Key, and the color name in the Value",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    --check for marks\n    function  envTable.CheckMark (unitId, unitFrame)\n        if (not GetRaidTargetIndex(unitId)) then\n            if (scriptTable.config.onlyInCombat) then\n                if (not UnitAffectingCombat(unitId)) then\n                    return\n                end                \n            end\n            \n            SetRaidTarget(unitId, 8)\n        end       \n    end\nend\n\n\n--163520 - forsworn squad-leader\n--163618 - zolramus necromancer - The Necrotic Wake\n--164506 - anciet captain - theater of pain\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n",
["Time"] = 1604696441,
["url"] = "",
["Icon"] = "Interface\\Worldmap\\GlowSkull_64Grey",
["Enabled"] = true,
["Revision"] = 63,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckMark (unitId, unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
"163520",
"163618",
"164506",
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Auto Set Skull",
["SpellIds"] = {
},
["Desc"] = "Auto set skull marker",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Auto set a raid target Skull on the unit.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "onlyInCombat",
["Value"] = false,
["Name"] = "Only in Combat",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Set the mark only if the unit is in combat.",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n--[=[\n\n154564 - debug\n\n168098 - empowered coldheart agent\n156212 - coldheart agent\n\n\n\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, scriptTable.config.nameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1604607993,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 406,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.healthBar, unitFrame.healthBar.MainTargetDotAnimation)\n    \n    unitFrame.healthBar.MainTargetDotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + scriptTable.config.nameplateSizeOffset)\n    \nend\n\n\n\n\n\n\n\n",
["NpcNames"] = {
"156212",
"168098",
179124,
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Unit - Main Target [P]",
["SpellIds"] = {
},
["Desc"] = "Highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.52549019607843,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "nameplateSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Size Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.71372549019608,
0,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.npcInfo = {\n        [164427] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"1\", name = \"Boom!\"}, --reanimated warrior - plaguefall\n        \n        [164414] = {secondCastBar = true, timer = 20, timerId = 321247, altCastId = \"2\", name = \"Boom!\"}, --reanimated mage - plaguefall\n        \n        [164185] = {secondCastBar = true, timer = 20, timerId = 319941, altCastId = \"3\", remaining = 5, name = GetSpellInfo(319941)}, --Echelon - Halls of Atonement\n        \n        [164567] = {secondCastBar = true, altCastId = \"dromanswrath\", debuffTimer = 323059, name = GetSpellInfo(323059), spellIcon = 323059}, --Ingra Maloch -- tirna scythe\n        \n        [165408] = {secondCastBar = true, timer = 20, timerId = 322711, altCastId = \"4\", remaining = 5, name = GetSpellInfo(322711)}, --Halkias - Refracted Sinlight - Halls of Atonement\n        \n        \n        --[154564] = {secondCastBar = true, timerId = \"Test Bar\", altCastId = \"debugcast\", remaining = 5, name = GetSpellInfo(319941), spellIcon = 319941}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n        --[154580] = {secondCastBar = true, altCastId = \"debugcast\", debuffTimer = 204242, name = GetSpellInfo(81297), spellIcon = 81297}, --debug \"Test (1)\" BW \"Test Bar\" DBM --DEBUG\n    }\n    \n    --set the castbar config\n    local config = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end\n        \n        DetailsFramework:TruncateText(unitFrame.castBar2.Text, unitFrame.castBar2:GetWidth() - 16)\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    Plater.ClearAltCastBar(unitFrame.PlateFrame)\nend",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                if (altCastId ~= npcInfo.altCastId or not unitFrame.castBar2:IsShown()) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n                end\n            end \n            \n        elseif (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                --get the debuff timeleft\n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                local startTime = expirationTime - duration\n                \n                if (not unitFrame.castBar2:IsShown() or unitFrame.castBar2.spellStartTime < startTime) then\n                    envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, startTime)\n                end\n                \n            else \n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1604354364,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\Images\\countdown_bar_icon",
["Enabled"] = true,
["Revision"] = 206,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local npcInfo = envTable.npcInfo[envTable._NpcID]\n    \n    if (npcInfo and npcInfo.secondCastBar) then\n        if (npcInfo.debuffTimer) then\n            if (Plater.NameplateHasAura (unitFrame, npcInfo.debuffTimer)) then\n                \n                local name = npcInfo.name\n                local _, _, _, _, duration, expirationTime = AuraUtil.FindAuraByName(name, unitId, \"DEBUFF\")\n                \n                envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, duration, expirationTime-duration)\n            else\n                if (unitFrame.castBar2:IsShown()) then\n                    local altCastId = Plater.GetAltCastBarAltId(unitFrame.PlateFrame)\n                    if (altCastId == npcInfo.altCastId) then\n                        Plater.ClearAltCastBar(unitFrame.PlateFrame)\n                    end                   \n                end                              \n            end\n        else\n            envTable.ShowAltCastBar(npcInfo, unitFrame, unitId)\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
"164427",
"164414",
"164185",
"164567",
"165408",
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Countdown",
["SpellIds"] = {
},
["Desc"] = "Some units has special events without a clear way to show. This script adds a second cast bar to inform the user about it.",
["Options"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    envTable.lifePercent = {\n        --npcId         percent divisions\n        [154564] = {80, 30},   --debug\n        [164451] = {40}, --dessia the decapirator - theater of pain\n        [164463] = {40}, --Paceran the Virulent - theater of pain\n        [164461] = {40}, -- Sathel the Accursed - theater of pain\n        [165946]= {50}, -- ~mordretha - thather of pain\n        [164501] = {70, 40, 10}, --mistcaller - tina scythe\n        [164218] = {70, 40}, --Lord Chamberlain - Halls of Atonement\n    }\n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1606506781,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 109,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["NpcNames"] = {
"164451",
"164463",
"164461",
"165946",
"164501",
"164218",
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Unit - Health Markers [P]",
["SpellIds"] = {
},
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "indicatorColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Vertical Line Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.79,
["Key"] = "indicatorAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Vertical Line Alpha",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "fillAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Fill Alpha",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1618996775,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_tank",
["Enabled"] = true,
["Revision"] = 843,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not Plater.IsPlayerTank()) then\n        return\n    end\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    --set the color of the cast bar to dark orange (only if can be interrupted)\n    --Plater auto set this color to default when a new cast starts, no need to reset this value at OnHide.    \n    if (envTable._CanInterrupt) then\n        if (scriptTable.config.useCastbarColor) then\n            self:SetStatusBarColor (Plater:ParseColors (envTable.CastbarColor))\n        end\n    end\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Tank Interrupt [P]",
["SpellIds"] = {
321828,
},
["Desc"] = "Cast alert for abilities which only the tank can interrupt.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.43137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Fraction"] = false,
["Value"] = 25,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 30,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount = Plater:CreateLabel (unitFrame, \"\", 16, \"silver\");\n    envTable.EnergyAmount:SetPoint (\"bottom\", unitFrame, \"top\", 0, 18);    \n    \n    envTable.EnergyAmount.fontsize = scriptTable.config.fontSize\n    envTable.EnergyAmount.fontcolor = scriptTable.config.fontColor\n    envTable.EnergyAmount.outline = scriptTable.config.outline\n    \n    \nend\n\n--[=[\n\n164406 = Shriekwing\n164407 = Sludgefist\n162100 = kryxis the voracious\n162099 = general kaal - sanguine depths\n162329 = Xav the Unfallen - threater of pain\n--]=]",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local currentPower = UnitPower(unitId)\n    \n    if (currentPower and currentPower > 0) then\n        local maxPower = UnitPowerMax (unitId)\n        local percent = floor (currentPower / maxPower * 100)\n        \n        envTable.EnergyAmount.text = \"\" .. percent;\n        \n        if (scriptTable.config.showLater) then\n            local alpha = (percent -80) * 5\n            alpha = alpha / 100\n            alpha = max(0, alpha)\n            envTable.EnergyAmount:SetAlpha(alpha)\n            \n        else\n            envTable.EnergyAmount:SetAlpha(1.0)\n        end\n        \n        \n    else\n        envTable.EnergyAmount.text = \"\"\n    end\nend\n\n\n\n\n\n\n\n\n",
["Time"] = 1604357453,
["url"] = "",
["Icon"] = 136048,
["Enabled"] = true,
["Revision"] = 233,
["semver"] = "",
["Author"] = "Celian-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.EnergyAmount:Show()\nend\n\n\n",
["NpcNames"] = {
"164406",
"164407",
"162100",
"162099",
"162329",
"164558",
150159,
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Unit - Show Energy [Plater]",
["SpellIds"] = {
},
["Desc"] = "Show the energy amount above the nameplate.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Show the power of the unit above the nameplate.",
["Name"] = "script desc",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Add the unit name or unitId in the \"Add Trigger\" field and press \"Add\".",
["Name"] = "add trigger",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showLater",
["Value"] = true,
["Name"] = "Show at 80% of Energy",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the energy won't start showing until the unit has 80% energy.",
},
{
["Type"] = 6,
["Key"] = "option2",
["Value"] = 0,
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Text size.",
["Min"] = 8,
["Fraction"] = false,
["Value"] = 16,
["Key"] = "fontSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Key"] = "fontColor",
["Value"] = {
0.80392156862745,
0.80392156862745,
0.80392156862745,
1,
},
["Name"] = "Font Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the text.",
},
{
["Type"] = 4,
["Key"] = "outline",
["Value"] = true,
["Name"] = "Enable Text Outline",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled, the text uses outline.",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    if (not unitFrame.spitefulTexture) then\n        unitFrame.spitefulTexture = unitFrame.healthBar:CreateTexture(nil, \"overlay\", nil, 6)\n        unitFrame.spitefulTexture:SetPoint('right', 0, 0)\n        unitFrame.spitefulTexture:SetSize(27, 14)\n        unitFrame.spitefulTexture:SetColorTexture(.3, .3, 1, .7)\n        \n        unitFrame.spitefulText = unitFrame.healthBar:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)\n        DetailsFramework:SetFontFace (unitFrame.spitefulText, \"2002\")\n        unitFrame.spitefulText:SetPoint(\"right\", unitFrame.spitefulTexture, \"right\", -2, 0)\n        unitFrame.spitefulText:SetJustifyH(\"right\")\n        \n        unitFrame.roleIcon = unitFrame:CreateTexture(nil, \"overlay\")\n        unitFrame.roleIcon:SetPoint(\"left\", unitFrame.healthBar, \"left\", 2, 0)\n        unitFrame.targetName = unitFrame:CreateFontString(nil, \"overlay\", \"GameFontNormal\")\n        unitFrame.targetName:SetPoint(\"left\", unitFrame.roleIcon, \"right\", 2, 0)\n        \n        unitFrame.spitefulTexture:Hide()\n        unitFrame.spitefulText:Hide()\n    end\n    \n    function envTable.UpdateSpitefulWidget(unitFrame)\n        \n        local r, g, b, a = Plater:ParseColors(scriptTable.config.bgColor)\n        unitFrame.spitefulTexture:SetColorTexture(r, g, b, a)\n        unitFrame.spitefulTexture:SetSize(scriptTable.config.bgWidth, unitFrame.healthBar:GetHeight())   \n        Plater:SetFontSize(unitFrame.spitefulText, scriptTable.config.textSize)\n        Plater:SetFontColor(unitFrame.spitefulText, scriptTable.config.textColor)\n        \n        local currentHealth = unitFrame.healthBar.CurrentHealth\n        local maxHealth = unitFrame.healthBar.CurrentHealthMax\n        \n        local healthPercent = currentHealth / maxHealth * 100\n        local timeToDie = format(\"%.1fs\", healthPercent / 8)\n        unitFrame.spitefulText:SetText(timeToDie)\n        \n        unitFrame.spitefulText:Show()\n        unitFrame.spitefulTexture:Show()\n        \n        if scriptTable.config.switchTargetName then\n            local plateFrame = unitFrame.PlateFrame\n            \n            local target = UnitName(unitFrame.namePlateUnitToken .. \"target\") or UnitName(unitFrame.namePlateUnitToken)\n            \n            if (target and target ~= \"\") then\n                local _, class = UnitClass(unitFrame.namePlateUnitToken .. \"target\")\n                if (class) then\n                    target = DetailsFramework:AddClassColorToText(target, class)\n                end\n                \n                local role = UnitGroupRolesAssigned(unitFrame.namePlateUnitToken .. \"target\")\n                if (role and role ~= \"NONE\") then\n                    target = DetailsFramework:AddRoleIconToText(target, role)\n                end\n                \n                plateFrame.namePlateUnitName = target\n                Plater.UpdateUnitName(plateFrame)\n            end\n        end\n        \n        if scriptTable.config.useTargetingColor then\n            local targeted = UnitIsUnit(unitFrame.namePlateUnitToken .. \"target\", \"player\")\n            if targeted then\n                Plater.SetNameplateColor (unitFrame, scriptTable.config.targetingColor)\n            else\n                Plater.RefreshNameplateColor(unitFrame)\n            end\n        end\n    end\nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    if (unitFrame.spitefulTexture) then\n        unitFrame.spitefulText:Hide()\n        unitFrame.spitefulTexture:Hide()    \n        unitFrame.roleIcon:Hide()\n        unitFrame.targetName:Hide()\n    end\nend\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["Time"] = 1611844883,
["url"] = "",
["Icon"] = 135945,
["Enabled"] = true,
["Revision"] = 186,
["semver"] = "",
["Author"] = "Symantec-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateSpitefulWidget(unitFrame)\nend\n\n\n",
["NpcNames"] = {
"174773",
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "M+ Spiteful",
["Desc"] = "Time to die Spiteful affix",
["SpellIds"] = {
},
["Options"] = {
{
["Type"] = 5,
["Key"] = "option12",
["Value"] = "Time to Die",
["Name"] = "Time to Die",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 50,
["Desc"] = "",
["Min"] = 10,
["Fraction"] = false,
["Value"] = 27,
["Key"] = "bgWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Width",
},
{
["Type"] = 1,
["Key"] = "bgColor",
["Value"] = {
0.50588235294118,
0.070588235294118,
1,
1,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 24,
["Desc"] = "",
["Min"] = 7,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "textSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
0.5843137254902,
0,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option11",
["Value"] = "Targeting",
["Name"] = "Targeting",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "switchTargetName",
["Value"] = true,
["Name"] = "Show Target instead of Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useTargetingColor",
["Value"] = true,
["Name"] = "Change Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetingColor",
["Value"] = {
0.070588235294118,
0.61960784313725,
0,
1,
},
["Name"] = "Color if targeting You",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option11",
["Value"] = 0,
["Name"] = "Option 11",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
},
},
{
["ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OptionsValues"] = {
},
["Temp_OnShowCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["UID"] = "0x60d58ef8230895c8",
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1624608507,
["Temp_ConstructorCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["NpcNames"] = {
},
["Temp_OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Revision"] = 2,
["Options"] = {
},
["ScriptType"] = 1,
["Author"] = "Ahla-Herod",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Desc"] = "",
["Temp_UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Name"] = "New Script",
["PlaterCore"] = 1,
["SpellIds"] = {
},
["Temp_Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["Prio"] = 99,
["Enabled"] = true,
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\", 7)\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \n    --check if there's a timer for this spell\n    local timer = scriptTable.config.timerList[tostring(envTable._SpellID)]\n    \n    if (timer) then\n        --insert code here\n        \n        --set the castbar config\n        local config = {\n            iconTexture = \"\",\n            iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n            iconAlpha = 1,\n            iconSize = 14,\n            \n            text = \"Spikes Incoming!\",\n            textSize = 8,\n            \n            texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n            color = {.6, .6, .6, 0.8},\n            \n            isChanneling = false,\n            canInterrupt = false,\n            \n            height = 5,\n            width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n            \n            spellNameAnchor = {side = 3, x = 0, y = -2},\n            timerAnchor = {side = 5, x = 0, y = -2},\n        }\n        \n        Plater.SetAltCastBar(unitFrame.PlateFrame, config, timer, nil, nil)\n        local castBar2 = unitFrame.castBar2\n        castBar2.Text:ClearAllPoints()\n        castBar2.Text:SetPoint (\"topleft\", castBar2, \"bottomleft\", 0, 0)\n        castBar2.percentText:ClearAllPoints()\n        castBar2.percentText:SetPoint (\"topright\", castBar2, \"bottomright\", 0, 0)\n        Plater:SetFontSize(castBar2.percentText, 8)\n    end\n    \nend\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1670203758,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_orange",
["Enabled"] = true,
["Revision"] = 1213,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castbarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Alert + Timer [P]",
["SpellIds"] = {
350421,
355571,
355787,
},
["Desc"] = "Player an animation when the cast start. Start a timer when the cast finishes. Set the time in the options.",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Cast start animation settings",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castbarColor",
["Value"] = {
1,
0.43137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.4,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 100,
["Desc"] = "How strong is the shake.",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 7,
["Key"] = "timerList",
["Value"] = {
},
["Name"] = "Timer (Key is SpellId and Value is Time)",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the spellId and value is the amount of time of the Timer",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a texture to use for a flash behind the cast bar\n    \n    if (not unitFrame.backGroundFlashTextureImpTarget) then\n        unitFrame.backGroundFlashTextureImpTarget =  Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+40, self:GetHeight()+20, \"background\", {0, 400/512, 0, 170/256})\n    end\n    \n    local backGroundFlashTexture = unitFrame.backGroundFlashTextureImpTarget\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    local fadeIn = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, scriptTable.config.flashDuration/2, 0, 1)\n    local fadeOut = Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, scriptTable.config.flashDuration/2, 1, 0)\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --update the config for the flash here so it wont need a /reload\n    fadeIn:SetDuration (scriptTable.config.flashDuration/2)\n    fadeOut:SetDuration (scriptTable.config.flashDuration/2)\n    \n    --update the config for the skake here so it wont need a /reload\n    envTable.FrameShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    envTable.FrameShake.OriginalDuration = scriptTable.config.shakeDuration\n    envTable.FrameShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    --create the target unit name box\n    if (not unitFrame.targetBox) then\n        unitFrame.targetBox = CreateFrame(\"frame\", unitFrame:GetName() .. \"ScriptImportantTarget\", unitFrame, \"BackdropTemplate\")\n        unitFrame.targetBox:SetSize(80, 20)\n        unitFrame.targetBox:SetFrameStrata(\"TOOLTIP\")\n        unitFrame.targetBox:Hide()\n        unitFrame.targetBox:SetPoint(\"left\", unitFrame, \"right\", 0, 0)\n        \n        unitFrame.targetBox:SetBackdrop({edgeFile = [[Interface\\Buttons\\WHITE8X8]], edgeSize = 1, bgFile = [[Interface\\AddOns\\Details\\images\\background]], tile = true, tileSize = 16})\n        unitFrame.targetBox:SetBackdropColor(.2, .2, .2, .8)\n        unitFrame.targetBox:SetBackdropBorderColor(0, 0, 0, 1)\n        \n        unitFrame.targetBoxName = unitFrame.targetBox:CreateFontString(nil, \"artwork\", \"GameFontNormal\")\n        unitFrame.targetBoxName:SetPoint(\"center\")\n    end\n    \n    function envTable.UpdateTargetBox(unitFrame, unitId)\n        local targetUnitId = unitId .. \"target\"\n        local unitName = UnitName(targetUnitId)\n        \n        if (unitName) then\n            if (scriptTable.config.colorByClass) then\n                Plater:SetFontColor(unitFrame.targetBoxName, \"white\")\n                unitName = Plater.SetTextColorByClass(targetUnitId, unitName)\n            else\n                Plater:SetFontColor(unitFrame.targetBoxName, scriptTable.config.textColor)\n            end\n            \n            unitFrame.targetBoxName:SetText(unitName)\n            Plater:SetFontSize(unitFrame.targetBoxName, scriptTable.config.targetNameSize)\n            unitFrame.targetBox:SetBackdropColor(Plater:ParseColors(scriptTable.config.targetBgColor))\n            unitFrame.targetBox:SetBackdropBorderColor(Plater:ParseColors(scriptTable.config.targetBgBorderColor))\n            unitFrame.targetBox:Show()\n            \n            unitFrame.targetBox:SetWidth(scriptTable.config.targetFrameWidth)\n            unitFrame.targetBox:SetHeight(scriptTable.config.targetFrameHeight)\n            \n            if (not Plater.HasDotAnimationPlaying(unitFrame.targetBox)) then\n                envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.targetBox, 5, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n            end\n            \n            unitFrame.backGroundFlashTextureImpTarget:SetVertexColor(Plater:ParseColors(scriptTable.config.flashColor))\n            \n            return true\n            \n        end\n    end\n    \nend",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.StopDotAnimation(unitFrame.targetBox, envTable.dotAnimation)    \n    \n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame:StopFrameShake (envTable.FrameShake)    \n    \n    unitFrame.targetBox:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.UpdateTargetBox(unitFrame, unitId) \n    \nend\n\n\n",
["Time"] = 1669339628,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_target",
["Enabled"] = true,
["Revision"] = 878,
["semver"] = "",
["Author"] = "Bombad�o-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable.UpdateTargetBox(unitFrame, unitId)) then\n        \n        envTable.BackgroundFlash:Play()\n        \n        Plater.FlashNameplateBorder (unitFrame, 0.05)   \n        Plater.FlashNameplateBody (unitFrame, \"\", 0.075)\n        \n        unitFrame:PlayFrameShake (envTable.FrameShake)\n        \n        if (envTable._CanInterrupt) then\n            if (scriptTable.config.useCastbarColor) then\n                self:SetStatusBarColor (Plater:ParseColors (scriptTable.config.castBarColor))\n            end\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Important Target [P]",
["SpellIds"] = {
354173,
},
["Desc"] = "Highlight the target name",
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Option 1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shows the target name in a separate box",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Flash:",
["Name"] = "Flash",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "How long is the flash played when the cast starts.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 1,
["Key"] = "flashColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Flash Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the Flash",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Shake:",
["Name"] = "Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 0.5,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "How strong is the shake.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 5,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 40,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option13",
["Value"] = 0,
["Name"] = "Option 13",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option14",
["Value"] = "Dot Animation:",
["Name"] = "Dot Animation",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
0.56470588235294,
0.56470588235294,
0.56470588235294,
1,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Adjust the color of the dots around the nameplate",
},
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Adjust the width of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 8,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Adjust the height of the dots to better fit in your nameplate.",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dot Y Offset",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option18",
["Value"] = 0,
["Name"] = "blank",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option19",
["Value"] = "Cast Bar",
["Name"] = "Option 19",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Use Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Use cast bar color.",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
0.41176470588235,
1,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Cast bar color.",
},
{
["Type"] = 6,
["Key"] = "option27",
["Value"] = 0,
["Name"] = "Option 27",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option28",
["Value"] = "Target Options",
["Name"] = "Option 28",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Fraction"] = false,
["Value"] = 14,
["Key"] = "targetNameSize",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Text Size",
},
{
["Type"] = 4,
["Key"] = "colorByClass",
["Value"] = true,
["Name"] = "Use Class Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "textColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Text Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetBgColor",
["Value"] = {
0,
0,
0,
0.98467203229666,
},
["Name"] = "Background Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "targetBgBorderColor",
["Value"] = {
0,
0,
0,
1,
},
["Name"] = "Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 160,
["Desc"] = "",
["Min"] = 30,
["Fraction"] = false,
["Value"] = 90,
["Key"] = "targetFrameWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Frame Width",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "",
["Min"] = 8,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "targetFrameHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Frame Height",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    function envTable.CheckUnit(unitFrame, envTable)\n        if (envTable._NpcID == 185680) then\n            --haste\n            envTable.SetColor(unitFrame, \"haste\")\n            \n        elseif (envTable._NpcID == 185683) then\n            --movement speed\n            envTable.SetColor(unitFrame, \"ms\")\n            \n        elseif (envTable._NpcID == 185685) then\n            --cooldown reduction\n            envTable.SetColor(unitFrame, \"cdr\")\n            \n        end\n    end\n    \n    function envTable.SetColor(unitFrame, bonusType)\n        \n        local r, g, b, a, name\n        \n        if (bonusType == \"haste\") then\n            name = scriptTable.config.hasteName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.hasteColor)\n            \n        elseif (bonusType == \"ms\") then\n            name = scriptTable.config.msName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.msColor)\n            \n        elseif (bonusType == \"cdr\") then\n            name = scriptTable.config.cdrName\n            r, g, b, a = DetailsFramework:ParseColors(scriptTable.config.cdrColor)\n        end\n        \n        Plater.SetNameplateColor(unitFrame, r, g, b, a)\n        if (scriptTable.config.canChangeSize) then\n            Plater.SetNameplateSize(unitFrame, scriptTable.config.width, scriptTable.config.height)\n        end\n        \n        --border\n        if (scriptTable.config.showBorder) then\n            r, g, b, a = r+0.2, g+0.2, b+0.2\n            Plater.SetBorderColor(unitFrame, r, g, b)\n        end\n        \n        --name\n        unitFrame.healthBar.unitName:SetText(name)\n    end\nend\n\n\n--185685 cooldown reduction\n--185680 haste\n--185683 movement speed\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckUnit(unitFrame, envTable)\nend\n\n\n",
["Time"] = 1647994498,
["url"] = "",
["Icon"] = 4263293,
["Enabled"] = true,
["Revision"] = 70,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.CheckUnit(unitFrame, envTable)\n    \nend",
["NpcNames"] = {
"185685",
"185680",
"185683",
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Relics 9.2 M Dungeons",
["SpellIds"] = {
},
["Desc"] = "Make more easy to distinguish relics within dungeons in 9.2 patch",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option1",
["Value"] = "Color Settings",
["Name"] = "ColorSettingsAnchor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Adjust the nameplate color for each mob",
},
{
["Type"] = 1,
["Key"] = "hasteColor",
["Value"] = {
0.45490196078431,
0.2156862745098,
0.54901960784314,
1,
},
["Name"] = "Haste Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "haste color",
},
{
["Type"] = 1,
["Key"] = "msColor",
["Value"] = {
0.30980392156863,
0.52156862745098,
0.25882352941176,
1,
},
["Name"] = "Moviment Speep Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "moviment speep color",
},
{
["Type"] = 1,
["Key"] = "cdrColor",
["Value"] = {
0.17254901960784,
0.28235294117647,
0.52156862745098,
1,
},
["Name"] = "Cooldown Reduction Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "cooldown reduction color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Size Settings",
["Name"] = "SizeSettingsAnchor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "canChangeSize",
["Value"] = false,
["Name"] = "Change Nameplate Size",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If this is checked, the nameplate size is changed to the values below",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "total width of the nameplate",
["Min"] = 50,
["Fraction"] = false,
["Value"] = 100,
["Key"] = "width",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Width",
},
{
["Type"] = 2,
["Max"] = 40,
["Desc"] = "total height of the nameplate",
["Min"] = 2,
["Fraction"] = false,
["Value"] = 12,
["Key"] = "height",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Height",
},
{
["Type"] = 6,
["Key"] = "option9",
["Value"] = 0,
["Name"] = "Option 9",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Border Settings",
["Name"] = "BorderSettingsAnchor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showBorder",
["Value"] = true,
["Name"] = "Paint Border",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, the color of the border will have the same color as the nameplate",
},
{
["Type"] = 6,
["Key"] = "option12",
["Value"] = 0,
["Name"] = "Option 12",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option13",
["Value"] = "Name Settings",
["Name"] = "NameSettings",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 3,
["Key"] = "hasteName",
["Value"] = "HASTE",
["Name"] = "Haste Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 3,
["Key"] = "cdrName",
["Value"] = "CDR",
["Name"] = "Cooldown Reduction Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
{
["Type"] = 3,
["Key"] = "msName",
["Value"] = "MS",
["Name"] = "Movement Speed Name",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    local unitPowerBar = unitFrame.powerBar\n    unitPowerBar:Hide()\nend\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE) then\n        return \n    end\n    \n    local continuationToken\n    local slots\n    local foundAura = false\n    \n    repeat    \n        slots = { UnitAuraSlots(unitId, \"HELPFUL\", BUFF_MAX_DISPLAY, continuationToken) }\n        continuationToken = slots[1]\n        numSlots = #slots\n        \n        for i = 2, numSlots do\n            local slot = slots[i]\n            local name, texture, count, actualAuraType, duration, expirationTime, caster, canStealOrPurge, nameplateShowPersonal, spellId, canApplyAura, isBossDebuff, isCastByPlayer, nameplateShowAll, timeMod, auraAmount = UnitAuraBySlot(unitId, slot) \n            \n            if (spellId == envTable._SpellID) then --need to get the trigger spellId\n                --Ablative Shield\n                local unitPowerBar = unitFrame.powerBar\n                if (not unitPowerBar:IsShown()) then\n                    unitPowerBar:SetUnit(unitId)\n                end\n                \n                foundAura = true\n                return\n            end\n        end\n        \n    until continuationToken == nil\n    \n    if (not foundAura) then\n        local unitPowerBar = unitFrame.powerBar\n        if (unitPowerBar:IsShown()) then\n            unitPowerBar:Hide()\n        end\n    end\nend",
["Time"] = 1669327146,
["url"] = "",
["Icon"] = 610472,
["Enabled"] = true,
["Revision"] = 65,
["semver"] = "",
["Author"] = "Keyspell-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura is Shield [P]",
["SpellIds"] = {
227548,
},
["Desc"] = "Show power bar where its value is the buff value (usualy shown in the buff tooltip)",
["Options"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["OptionsValues"] = {
},
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (UnitIsUnit(unitId .. \"target\", \"player\")) then\n        Plater.SetNameplateColor(unitFrame, scriptTable.config.nameplateColor)\n    else\n        Plater.RefreshNameplateColor(unitFrame)\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1668886509,
["url"] = "",
["Icon"] = "Interface\\ICONS\\Ability_Fixated_State_Red",
["Enabled"] = true,
["Revision"] = 33,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Fixate by Unit Buff [P]",
["SpellIds"] = {
285388,
426662,
426663,
},
["Desc"] = "Alert about a unit fixated on the player by using a buff on the enemy unit.",
["Options"] = {
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0,
0.55686274509804,
0.035294117647059,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Change the enemy nameplate color to this color when fixating you!",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do --max amount of segments is 20\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.Textures) then\n        for i = 1, scriptTable.config.segmentsAmount  do\n            local texture = unitFrame.felAnimation.Textures[i]\n            if (texture) then\n                texture:Hide()\n            end\n        end\n    end\n    \n    if (unitFrame.felAnimation and unitFrame.felAnimation.textureStretched) then\n        local textureStretched = unitFrame.felAnimation.textureStretched\n        if (textureStretched) then\n            textureStretched:Hide()\n        end\n    end\nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    if (not envTable.NextPercent) then\n        return\n    end\n    \n    local castBar = unitFrame.castBar\n    \n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then --eeror here, compare with nil\n        local nextPercent = 100  / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514190,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_glow",
["Enabled"] = true,
["Revision"] = 547,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (self.channeling) then\n        return \n    end\n    \n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        --texture:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.trailColor))\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    local customColor = scriptTable.config.castColor[tostring(envTable._SpellID)]\n    Plater.SetCastBarColorForScript(self, true, customColor or scriptTable.config.castBarColor, envTable)\nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Glowing [P]",
["SpellIds"] = {
376644,
373017,
386781,
384823,
372735,
385536,
392398,
375596,
387135,
360850,
212784,
199033,
199034,
200969,
394512,
397881,
396020,
374430,
373429,
384353,
265376,
193941,
411002,
169445,
},
["Desc"] = "Show a different animation for the cast bar.",
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 7,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.95686274509804,
1,
0.98823529411765,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.85882352941176,
0.43137254901961,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 7,
["Key"] = "castColor",
["Value"] = {
{
"385536",
"maroon",
},
{
"198750",
"midnightblue",
},
{
"360850",
"lime",
},
{
"212784",
"deepskyblue",
},
{
"207980",
"midnightblue",
},
{
"199033",
"gold",
},
{
"199034",
"gold",
},
{
"200969",
"orange",
},
{
"394512",
"indigo",
},
{
"397881",
"deepskyblue",
},
{
"396020",
"khaki",
},
},
["Name"] = "Cast Color by SpellID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Insert the Spell ID in the to Key and a color name into the Value",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    \n    --set the castbar config\n    envTable.configAltCastBar = {\n        iconTexture = \"\",\n        iconTexcoord = {0.1, 0.9, 0.1, 0.9},\n        iconAlpha = 1,\n        iconSize = 14,\n        \n        text = \"Boom!\",\n        textSize = 9,\n        \n        texture = [[Interface\\AddOns\\Plater\\images\\bar_background]],\n        color = \"silver\",\n        \n        isChanneling = false,\n        canInterrupt = false,\n        \n        height = 2,\n        width = Plater.db.profile.plate_config.enemynpc.health_incombat[1],\n        \n        spellNameAnchor = {side = 3, x = 0, y = -2},\n        timerAnchor = {side = 5, x = 0, y = -2},\n    }    \n    \n    function envTable.ShowAltCastBar(npcInfo, unitFrame, unitId, customTime, customStart)\n        --show the cast bar\n        if (npcInfo.timerId) then\n            local barObject = Plater.GetBossTimer(npcInfo.timerId)\n            if (barObject) then\n                if (npcInfo.remaining) then\n                    local timeLeft = barObject.timer + barObject.start - GetTime()\n                    if (timeLeft > npcInfo.remaining) then\n                        return\n                    end\n                end\n                \n                config.text = npcInfo.name\n                \n                if (npcInfo.spellIcon) then\n                    local _, _, iconTexture = GetSpellInfo(npcInfo.spellIcon)\n                    config.iconTexture = iconTexture\n                else\n                    config.iconTexture = \"\"\n                end\n                \n                Plater.SetAltCastBar(unitFrame.PlateFrame, config, barObject.timer, customStart or barObject.start, npcInfo.altCastId)\n            end\n        else\n            Plater.SetAltCastBar(unitFrame.PlateFrame, config, customTime or npcInfo.timer, customStart, npcInfo.altCastId)            \n        end    \n        \n        \n    end\nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable._SpellID == 191284) then\n        Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.70, GetTime(), 191284)\n        \n        C_Timer.After(4.75, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 5.30, GetTime(), 191284)\n        end)\n        \n        C_Timer.After(4.75 + 5.30, function()\n                Plater.SetAltCastBar(unitFrame.PlateFrame, envTable.configAltCastBar, 4.30, GetTime(), 191284)\n                C_Timer.After(4.50, function() unitFrame.castBar2:Hide() end)\n        end)\n    end\n    \nend",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1671066705,
["url"] = "",
["Icon"] = 134229,
["Enabled"] = true,
["Revision"] = 37,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Effect After Cast [P]",
["SpellIds"] = {
191284,
},
["Desc"] = "Start extra cast bars for effects after the cast is done. Setup the effect on On Hide script.",
["Options"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.PlaySwipeAnimation(unitFrame)\n        unitFrame.CastSwipeTexture:Show()\n        unitFrame.CastSwipeAnimation:Play()\n        unitFrame.StartSwipeAnimation:Play()\n    end\n    \n    function envTable.StopSwipeAnimation(unitFrame)\n        unitFrame.EndSwipeAnimation:Play()\n        C_Timer.After(0.21, function()\n                unitFrame.CastSwipeAnimation:Stop()\n                unitFrame.CastSwipeTexture:Hide()\n        end)\n    end\n    \n    function envTable.CreateSwipeTextureAndAnimations(unitFrame)\n        if (unitFrame.CastSwipeTexture) then\n            return\n        end\n        \n        local swipeTexture = unitFrame:CreateTexture(nil, \"overlay\")\n        swipeTexture:SetTexture([[Interface\\AddOns\\Plater\\images\\circular_swipe]])\n        swipeTexture:SetPoint(\"center\", 0, 0)\n        swipeTexture:SetSize(64, 64)\n        swipeTexture:Hide()\n        \n        unitFrame.CastSwipeTexture = swipeTexture\n        \n        --rotation animation\n        unitFrame.CastSwipeAnimation = Plater:CreateAnimationHub(swipeTexture)\n        unitFrame.CastSwipeAnimation:SetLooping(\"repeat\")\n        unitFrame.CastSwipeAnimation.Rotation = Plater:CreateAnimation(unitFrame.CastSwipeAnimation, \"rotation\", 1, 1, 360)\n        \n        --starting animation\n        unitFrame.StartSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, function()swipeTexture:Show() end)\n        unitFrame.StartSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"alpha\", 1, 0.2, 0, 1)\n        unitFrame.StartSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.StartSwipeAnimation, \"scale\", 1, 0.2, 1.3, 1.3, 1, 1)        \n        \n        --finished animation\n        unitFrame.EndSwipeAnimation = Plater:CreateAnimationHub(swipeTexture, nil, function()swipeTexture:Hide() end)\n        unitFrame.EndSwipeAnimation.Alpha = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"alpha\", 1, 0.2, 1, 0)\n        unitFrame.EndSwipeAnimation.Scale = Plater:CreateAnimation(unitFrame.EndSwipeAnimation, \"scale\", 1, 0.2, 1, 1, 1.3, 1.3)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.StopSwipeAnimation(unitFrame)\nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "		function (self, unitId, unitFrame, envTable, scriptTable)\n			--insert code here\n			\n		end\n	",
["Time"] = 1670428019,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\circular_swipe",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Butazzul-Valdrakken",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.CreateSwipeTextureAndAnimations(unitFrame)\n    \n    local options = scriptTable.config\n    \n    local targetScale = scriptTable.config.textureScale\n    \n    --swipe rotation duration    \n    unitFrame.CastSwipeAnimation.Rotation:SetDuration(scriptTable.config.rotationDuration)\n    \n    --swipe texture settings\n    unitFrame.CastSwipeTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.textureColor))\n    unitFrame.CastSwipeTexture:SetScale(targetScale)\n    unitFrame.CastSwipeTexture:SetAlpha(scriptTable.config.textureAlpha)  \n    \n    unitFrame.StartSwipeAnimation.Alpha:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Alpha:SetFromAlpha(scriptTable.config.textureStartAlpha)\n    unitFrame.StartSwipeAnimation.Alpha:SetToAlpha(scriptTable.config.textureAlpha)\n    \n    unitFrame.StartSwipeAnimation.Scale:SetDuration(scriptTable.config.animStartDuration)\n    unitFrame.StartSwipeAnimation.Scale:SetScaleTo(targetScale, targetScale)\n    \n    unitFrame.EndSwipeAnimation.Scale:SetDuration(0.1)\n    unitFrame.EndSwipeAnimation.Alpha:SetDuration(0.1)\n    \n    --start playing\n    envTable.PlaySwipeAnimation(unitFrame)    \n    \nend\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Circle AoE [P]",
["Desc"] = "Play a animation when the spell effect is an circular AoE around the caster.",
["SpellIds"] = {
385916,
386063,
388822,
373087,
397785,
106864,
193660,
198263,
387910,
370766,
375591,
384336,
209404,
209378,
210875,
396001,
397899,
386559,
382555,
258672,
258777,
257756,
257784,
256405,
256589,
393793,
388046,
375079,
390290,
369811,
369703,
226287,
410999,
372561,
256882,
172578,
412063,
},
["Options"] = {
{
["Type"] = 2,
["Max"] = 0.3,
["Desc"] = "Rotation Duration",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.15,
["Key"] = "rotationDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Rotation Duration",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.5,
["Desc"] = "Animation Start Duration",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.3,
["Key"] = "animStartDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Animation Start Duration",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha when the animation start playing, this effect in intended to catch the player attention",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "textureStartAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Start Alpha",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Option 5",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1.2,
["Desc"] = "Texture Scale",
["Min"] = 0.6,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "textureScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Texture Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "textureAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    envTable.lifePercent = { --dragonflight\n        [197697] = {50}, --Flamegullet\n        [59544] = {50}, --The Nodding Tiger\n        [186227] = {20}, --Monstrous Decay\n        [184020] = {40}, -- Hulking Berserker\n        [91005] = {20}, --Naraxas\n    }\n    \n    \n    function envTable.CreateMarker(unitFrame)\n        unitFrame.healthMarker = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthMarker:SetColorTexture(1, 1, 1)\n        unitFrame.healthMarker:SetSize(1, unitFrame.healthBar:GetHeight())\n        \n        unitFrame.healthOverlay = unitFrame.healthBar:CreateTexture(nil, \"overlay\")\n        unitFrame.healthOverlay:SetColorTexture(1, 1, 1)\n        unitFrame.healthOverlay:SetSize(1, unitFrame.healthBar:GetHeight())\n    end\n    \n    function envTable.UpdateMarkers(unitFrame)\n        local markersTable = envTable.lifePercent[envTable._NpcID]\n        if (markersTable) then\n            local unitLifePercent = envTable._HealthPercent / 100\n            for i, percent in ipairs(markersTable) do\n                percent = percent / 100\n                if (unitLifePercent > percent) then\n                    if (not unitFrame.healthMarker) then\n                        envTable.CreateMarker(unitFrame)\n                    end\n                    \n                    unitFrame.healthMarker:Show()\n                    local width = unitFrame.healthBar:GetWidth()\n                    unitFrame.healthMarker:SetPoint(\"left\", unitFrame.healthBar, \"left\", width*percent, 0)\n                    \n                    local overlaySize = width * (unitLifePercent - percent)\n                    unitFrame.healthOverlay:SetWidth(overlaySize)\n                    unitFrame.healthOverlay:SetPoint(\"left\", unitFrame.healthMarker, \"right\", 0, 0)\n                    \n                    unitFrame.healthMarker:SetVertexColor(Plater:ParseColors(scriptTable.config.indicatorColor))\n                    unitFrame.healthMarker:SetAlpha(scriptTable.config.indicatorAlpha)\n                    \n                    unitFrame.healthOverlay:SetVertexColor(Plater:ParseColors(scriptTable.config.fillColor))\n                    unitFrame.healthOverlay:SetAlpha(scriptTable.config.fillAlpha)\n                    \n                    return\n                end\n            end --end for\n            \n            if (unitFrame.healthMarker and unitFrame.healthMarker:IsShown()) then\n                unitFrame.healthMarker:Hide()\n                unitFrame.healthOverlay:Hide()\n            end\n        end\n    end\nend      \n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (unitFrame.healthMarker) then\n        unitFrame.healthMarker:Hide()\n        unitFrame.healthOverlay:Hide()\n    end\nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
["Time"] = 1683596223,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\health_indicator",
["Enabled"] = true,
["Revision"] = 146,
["semver"] = "",
["Author"] = "Aelerolor-Torghast",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Desc"] = "Place a marker into the health bar to indicate when the unit will change phase or cast an important spell.",
["NpcNames"] = {
"197697",
"59544",
"186227",
"184020",
"91005",
},
["SpellIds"] = {
},
["PlaterCore"] = 1,
["Name"] = "Add - Health Markers [P]",
["version"] = -1,
["Options"] = {
{
["Type"] = 5,
["Name"] = "Option 1",
["Value"] = "Add markers into the health bar to remind you about boss abilities at life percent.",
["Key"] = "option1",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Name"] = "blank line",
["Value"] = 0,
["Key"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Name"] = "Vertical Line Color",
["Value"] = {
1,
1,
1,
1,
},
["Key"] = "indicatorColor",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Indicator color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Indicator alpha.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.79,
["Key"] = "indicatorAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Vertical Line Alpha",
},
{
["Type"] = 6,
["Key"] = "",
["Value"] = 0,
["Name"] = "blank line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "fillColor",
["Value"] = {
1,
1,
1,
1,
},
["Name"] = "Fill Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Fill color.",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Fill alpha.",
["Min"] = 0,
["Key"] = "fillAlpha",
["Value"] = 0.2,
["Name"] = "Fill Alpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Fraction"] = true,
},
},
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.UpdateMarkers(unitFrame)\nend\n\n\n",
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    envTable.NameplateColor = scriptTable.config.nameplateColor\n    envTable.NameplateSizeOffset = scriptTable.config.nameplateSizeOffset\n    \n    unitFrame.UnitImportantSkullTexture = unitFrame.UnitImportantSkullTexture or unitFrame:CreateTexture(nil, \"background\")\n    \n    unitFrame.UnitImportantSkullTexture:Hide()\nend\n\n--[=[\n\n154564 - debug\n\nUsing spellIDs for multi-language support\n\n196548 = ancient branch (academy dungeon)\n195580, 195821, 195820 = nokhub saboteur\n189886 = blazebound firestorm\n75966 = Defiled Spirit\n102019 = Stormforged Obliterator\n    187159 = Shrieking Whelp\n194897 = stormsurge totem\n104251 = duskwatch sentry\n101326 = honored ancestor\n189669 = binding speakl netharius\n192464 = raging ember neltharius\n--]=]\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable)\n    Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)   \n    \n    --restore the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight)    \n    \n    unitFrame.UnitImportantSkullTexture:Hide()\n    Plater.DenyColorChange(unitFrame, false)\nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --check if can change the nameplate color\n    if (scriptTable.config.changeNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n\n\n",
["Time"] = 1670423785,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\skullbones_64",
["Enabled"] = true,
["Revision"] = 572,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (envTable.dotAnimation) then\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation)\n    end\n    \n    envTable.dotAnimation = Plater.PlayDotAnimation(unitFrame.healthBar, 2, scriptTable.config.dotsColor, 3, 4) \n    \n    --increase the nameplate size\n    local nameplateHeight = Plater.db.profile.plate_config.enemynpc.health_incombat [2]\n    unitFrame.healthBar:SetHeight (nameplateHeight + envTable.NameplateSizeOffset)\n    \n    unitFrame.UnitImportantSkullTexture:Show()\n    \n    --color priority:\n    local npcIdString = tostring(envTable._NpcID)\n    envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)    \n    \n    if (scriptTable.config.showExtraTexture) then\n        unitFrame.UnitImportantSkullTexture:SetVertexColor(Plater:ParseColors(scriptTable.config.skullColor))\n        unitFrame.UnitImportantSkullTexture:SetAlpha(scriptTable.config.skullAlpha)\n        unitFrame.UnitImportantSkullTexture:SetScale(scriptTable.config.skullScale)\n        unitFrame.UnitImportantSkullTexture:SetTexture([[Interface/AddOns/Plater/media/x_64]])\n        unitFrame.UnitImportantSkullTexture:ClearAllPoints()\n        unitFrame.UnitImportantSkullTexture:SetPoint(\"right\", unitFrame.healthBar, \"left\", -2, 0)\n        unitFrame.UnitImportantSkullTexture:SetSize(28, 28)\n        unitFrame.UnitImportantSkullTexture:Show()\n    else\n        unitFrame.UnitImportantSkullTexture:Hide()\n    end\n    \n    --rules for some npcs\n    if (envTable._NpcID == 194895) then --unstable squall (explode at dying\n        unitFrame.UnitImportantSkullTexture:Hide()\n        Plater.StopDotAnimation(unitFrame.healthBar, envTable.dotAnimation) \n    end\n    \n    if (scriptTable.config.changeNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        \n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.nameplateColor)        \n        \n        Plater.DenyColorChange(unitFrame, true)\n    end\n    \nend\n\n\n\n\n",
["NpcNames"] = {
"196548",
"195580",
"195820",
"195821",
"189886",
"75966",
"102019",
"187159",
"194897",
"104251",
"101326",
"189669",
"192464",
190381,
92538,
192464,
131009,
127315,
133361,
136330,
214117,
212483,
101008,
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Add - Important [P]",
["Desc"] = "Change the color and highlight a nameplate of an important Add. Add the unit name or NpcID into the trigger box to add more.",
["SpellIds"] = {
},
["Options"] = {
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option6",
["Value"] = "Enter the npc name or npcId in the \"Add Trigger\" box and hit \"Add\".",
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "change to true to change the color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
1,
0,
0.52549019607843,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 2,
["Max"] = 6,
["Desc"] = "increase the nameplate height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 3,
["Key"] = "nameplateSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Size Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "dotsColor",
["Value"] = {
1,
0.71372550725937,
0,
0.56313106417656,
},
["Name"] = "Dot Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dot Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option10",
["Value"] = "Extra Texture",
["Name"] = "Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "Extra Texture",
},
{
["Type"] = 4,
["Key"] = "showExtraTexture",
["Value"] = false,
["Name"] = "Show Extra Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Extra Texture",
},
{
["Type"] = 1,
["Key"] = "skullColor",
["Value"] = {
1,
0.46274509803922,
0,
1,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Texture Color",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Alpha",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "skullAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Alpha",
},
{
["Type"] = 2,
["Max"] = 2,
["Desc"] = "Scale",
["Min"] = 0.4,
["Fraction"] = true,
["Value"] = 0.6,
["Key"] = "skullScale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Scale",
},
{
["Type"] = 7,
["Key"] = "npcColor",
["Value"] = {
{
"196548",
"forestgreen",
},
{
"195580",
"forestgreen",
},
{
"195820",
"forestgreen",
},
{
"195821",
"forestgreen",
},
{
"189886",
"forestgreen",
},
{
"75966",
"forestgreen",
},
{
"102019 ",
"forestgreen",
},
{
"187159",
"forestgreen",
},
{
"194897",
"forestgreen",
},
{
"104251",
"forestgreen",
},
},
["Name"] = "Npc Color By NpcID",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "Key is the npcID, value is the color name",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \nend\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1669340442,
["url"] = "",
["Icon"] = "interface/addons/plater/images/add_id_icon",
["Enabled"] = false,
["Revision"] = 161,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    \n    scriptTable.allAdds = {} \n    scriptTable.nextAddWave = 0\n    scriptTable.waveTime = 20\n    \n    function scriptTable.ArrangeNpcNumbers(GUID)\n        local spawnId = select(7, strsplit (\"-\", GUID))\n        spawnId = tonumber(spawnId, 16)\n        \n        if (spawnId) then\n            --check if this is a new wave of adds\n            if (GetTime() > scriptTable.nextAddWave) then\n                scriptTable.nextAddWave = GetTime() + scriptTable.waveTime\n                scriptTable.allAdds = {}\n            end\n            \n            local bIsAlreadyOnTheList = false\n            \n            for o = 1, #scriptTable.allAdds do\n                if (scriptTable.allAdds[o][1] == GUID) then\n                    bIsAlreadyOnTheList = true\n                end\n            end\n            \n            if (not bIsAlreadyOnTheList) then\n                scriptTable.allAdds[#scriptTable.allAdds+1] = {GUID, spawnId}\n            end\n        end\n        \n        table.sort(scriptTable.allAdds, function(t1, t2) return t1[2] < t2[2] end)\n        \n        --this is a \"loop\" because this is running each time a nameplate is added!\n        \n        for namePlateIndex, plateFrame in ipairs(Plater.GetAllShownPlates()) do\n            local unitFrame = plateFrame.unitFrame\n            \n            --get the unit GUID\n            local unitGUID = unitFrame.namePlateUnitGUID\n            \n            for addId = 1, #scriptTable.allAdds do\n                local addTable = scriptTable.allAdds[addId]\n                local addGUID = addTable[1]\n                \n                if (unitGUID == addGUID) then\n                    scriptTable.TagNameplate(unitFrame, unitGUID, addId)\n                    break\n                end\n            end\n            \n        end\n    end\n    \n    function scriptTable.TagNameplate(unitFrame, GUID, addId)\n        scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        \n        if (addId and addId >= 1 and addId <= 8) then\n            unitFrame.AddSpawnIDTexture:Show()\n            unitFrame.AddIcon:Show()\n            unitFrame.AddNumber:Show()\n            \n            local addTexture = \"Interface\\\\TargetingFrame\\\\UI-RaidTargetingIcon_\" .. addId\n            \n            unitFrame.AddIcon:SetTexture(addTexture)\n            unitFrame.AddNumber:SetText(addId)\n        end\n    end\n    \n    function scriptTable.CreateAddWidgetsForNameplate(unitFrame, GUID, addId)\n        if (not unitFrame.AddSpawnIDTexture) then\n            local healthBar = unitFrame.healthBar\n            \n            local textureBackground = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 5)\n            local addIcon = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 6)\n            local addNumber = healthBar.FrameOverlay:CreateFontString(nil, \"overlay\", \"GameFontNormal\", 6)           \n            \n            unitFrame.AddSpawnIDTexture = textureBackground\n            unitFrame.AddIcon = addIcon\n            unitFrame.AddNumber = addNumber\n        end\n    end    \nend\n\n--Creature-0-2085-1-11042-153285-0002F8DB2B --training dummy for testing\n--195138 Detonating Crystal\n--192955 dracomoc illusion\n--190294 nokhub stormcaster\n--76518 ritual of bones\n\n\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (unitFrame.AddSpawnIDTexture) then\n        unitFrame.AddSpawnIDTexture:Hide()\n        unitFrame.AddIcon:Hide()\n        unitFrame.AddNumber:Hide()\n    end\n    \n    scriptTable.ArrangeNpcNumbers(unitFrame.namePlateUnitGUID)\n    \n    local textureBackground = unitFrame.AddSpawnIDTexture\n    textureBackground:SetSize(22, 10)\n    textureBackground:ClearAllPoints()\n    textureBackground:SetPoint(\"bottomright\", unitFrame.healthBar, \"topright\", 0, 1)\n    \n    textureBackground:SetMask([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetTexture([[Interface\\AddOns\\Plater\\masks\\mask_smallrectangle_rounded1]])\n    textureBackground:SetVertexColor(0.1215, 0.1176, 0.1294, 1)\n    \n    \n    --textureBackground:SetMask([[Interface/ChatFrame/UI-ChatIcon-HotS]])\n    --    \"Interface/ChatFrame/UI-ChatIcon-HotS\"\n    \n    local addIcon = unitFrame.AddIcon\n    addIcon:ClearAllPoints()\n    addIcon:SetPoint(\"left\", textureBackground, \"left\", 2, 0)\n    addIcon:SetSize(10, 10)\n    \n    local addNumber = unitFrame.AddNumber\n    addNumber:ClearAllPoints()\n    addNumber:SetPoint(\"right\", textureBackground, \"right\", -2, 0)\n    DetailsFramework:SetFontSize(addNumber, 10)\n    \nend\n\n\n",
["NpcNames"] = {
"195138",
"192955",
"190294",
"76518",
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Add - Tag Number [P]",
["SpellIds"] = {
},
["Desc"] = "Put a number above multiples adds, numbers follow their respawn id.",
["Options"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --castbar color (when can be interrupted)\n    envTable.CastbarColor = scriptTable.config.castbarColor\n    \n    --flash duration\n    local CONFIG_BACKGROUND_FLASH_DURATION = scriptTable.config.flashDuration\n    \n    --add this value to the cast bar height\n    envTable.CastBarHeightAdd = scriptTable.config.castBarHeight\n    \n    --create a fast flash above the cast bar\n    envTable.FullBarFlash = envTable.FullBarFlash or Plater.CreateFlash (self, 0.05, 1, \"white\")\n    \n    --create a camera shake for the nameplate\n    envTable.FrameShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n    \n    --create a texture to use for a flash behind the cast bar\n    local backGroundFlashTexture = Plater:CreateImage (self, [[Interface\\ACHIEVEMENTFRAME\\UI-Achievement-Alert-Glow]], self:GetWidth()+60, self:GetHeight()+50, \"background\", {0, 400/512, 0, 170/256})\n    backGroundFlashTexture:SetBlendMode (\"ADD\")\n    backGroundFlashTexture:SetDrawLayer(\"OVERLAY\", 7)\n    backGroundFlashTexture:SetPoint (\"center\", self, \"center\")\n    backGroundFlashTexture:Hide()\n    \n    --create the animation hub to hold the flash animation sequence\n    envTable.BackgroundFlash = envTable.BackgroundFlash or Plater:CreateAnimationHub (backGroundFlashTexture, \n        function()\n            backGroundFlashTexture:Show()\n        end,\n        function()\n            backGroundFlashTexture:Hide()\n        end\n    )\n    \n    --create the flash animation sequence\n    envTable.BackgroundFlash.fadeIn = envTable.BackgroundFlash.fadeIn or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 1, CONFIG_BACKGROUND_FLASH_DURATION/2, 0, .75)\n    envTable.BackgroundFlash.fadeIn:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    envTable.BackgroundFlash.fadeOut = envTable.BackgroundFlash.fadeOut or Plater:CreateAnimation (envTable.BackgroundFlash, \"ALPHA\", 2, CONFIG_BACKGROUND_FLASH_DURATION/2, 1, 0)    \n    envTable.BackgroundFlash.fadeOut:SetDuration(CONFIG_BACKGROUND_FLASH_DURATION/2)\n    \n    --envTable.BackgroundFlash:Play() --envTable.BackgroundFlash:Stop()    \n    \n    \n    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end    \n    \n    unitFrame.castBar:SetHeight (envTable._DefaultHeight)\n    \n    --stop the camera shake\n    unitFrame:StopFrameShake (envTable.FrameShake)\n    \n    envTable.FullBarFlash:Stop()\n    envTable.BackgroundFlash:Stop()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \nend\n\n\n",
["Time"] = 1669324381,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\cast_bar_quickflash.tga",
["Enabled"] = true,
["Revision"] = 887,
["semver"] = "",
["Author"] = "Tercioo-Sylvanas",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --don't execute on battlegrounds and arenas\n    if (Plater.ZoneInstanceType == \"arena\" or Plater.ZoneInstanceType == \"pvp\") then\n        return\n    end\n    \n    --play flash animations\n    envTable.FullBarFlash:Play()\n    \n    --envTable.currentHeight = unitFrame.castBar:GetHeight()\n    \n    --restoring the default size (not required since it already restore in the hide script)\n    if (envTable.OriginalHeight) then\n        self:SetHeight (envTable.OriginalHeight)\n    end\n    \n    --increase the cast bar size\n    local height = self:GetHeight()\n    envTable.OriginalHeight = height\n    \n    self:SetHeight (height + envTable.CastBarHeightAdd)\n    \n    Plater.SetCastBarBorderColor (self, 1, .2, .2, 0.4)\n    \n    unitFrame:PlayFrameShake (envTable.FrameShake)\n    \n    Plater.SetCastBarColorForScript(self, scriptTable.config.useCastbarColor, scriptTable.config.castBarColor, envTable)\n    \n    envTable.BackgroundFlash:Play()\n    \n    unitFrame.castBar.Spark:SetHeight(unitFrame.castBar:GetHeight())\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Quick Flash [P]",
["Desc"] = "Play a very fast flash when the cast start",
["SpellIds"] = {
392640,
397888,
209033,
385029,
374563,
377341,
369675,
369365,
369411,
278961,
202108,
88186,
200630,
255824,
252781,
250096,
200248,
197797,
264520,
418202,
201839,
412012,
411958,
},
["Options"] = {
{
["Type"] = 6,
["Key"] = "option1",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option2",
["Value"] = "Produces a notable but fast effect in the cast bar when a spell from the 'Triggers' starts to cast.",
["Name"] = "Option 2",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option3",
["Value"] = "Enter the spell name or spellID of the Spell in the Add Trigger box and hit \"Add\".",
["Name"] = "Option 3",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useCastbarColor",
["Value"] = true,
["Name"] = "Cast Bar Color Enabled",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "When enabled, changes the cast bar color,",
},
{
["Type"] = 1,
["Key"] = "castBarColor",
["Value"] = {
1,
0.43137254901961,
0,
1,
},
["Name"] = "Cast Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the cast bar.",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Blank Line",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts it flash rapidly, adjust how fast it flashes. Value is milliseconds.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "flashDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Flash Duration",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Increases the cast bar height by this value",
["Min"] = 0,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "castBarHeight",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Cast Bar Height Mod",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "When the cast starts, there's a small shake in the nameplate, this settings controls how long it takes.",
["Min"] = 0.1,
["Fraction"] = true,
["Value"] = 0.1,
["Key"] = "shakeDuration",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Duration",
},
{
["Type"] = 2,
["Max"] = 200,
["Desc"] = "How strong is the shake.",
["Min"] = 10,
["Fraction"] = false,
["Value"] = 25,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 30,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n--190187 draconic image\n--189893 infused whelp\n--99922 Ebonclaw Packmate\n--104822 flames of woe",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.onShowAddToKillFlash:Stop()\n    \nend\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor(unitFrame, envTable.NameplateColor)\n    end\nend\n\n\n\n\n",
["Time"] = 1670427654,
["url"] = "",
["Icon"] = "interface/addons/plater/media/exclamation_64",
["Enabled"] = true,
["Revision"] = 162,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    unitFrame.onShowAddToKillFlash = unitFrame.onShowAddToKillFlash or Plater.CreateFlash (unitFrame.healthBar, 0.25, 1, \"white\")\n    \n    if (scriptTable.config.useFlash) then\n        unitFrame.onShowAddToKillFlash:Play()\n    end\n    \n    if (scriptTable.config.useNameplateColor) then\n        local npcIdString = tostring(envTable._NpcID)\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.npcColor[npcIdString], scriptTable.config.healthBarColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end\nend\n\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
"190187",
"189893",
"99922",
"104822",
129758,
190426,
186696,
101075,
100818,
98081,
52019,
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Add - Warning [P]",
["Desc"] = "Change the color of  add",
["SpellIds"] = {
},
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = true,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "healthBarColor",
["Value"] = {
1,
0.43921571969986,
0.4588235616684,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option5",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useFlash",
["Value"] = true,
["Name"] = "Flash Nameplate",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Flash Nameplate",
},
{
["Type"] = 7,
["Key"] = "npcColor",
["Value"] = {
{
"189893",
"olivedrab",
},
{
"190187",
"olivedrab",
},
{
"99922",
"olivedrab",
},
{
"153285",
"olivedrab",
},
{
"104822",
"olivedrab",
},
},
["Name"] = "NpcID to Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_list",
["Desc"] = "If the npc isn't on this list, use the default color set in the Health Bar Color",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n\n--Scorchling 194622\n--Scorchling 190205\n--197398  Hungry Lasher\n--77006 corpse skitterling\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --restoring and color state and scale even if disabled, maybe the player disabled during the combat\n    Plater.DenyColorChange(unitFrame, false)\n    unitFrame.healthBar:SetScale(unitFrame.healthBar._savedOriginalScale)\n    \nend\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    end\n    \nend\n\n\n",
["Time"] = 1670427838,
["url"] = "",
["Icon"] = "interface/addons/plater/media/duck_64",
["Enabled"] = true,
["Revision"] = 111,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (scriptTable.config.useNameplateColor) then\n        envTable.NameplateColor = Plater.GetColorByPriority(unitFrame, scriptTable.config.nameplateColor)\n        Plater.DenyColorChange(unitFrame, true)\n    end    \n    \n    unitFrame.healthBar._savedOriginalScale = unitFrame.healthBar:GetScale()\n    \n    if (scriptTable.config.useNameplateScale) then\n        unitFrame.healthBar:SetScale(scriptTable.config.scale)\n    end\n    \nend\n\n\n\n\n",
["NpcNames"] = {
"194622",
"190205",
"197398",
"77006",
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Add - Non Elite Trash [P]",
["Desc"] = "",
["SpellIds"] = {
},
["Options"] = {
{
["Type"] = 4,
["Key"] = "useNameplateColor",
["Value"] = false,
["Name"] = "Change Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Color",
},
{
["Type"] = 1,
["Key"] = "nameplateColor",
["Value"] = {
0.062745101749897,
0.062745101749897,
0.094117656350136,
1,
},
["Name"] = "Nameplate Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Nameplate Color",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useNameplateScale",
["Value"] = true,
["Name"] = "Change Nameplate Scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Change Nameplate Scale",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Nameplate Scale",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.8,
["Key"] = "scale",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Nameplate Scale",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (not healthBar.absorbBar) then\n        healthBar.absorbBar = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n        healthBar.absorbBar:Hide()\n    end\n    \n    if (not healthBar.absorbSpark) then\n        healthBar.absorbSpark = healthBar.FrameOverlay:CreateTexture(nil, \"overlay\")\n        healthBar.absorbSpark:SetTexture([[Interface\\CastingBar\\UI-CastingBar-Spark]])\n        healthBar.absorbSpark:SetBlendMode(\"ADD\")\n        healthBar.absorbSpark:Hide()\n    end\n    \nend\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Hide()    \n    healthBar.absorbSpark:Hide()\n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    local maxValue = healthBar.absorbBar.MaxValue\n    local currentValue = UnitGetTotalAbsorbs(unitId) or 0\n    \n    if (currentValue > 0) then\n        local minValue = 0\n        \n        local percent = currentValue / maxValue\n        healthBar.absorbBar:SetTexCoord(0, percent, 0, 1)\n        healthBar.absorbBar:SetWidth(percent * healthBar:GetWidth())\n        \n        healthBar.absorbSpark:SetPoint(\"left\", healthBar, \"left\", percent * healthBar:GetWidth() - 16, 0)\n        \n    else\n        healthBar.absorbBar:Hide()    \n        healthBar.absorbSpark:Hide()\n    end\n    \n    self.ThrottleUpdate = 0\n    \nend\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669325411,
["url"] = "",
["Icon"] = "interface/addons/plater/images/cast_bar - absorb",
["Enabled"] = true,
["Revision"] = 101,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    if (not UnitGetTotalAbsorbs) then\n        return\n    end\n    \n    local healthBar = unitFrame.healthBar\n    \n    healthBar.absorbBar:Show()\n    healthBar.absorbSpark:Show()\n    \n    healthBar.absorbBar:SetTexture([[Interface\\RaidFrame\\Shield-Fill]])\n    \n    healthBar.absorbBar:ClearAllPoints()    \n    healthBar.absorbBar:SetPoint(\"topleft\", healthBar, \"topleft\", 0, 0)\n    healthBar.absorbBar:SetPoint(\"bottomleft\", healthBar, \"bottomleft\", 0, 0)\n    \n    healthBar.absorbBar:SetAlpha(1)\n    \n    healthBar.absorbBar.MaxValue = UnitGetTotalAbsorbs(unitId) or 0\n    healthBar.absorbBar.MinValue = 0\nend\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Shield Interrupt [P]",
["Desc"] = "When the caster has a shield and only when the shield is removed the cast can be interrupted",
["SpellIds"] = {
373688,
391050,
},
["Options"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n    local castBarHeight = castBar:GetHeight()\n    \n    unitFrame.felAnimation = unitFrame.felAnimation or {}\n    \n    if (not unitFrame.felAnimation.textureStretched) then\n        unitFrame.felAnimation.textureStretched = castBar:CreateTexture(nil, \"overlay\", nil, 5)\n    end\n    \n    if (not unitFrame.stopCastingX) then\n        unitFrame.stopCastingX = castBar.FrameOverlay:CreateTexture(nil, \"overlay\", nil, 7)\n        unitFrame.stopCastingX:SetPoint(\"center\", unitFrame.castBar.Spark, \"center\", 0, 0)\n        unitFrame.stopCastingX:SetTexture([[Interface\\AddOns\\Plater\\Media\\stop_64]])\n        unitFrame.stopCastingX:SetSize(16, 16)\n        unitFrame.stopCastingX:Hide()\n    end\n    \n    if (not unitFrame.felAnimation.Textures) then\n        unitFrame.felAnimation.Textures = {}\n        \n        for i = 1, 20 do\n            local texture = castBar:CreateTexture(nil, \"overlay\", nil, 6)\n            unitFrame.felAnimation.Textures[i] = texture            \n            \n            texture.animGroup = texture.animGroup or texture:CreateAnimationGroup()\n            local animationGroup = texture.animGroup\n            animationGroup:SetToFinalAlpha(true)            \n            animationGroup:SetLooping(\"NONE\")\n            \n            texture:SetTexture([[Interface\\COMMON\\XPBarAnim]])\n            texture:SetTexCoord(0.2990, 0.0010, 0.0010, 0.4159)\n            texture:SetBlendMode(\"ADD\")\n            \n            texture.scale = animationGroup:CreateAnimation(\"SCALE\")\n            texture.scale:SetTarget(texture)\n            \n            texture.alpha = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha:SetTarget(texture)\n            \n            texture.alpha2 = animationGroup:CreateAnimation(\"ALPHA\")\n            texture.alpha2:SetTarget(texture)\n        end\n    end\n    \n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:Hide()\n    end\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Hide()    \n    unitFrame.stopCastingX:Hide()\n    \n    self.Text:SetDrawLayer(\"overlay\", 0)\n    self.Spark:SetDrawLayer(\"overlay\", 3)\n    self.Spark:Show()\n    \nend\n\n\n\n\n\n\n",
["OptionsValues"] = {
},
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    local castBar = unitFrame.castBar\n    local textures = unitFrame.felAnimation.Textures\n    \n    if (envTable._CastPercent > envTable.NextPercent) then\n        local nextPercent = 100 / scriptTable.config.segmentsAmount\n        \n        textures[envTable.CurrentTexture]:Show()\n        textures[envTable.CurrentTexture].animGroup:Play()\n        \n        envTable.NextPercent = envTable.NextPercent + nextPercent \n        envTable.CurrentTexture = envTable.CurrentTexture + 1\n        \n        --print(envTable.NextPercent, envTable.CurrentTexture)\n        \n        if (envTable.CurrentTexture == #textures) then\n            envTable.NextPercent = 98\n        elseif (envTable.CurrentTexture > #textures) then\n            envTable.NextPercent = 999\n        end\n    end\n    \n    local normalizedPercent = envTable._CastPercent / 100\n    local textureStretched = unitFrame.felAnimation.textureStretched\n    local point = DetailsFramework:GetBezierPoint(normalizedPercent, 0, 0.001, 1)\n    textureStretched:SetPoint(\"left\", castBar, \"left\", point * envTable.castBarWidth, 0)\n    \n    self.ThrottleUpdate = 0\nend",
["Time"] = 1672514185,
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\media\\stop_64",
["Enabled"] = true,
["Revision"] = 506,
["semver"] = "",
["Author"] = "Terciob",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    local castBar = unitFrame.castBar\n    envTable.castBarWidth = castBar:GetWidth()\n    castBar.Spark:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.sparkColor))\n    \n    local textureStretched = unitFrame.felAnimation.textureStretched\n    textureStretched:Show()\n    textureStretched:SetVertexColor(DetailsFramework:ParseColors(scriptTable.config.glowColor))\n    textureStretched:SetAtlas(\"XPBarAnim-OrangeTrail\")\n    textureStretched:ClearAllPoints()\n    textureStretched:SetPoint(\"right\", castBar.Spark, \"center\", 0, 0)\n    textureStretched:SetHeight(castBar:GetHeight())\n    textureStretched:SetBlendMode(\"ADD\") \n    textureStretched:SetAlpha(0.5)\n    textureStretched:SetDrawLayer(\"overlay\", 7)\n    \n    for i = 1, scriptTable.config.segmentsAmount  do\n        local texture = unitFrame.felAnimation.Textures[i]\n        texture:SetVertexColor(1, 1, 1, 1)\n        texture:SetDesaturated(true)\n        \n        local castBarPortion = castBar:GetWidth()/scriptTable.config.segmentsAmount\n        \n        texture:SetSize(castBarPortion+5, castBar:GetHeight())\n        texture:SetDrawLayer(\"overlay\", 6)\n        \n        texture:ClearAllPoints()\n        if (i == scriptTable.config.segmentsAmount) then\n            texture:SetPoint(\"right\", castBar, \"right\", 0, 0)\n        else\n            texture:SetPoint(\"left\", castBar, \"left\", (i-1)*castBarPortion, 2)\n        end\n        \n        texture:SetAlpha(0)\n        texture:Hide()\n        \n        texture.scale:SetOrder(1)\n        texture.scale:SetDuration(0.5)\n        texture.scale:SetScaleFrom(0.2, 1)\n        texture.scale:SetScaleTo(1, 1.5)\n        texture.scale:SetOrigin(\"right\", 0, 0)\n        \n        local durationTime = DetailsFramework:GetBezierPoint(i / scriptTable.config.segmentsAmount, 0.2, 0.01, 0.6)\n        local duration = abs(durationTime-0.6)\n        --local duration = 0.6 --debug\n        \n        texture.alpha:SetOrder(1)\n        texture.alpha:SetDuration(0.05)\n        texture.alpha:SetFromAlpha(0)\n        texture.alpha:SetToAlpha(0.4)\n        \n        texture.alpha2:SetOrder(1)\n        texture.alpha2:SetDuration(duration) --0.6\n        texture.alpha2:SetStartDelay(duration)\n        texture.alpha2:SetFromAlpha(0.5)\n        texture.alpha2:SetToAlpha(0)\n    end\n    \n    unitFrame.stopCastingX:Show()\n    \n    envTable.CurrentTexture = 1\n    envTable.NextPercent  = 100  / scriptTable.config.segmentsAmount\n    \n    self.Text:SetDrawLayer(\"artwork\", 7)\n    self.Spark:SetDrawLayer(\"artwork\", 7)\n    self.Spark:Hide()\nend\n\n\n\n\n\n\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - Stop Casting [P]",
["SpellIds"] = {
377004,
381516,
196543,
199726,
200291,
268202,
},
["Desc"] = "Just stop casting",
["Options"] = {
{
["Type"] = 2,
["Max"] = 20,
["Desc"] = "Need a /reload",
["Min"] = 5,
["Fraction"] = false,
["Value"] = 20,
["Key"] = "segmentsAmount",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Amount of Segments",
},
{
["Type"] = 1,
["Key"] = "sparkColor",
["Value"] = {
0.95686274509804,
1,
0.98823529411765,
1,
},
["Name"] = "Spark Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 1,
["Key"] = "glowColor",
["Value"] = {
0.85882352941176,
0.43137254901961,
1,
1,
},
["Name"] = "Glow Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    function envTable.CreateWidgets()\n        --create a camera shake for the nameplate\n        if (not unitFrame.AddExplosionOnDieShake) then\n            unitFrame.AddExplosionOnDieShake = Plater:CreateFrameShake (unitFrame, scriptTable.config.shakeDuration, scriptTable.config.shakeAmplitude, scriptTable.config.shakeFrequency, false, false, 0, 1, 0.05, 0.1, Plater.GetPoints (unitFrame))\n        end\n        \n        if (not unitFrame.AddExplosionOnDieBackground) then\n            unitFrame.AddExplosionOnDieBackground = unitFrame.healthBar:CreateTexture(nil, \"background\")\n            unitFrame.AddExplosionOnDieBackground:SetAllPoints(unitFrame.healthBar)\n            unitFrame.AddExplosionOnDieBackground:SetColorTexture(1, 0, 0, 1)\n        end\n    end\n    \nend\n\n--194895 = unstable squall\n--105703 = mana wyrm\n--59598 = lesser sha\n--58319 = lesser sha\n\n\n\n\n\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    healthBar:SetReverseFill(false)\n    \n    if (unitFrame.AddExplosionOnDieShake) then\n        unitFrame:StopFrameShake (unitFrame.AddExplosionOnDieShake)    \n    end\n    \n    if (unitFrame.AddExplosionOnDieBackground) then\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n\n\n",
["ScriptType"] = 3,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (envTable._HealthPercent < 50) then\n        local alpha = DetailsFramework:MapRangeClamped(0, 50, 0.5, 0, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieBackground:SetAlpha(alpha)\n    else\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    end\n    \n    if (envTable._HealthPercent < 15 and scriptTable.config.useShake) then\n        local shakeAmpliture = DetailsFramework:MapRangeClamped(0.001, 15, 10, 1, envTable._HealthPercent)\n        \n        unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude * shakeAmpliture\n        unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n        \n        unitFrame:PlayFrameShake (unitFrame.AddExplosionOnDieShake)\n    end\n    \n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Time"] = 1669340350,
["url"] = "",
["Icon"] = "interface/addons/plater/media/radio_64",
["Enabled"] = true,
["Revision"] = 106,
["semver"] = "",
["Author"] = "Huugg-Valdrakken",
["Initialization"] = "function (scriptTable)\n    --insert code here\n    \nend\n\n\n",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local healthBar = unitFrame.healthBar\n    \n    if (scriptTable.config.useReverse) then\n        healthBar:SetReverseFill(true)\n    end\n    \n    --unitFrame.AddExplosionOnDieShake\n    \n    envTable.CreateWidgets()\n    \n    unitFrame.AddExplosionOnDieShake.OriginalAmplitude = scriptTable.config.shakeAmplitude\n    unitFrame.AddExplosionOnDieShake.OriginalDuration = 0.120\n    unitFrame.AddExplosionOnDieShake.OriginalFrequency = scriptTable.config.shakeFrequency\n    \n    if (scriptTable.config.useBackground) then\n        unitFrame.AddExplosionOnDieBackground:Show()\n        unitFrame.AddExplosionOnDieBackground:SetAlpha(0)\n    else\n        unitFrame.AddExplosionOnDieBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["NpcNames"] = {
"194895",
"105703",
"59598",
"58319",
200388,
189299,
131402,
135052,
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Add - Explode on Die [P]",
["Desc"] = "",
["SpellIds"] = {
},
["Options"] = {
{
["Type"] = 4,
["Key"] = "useReverse",
["Value"] = false,
["Name"] = "Reverse Health Bar",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Option 6",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useShake",
["Value"] = false,
["Name"] = "Enable Shake",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "How strong is the shake.",
["Min"] = 0.05,
["Fraction"] = true,
["Value"] = 0.2,
["Key"] = "shakeAmplitude",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Amplitude",
},
{
["Type"] = 2,
["Max"] = 80,
["Desc"] = "How fast the shake moves.",
["Min"] = 1,
["Fraction"] = true,
["Value"] = 70,
["Key"] = "shakeFrequency",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Shake Frequency",
},
{
["Type"] = 6,
["Key"] = "option7",
["Value"] = 0,
["Name"] = "Option 7",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "useBackground",
["Value"] = true,
["Name"] = "Show Red Background",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show Red Background",
},
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \n    local plateFrame = unitFrame.PlateFrame\n    \n    if (not plateFrame.BWC_RedBackground) then\n        plateFrame.BWC_RedBackground = plateFrame:CreateTexture(nil, \"background\")\n        plateFrame.BWC_RedBackground:SetAllPoints()\n    end\n    \n    plateFrame.BWC_RedBackground:SetTexture([[Interface/AddOns/Plater/masks/mask1]])\n    plateFrame.BWC_RedBackground:Hide()\n    \n    function envTable.ShowBackground(unitFrame)\n        local plateFrame = unitFrame.PlateFrame\n        plateFrame.BWC_RedBackground:SetVertexColor(1, 0, 0, 0.4)\n        plateFrame.BWC_RedBackground:Show()\n    end\n    \n    function envTable.HideBackground(unitFrame)\n        plateFrame.BWC_RedBackground:Hide()\n    end\nend\n\n\n\n\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    envTable.HideBackground(unitFrame)\nend\n\n\n",
["ScriptType"] = 1,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    if (Plater.UnitIsCasting(unitId)) then\n        envTable.ShowBackground(unitFrame)\n    else\n        envTable.HideBackground(unitFrame)\n    end\n    \nend",
["Time"] = 1673726734,
["url"] = "",
["Icon"] = 236209,
["Enabled"] = true,
["Revision"] = 18,
["semver"] = "",
["Author"] = "Tiranaa-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura While Casting [P]",
["Desc"] = "Highlight the nameplate of a unit when has a certain Buff (trigger) and start to cast a spell",
["SpellIds"] = {
372743,
372749,
384933,
},
["Options"] = {
},
},
{
["ConstructorCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    --create a flash texture which keep blinking while the cast in going on\n    self.OGC_BlinkTexture = self.OGC_BlinkTexture or self:CreateTexture(nil, \"overlay\")\n    self.OGC_BlinkTexture:SetColorTexture(1, 1, 1)\n    self.OGC_BlinkTexture:SetAlpha(0)\n    \n    --create the animation group for the blinking texture\n    self.OGC_BlinkAnimation = self.OGC_BlinkAnimation or Plater:CreateAnimationHub(self.OGC_BlinkTexture, function() self.OGC_BlinkTexture:Show() end, function() self.OGC_BlinkTexture:Hide() end)\n    \n    self.OGC_BlinkAnimation.In = self.OGC_BlinkAnimation.In or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 1, 0.5, 0.3, 1)\n    \n    self.OGC_BlinkAnimation.Out = self.OGC_BlinkAnimation.Out or Plater:CreateAnimation(self.OGC_BlinkAnimation, \"alpha\", 2, 0.5, 1, 0.2)    \n    \n    \nend\n\n\n",
["OnHideCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkAnimation:Stop()\n    \n    Plater.StopDotAnimation(self, envTable.dotAnimation1)    \n    Plater.StopDotAnimation(self, envTable.dotAnimation2)   \n    \nend\n\n\n",
["ScriptType"] = 2,
["UpdateCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    --insert code here\n    \nend\n\n\n",
["Time"] = 1676905232,
["url"] = "",
["Icon"] = 4038101,
["Enabled"] = true,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Initialization"] = "		function (scriptTable)\n			--insert code here\n			\n		end\n	",
["OnShowCode"] = "function (self, unitId, unitFrame, envTable, scriptTable)\n    \n    self.OGC_BlinkTexture:ClearAllPoints()\n    self.OGC_BlinkTexture:SetPoint(\"topleft\", self, \"topleft\", 0, 0)\n    self.OGC_BlinkTexture:SetPoint(\"bottomright\", self, \"bottomright\", 0, 0)\n    \n    local red, green, blue = Plater:ParseColors(scriptTable.config.blinkColor)\n    self.OGC_BlinkTexture:SetVertexColor(red, green, blue)\n    \n    local blinkSpeed = scriptTable.config.speed\n    \n    self.OGC_BlinkAnimation.In:SetDuration(blinkSpeed)\n    self.OGC_BlinkAnimation.Out:SetDuration(blinkSpeed)\n    \n    local minBlinkAlpha = scriptTable.config.minAlpha\n    local maxBlinkAlpha = scriptTable.config.maxAlpha\n    \n    self.OGC_BlinkAnimation.In:SetFromAlpha(minBlinkAlpha)\n    self.OGC_BlinkAnimation.In:SetToAlpha(maxBlinkAlpha)\n    self.OGC_BlinkAnimation.Out:SetFromAlpha(maxBlinkAlpha)    \n    self.OGC_BlinkAnimation.Out:SetToAlpha(minBlinkAlpha)\n    \n    self.OGC_BlinkAnimation:SetLooping(\"repeat\")\n    self.OGC_BlinkAnimation:Play()\n    \n    envTable.dotAnimation1 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation1.textureInfo.speedMultiplier = 0.3\n    \n    envTable.dotAnimation2 = Plater.PlayDotAnimation(self, 2, scriptTable.config.dotColor, scriptTable.config.xOffset, scriptTable.config.yOffset)\n    envTable.dotAnimation2.textureInfo.speedMultiplier = 1\n    \nend",
["NpcNames"] = {
},
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast - On Going Cast [P]",
["Desc"] = "The background of the nameplate blinks a red color indicating the cast is being performed. Useful to indicate channeling spells doing damage overtime.",
["SpellIds"] = {
388886,
209676,
377912,
},
["Options"] = {
{
["Type"] = 1,
["Key"] = "dotColor",
["Value"] = {
1,
1,
1,
0.41662168502808,
},
["Name"] = "Dots Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Dots Color",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots X Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "xOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots X Offset",
},
{
["Type"] = 2,
["Max"] = 10,
["Desc"] = "Dots Y Offset",
["Min"] = -10,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "yOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Dots Y Offset",
},
{
["Type"] = 6,
["Key"] = "option4",
["Value"] = 0,
["Name"] = "Option 4",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust how fast the blinking occurs",
["Min"] = 0.2,
["Fraction"] = true,
["Value"] = 0.4,
["Key"] = "speed",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Speed",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Min amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Key"] = "minAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Min Alpha",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Max amount of transparency the blink can have",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0.5,
["Key"] = "maxAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Blink Max Alpha",
},
{
["Type"] = 1,
["Key"] = "blinkColor",
["Value"] = {
1,
0.019607843831182,
0,
1,
},
["Name"] = "Blink Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Color of the blinking texture",
},
},
},
},
["aura_timer_text_color"] = {
0.98039215686274,
[3] = 0.99607843137255,
},
["pet_height_scale"] = 0.94999998807907,
["aura_x_offset"] = 0,
["saved_cvars_last_change"] = {
["ShowClassColorInNameplate"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateOverlapV"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateLargeTopInset"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateShowEnemyMinus"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateShowFriendlyTotems"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplatePersonalHideDelaySeconds"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateShowFriendlyPets"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplatePersonalShowInCombat"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplatePersonalShowWithTarget"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateMinAlpha"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateNotSelectedAlpha"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateShowAll"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateMaxDistance"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateShowFriendlyMinions"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateShowEnemies"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["NamePlateVerticalScale"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateSelectedAlpha"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateRemovalAnimation"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateMotionSpeed"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateGlobalScale"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateShowEnemyMinions"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateShowFriendlyNPCs"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateSelectedScale"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateShowFriends"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateMotion"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:8425: in function `RefreshAutoToggle'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:8330: in function <Interface/AddOns/Plater/Plater.lua:8328>\n",
["nameplateMinScale"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateOtherTopInset"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateShowEnemyTotems"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateShowFriendlyGuardians"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["NamePlateHorizontalScale"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateShowEnemyGuardians"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplatePersonalShowAlways"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateMinAlphaDistance"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
["nameplateOccludedAlphaMult"] = "[string \"=[C]\"]: ?\n[string \"=[C]\"]: in function `SetCVar'\n[string \"@Interface/AddOns/Plater/Plater.lua\"]:1550: in function `RestoreProfileCVars'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1025: in function `DoProfileImport'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:845: in function `ConfirmImportProfile'\n[string \"@Interface/AddOns/Plater/Plater_OptionsPanel.lua\"]:1277: in function <Interface/AddOns/Plater/Plater_OptionsPanel.lua:1277>\n[string \"=[C]\"]: in function `xpcall'\n[string \"@Interface/AddOns/Details/Libs/DF/fw.lua\"]:4048: in function `CoreDispatch'\n[string \"@Interface/AddOns/Details/Libs/DF/button.lua\"]:728: in function <Interface/AddOns/Details/Libs/DF/button.lua:664>\n",
},
["url"] = "https://wago.io/LdttwhL-v/6",
["transparency_behavior"] = 3,
["hover_highlight_alpha"] = 0.199999988079071,
["cast_statusbar_fadein_time"] = 0.009999999776482582,
["target_shady_enabled"] = false,
["cast_statusbar_spark_alpha"] = 0.7999999523162842,
["aura_stack_color"] = {
0,
0.76862745098039,
0.10588235294118,
},
["aura2_y_offset"] = 42,
["buffs_on_aura2"] = true,
["plate_config"] = {
["player"] = {
["cast"] = {
nil,
14,
},
["cast_incombat"] = {
nil,
14,
},
},
["friendlyplayer"] = {
["big_actorname_text_size"] = 10,
["spellpercent_text_font"] = "Expressway",
["level_text_size"] = 8,
["big_actortitle_text_font"] = "Arial Narrow",
["cast"] = {
105,
14,
},
["spellpercent_text_size"] = 8,
["big_actortitle_text_size"] = 10,
["big_actortitle_text_shadow_color_offset"] = {
1,
-1,
},
["cast_incombat"] = {
105,
},
["spellname_text_outline"] = "OUTLINE",
["big_actorname_text_shadow_color"] = {
0,
0,
0,
1,
},
["spellname_text_anchor"] = {
["side"] = 10,
["x"] = 2.5,
},
["big_actortitle_text_shadow_color"] = {
0,
0,
0,
1,
},
["percent_text_anchor"] = {
["y"] = 0.5999984741210938,
["side"] = 11,
},
["actorname_text_font"] = "Expressway",
["big_actorname_text_outline"] = "OUTLINE",
["big_actorname_text_shadow_color_offset"] = {
1,
-1,
},
["quest_color_neutral"] = {
1,
0.65,
0,
},
["mana_incombat"] = {
nil,
4,
},
["percent_text_enabled"] = true,
["all_names"] = true,
["actorname_text_anchor"] = {
["y"] = 3,
["side"] = 1,
},
["big_actortitle_text_outline"] = "OUTLINE",
["actorname_text_spacing"] = 7,
["percent_text_font"] = "Expressway",
["buff_frame_y_offset"] = 0,
["actorname_text_size"] = 8,
["quest_enabled"] = true,
["level_text_alpha"] = 0.2999999821186066,
["big_actorname_text_font"] = "Arial Narrow",
["health_incombat"] = {
105,
13,
},
["spellname_text_size"] = 8,
["health"] = {
105,
13,
},
["percent_text_shadow_color"] = {
nil,
nil,
nil,
0.9400000013411,
},
["percent_text_ooc"] = true,
["mana"] = {
nil,
4,
},
["spellname_text_font"] = "Expressway",
["quest_color_enemy"] = {
1,
0.369,
0,
},
},
["friendlynpc"] = {
["cast"] = {
105,
},
["cast_incombat"] = {
105,
},
["health"] = {
105,
13,
},
["health_incombat"] = {
105,
13,
},
},
["global_health_height"] = 13,
["global_health_width"] = 105,
["enemyplayer"] = {
["actorname_text_font"] = "Expressway",
["quest_color_enemy"] = {
1,
0.369,
0,
1,
},
["spellpercent_text_font"] = "Expressway",
["quest_color_neutral"] = {
1,
0.65,
0,
1,
},
["level_text_size"] = 14,
["spellname_text_font"] = "Expressway",
["cast"] = {
105,
14,
},
["all_names"] = true,
["actorname_text_size"] = 11,
["percent_text_shadow_color"] = {
nil,
nil,
nil,
0.9400000013411,
},
["level_text_alpha"] = 1,
["actorname_text_outline"] = "OUTLINE",
["actorname_text_anchor"] = {
["y"] = 8.399993896484375,
["side"] = 9,
},
["big_actortitle_text_size"] = 10,
["spellpercent_text_enabled"] = false,
["actorname_text_spacing"] = 10,
["percent_text_font"] = "Expressway",
["big_actorname_text_size"] = 10,
["quest_enabled"] = true,
["cast_incombat"] = {
105,
14,
},
["spellname_text_outline"] = "OUTLINE",
["spellname_text_size"] = 8,
["quest_color_enabled"] = true,
["health_incombat"] = {
105,
13,
},
["health"] = {
105,
13,
},
["spellname_text_anchor"] = {
["side"] = 10,
["x"] = 2.5,
},
["level_text_anchor"] = {
["side"] = 2,
},
["percent_text_anchor"] = {
["y"] = -0.5,
["side"] = 11,
},
["level_text_font"] = "Expressway",
["spellpercent_text_size"] = 8,
},
["enemynpc"] = {
["actorname_text_font"] = "Expressway",
["spellpercent_text_font"] = "Expressway",
["level_text_size"] = 14,
["big_actortitle_text_font"] = "Expressway",
["cast"] = {
105,
14,
},
["spellpercent_text_size"] = 8,
["big_actortitle_text_size"] = 12,
["actorname_text_outline"] = "OUTLINE",
["actorname_text_anchor"] = {
["y"] = 8.399993896484375,
["side"] = 9,
},
["spellpercent_text_enabled"] = false,
["level_text_anchor"] = {
["side"] = 2,
},
["percent_text_font"] = "Expressway",
["spellname_text_font"] = "Expressway",
["cast_incombat"] = {
105,
},
["level_text_alpha"] = 1,
["percent_text_shadow_color"] = {
nil,
nil,
nil,
0.9400000013411,
},
["spellname_text_size"] = 8,
["health_incombat"] = {
105,
13,
},
["health"] = {
105,
13,
},
["spellname_text_anchor"] = {
["side"] = 10,
["x"] = 2.5,
},
["big_actorname_text_font"] = "Expressway",
["percent_text_anchor"] = {
["y"] = -0.5,
["side"] = 11,
},
["level_text_font"] = "Expressway",
["level_text_enabled"] = false,
},
},
["indicator_quest"] = false,
["aura_y_offset"] = 10,
["extra_icon_width"] = 20,
["use_ui_parent"] = true,
["health_statusbar_texture"] = "PlaterBackground 2",
["hook_auto_imported"] = {
["Reorder Nameplate"] = 4,
["Dont Have Aura"] = 1,
["Players Targetting Amount"] = 4,
["Color Automation"] = 1,
["Aura Reorder"] = 3,
["Cast Bar Icon Config"] = 2,
["Execute Range"] = 1,
["Extra Border"] = 3,
["Hide Neutral Units"] = 1,
["Target Color"] = 3,
["Attacking Specific Unit"] = 2,
["Combo Points"] = 6,
},
["expansion_triggerwipe"] = {
[2] = true,
},
["focus_texture"] = "PlaterTexture",
["cast_statusbar_color_nointerrupt"] = {
0.50196078431373,
0.50196078431373,
0.50196078431373,
0.96000000089407,
},
["update_throttle"] = 0.12000000476837,
["minor_width_scale"] = 0.89999997615814,
["indicator_faction"] = false,
["aura_consolidate"] = true,
["resources_settings"] = {
["chr"] = {
["Player-4728-03F69277"] = "SoulShards",
["Player-4467-04488AA7"] = "ComboPoints",
["Player-4408-049E3D6C"] = "ComboPoints",
["Player-4467-043C0C3D"] = "SoulShards",
["Player-4467-04395DA6"] = "ArcaneCharges",
["Player-4408-04503A41"] = "Runes",
["Player-4408-039D5C51"] = "SoulShards",
["Player-4408-04A39544"] = "ArcaneCharges",
["Player-4408-037907AA"] = "ComboPoints",
["Player-4467-043A2328"] = "Runes",
["Player-4467-04790947"] = "ComboPoints",
["Player-4408-03831C0E"] = "HolyPower",
},
},
["castbar_target_text_size"] = 9,
["npc_cache"] = {
[23235] = {
"Bonechewer Blade Fury",
"Black Temple",
},
[5913] = {
"Tremor Totem",
"Trial of the Crusader",
"enUS",
},
[34134] = {
"Winter Revenant",
"Ulduar",
},
[16505] = {
"Naxxramas Follower",
"Naxxramas",
},
[33430] = {
"Guardian Lasher",
"Ulduar",
},
[25483] = {
"Shadowsword Manafiend",
"The Sunwell",
},
[25367] = {
"Sunblade Arch Mage",
"The Sunwell",
},
[22956] = {
"Priestess of Torment",
"Black Temple",
},
[23215] = {
"Ashtongue Sorcerer",
"Black Temple",
},
[25799] = {
"Shadowsword Fury Mage",
"The Sunwell",
},
[23581] = {
"Amani'shi Medicine Man",
"Zul'Aman",
},
[23421] = {
"Ashtongue Channeler",
"Black Temple",
},
[22879] = {
"Shadowmoon Reaver",
"Black Temple",
},
},
["aura_frame1_anchor"] = {
["y"] = 10,
["side"] = 1,
},
["indicator_scale"] = 0.7999999523162842,
["tocversion"] = 30403,
["aura_grow_direction"] = 3,
["indicator_extra_raidmark"] = false,
["extra_icon_height"] = 20,
["indicator_anchor"] = {
["side"] = 7,
["x"] = 3.349998474121094,
},
["aura_cooldown_edge_texture"] = "Interface\\AddOns\\Plater\\images\\cooldown_edge_1",
["honor_blizzard_plate_alpha"] = true,
["health_selection_overlay_alpha"] = 0,
["npc_colors"] = {
[23235] = {
true,
false,
"aqua",
},
[5913] = {
true,
false,
"aqua",
},
[34134] = {
true,
false,
"aqua",
},
[16505] = {
true,
false,
"aqua",
},
[33430] = {
true,
false,
"aqua",
},
[25483] = {
true,
false,
"aqua",
},
[25367] = {
true,
false,
"aqua",
},
[22956] = {
true,
false,
"aqua",
},
[23215] = {
true,
false,
"aqua",
},
[25799] = {
true,
false,
"aqua",
},
[22879] = {
false,
false,
"aqua",
},
[23421] = {
true,
false,
"aqua",
},
[23581] = {
true,
false,
"aqua",
},
},
["minor_height_scale"] = 0.94999998807907,
["aura_alpha"] = 1,
["aura_timer_text_font"] = "2002",
["indicator_elite"] = false,
["aura_show_important"] = false,
["target_shady_combat_only"] = false,
["aura_stack_anchor"] = {
["y"] = 1.350000381469727,
},
["aura_height"] = 21,
["non_targeted_alpha_enabled"] = true,
["aura_padding"] = 1.5,
["cast_statusbar_bgtexture"] = "Solid",
["aura2_x_offset"] = 0,
["target_indicator"] = "NONE",
["hook_data"] = {
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    envTable.NpcColors = {\n        \n        --examples, using the unit name in lower case, regular unit name and the unitID:\n        \n        [\"Thunderlord Windreader\"] = \"red\", --using regular mob name and color it as red\n        [\"thunderlord crag-leaper\"] = {1, 1, 0}, --using lower case and coloring it yellow\n        [75790] = \"#00FF00\", --using the ID of the unit and using green as color\n        \n        --insert the new mobs here:\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    } --close custom color bracket\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --attempt to get the color from the unit color list\n    local color = envTable.NpcColors [unitFrame.namePlateUnitNameLower] or envTable.NpcColors [unitFrame.namePlateUnitName] or envTable.NpcColors [unitFrame.namePlateNpcId]\n    \n    --if the color exists, set the health bar color\n    if (color) then\n        Plater.SetNameplateColor (unitFrame, color)\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1547392935,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\color_bar",
["Enabled"] = false,
["Revision"] = 50,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Easy way to change the color of an unit. Open the constructor script and follow the examples.",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Color Automation [Plater]",
["HooksTemp"] = {
},
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end\n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        envTable.HideNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat and InCombatLockdown()) then\n            return\n        end\n        \n        --check the unit reaction\n        if (unitFrame.namePlateIsTarget) then\n            envTable.ShowNameplate (unitFrame)\n            \n        else\n            envTable.HideNameplate (unitFrame)\n            \n        end    \n    end\n    \nend\n\n\n\n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        envTable.ShowNameplate (unitFrame)\n    end\n    \nend\n\n\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when plater finishes an update on the nameplate\n    --check within the envTable if the healthBar of this nameplate should be hidden\n    if (envTable.IsHidden) then\n        if (unitFrame.healthBar:IsShown()) then\n            envTable.HideNameplate (unitFrame)\n        end\n    end\n    \nend\n\n\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (unitFrame.namePlateUnitReaction == envTable.REACTION_NEUTRAL) then\n        \n        --plater already handle this\n        if (unitFrame.PlayerCannotAttack) then\n            return\n        end    \n        \n        --check if is only open world\n        if (envTable.OnlyInOpenWorld and Plater.ZoneInstanceType ~= \"none\") then\n            return \n        end\n        \n        --check for only in combat\n        if (envTable.ShowInCombat) then\n            envTable.ShowNameplate (unitFrame)\n        end\n    end\nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    envTable.OnlyInOpenWorld = true;\n    envTable.ShowInCombat = true;\n    \n    --consts\n    envTable.REACTION_NEUTRAL = 4;\n    \n    --functions to hide and show the healthBar\n    function envTable.HideNameplate (unitFrame)\n        Plater.HideHealthBar (unitFrame)\n        Plater.DisableHighlight (unitFrame)\n        envTable.IsHidden = true\n    end\n    \n    function envTable.ShowNameplate (unitFrame)\n        Plater.ShowHealthBar (unitFrame)\n        Plater.EnableHighlight (unitFrame)\n        envTable.IsHidden = false\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1541606242,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1990989,
["Enabled"] = false,
["Revision"] = 73,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Hide neutral units, show when selected, see the constructor script for options.",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Hide Neutral Units [Plater]",
["HooksTemp"] = {
},
["Options"] = {
},
},
{
["OptionsValues"] = {
["showIcon"] = true,
["iconSizeOffset"] = 2.0935053825378,
["useFullSize"] = true,
["showTexture"] = true,
},
["HooksTemp"] = {
},
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    unitFrame.castBar.BorderShield:SetDrawLayer(\"artwork\")\n    envTable.UpdateIconPosition (unitFrame)\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateIconPosition (unitFrame)\n    self.ThrottleUpdate = -1\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable, modTable)\n    \n    --private:\n    function envTable.UpdateIconPosition (unitFrame)\n        local castBar = unitFrame.castBar\n        local icon = castBar.Icon\n        local noInterruptTexture = castBar.BorderShield\n        \n        if (modTable.config.showIcon) then\n            icon:ClearAllPoints()\n            \n            if (modTable.config.iconOnLeftSide) then\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topright\", unitFrame.healthBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topright\", unitFrame.castBar, \"topleft\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomright\", unitFrame.castBar, \"bottomleft\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n                \n            else\n                if (modTable.config.useFullSize) then\n                    icon:SetPoint (\"topleft\", unitFrame.healthBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                    \n                else\n                    \n                    icon:SetPoint (\"topleft\", unitFrame.castBar, \"topright\", modTable.config.iconPadding, modTable.config.iconSizeOffset)\n                    icon:SetPoint (\"bottomleft\", unitFrame.castBar, \"bottomright\", modTable.config.iconPadding, -modTable.config.iconSizeOffset)\n                end\n            end\n            \n            icon:SetWidth (icon:GetHeight())\n            icon:Show()\n        else\n            icon:Hide()\n        end\n        \n        if (modTable.config.showTexture and not castBar.canInterrupt) then\n            noInterruptTexture:Show()\n            \n            local texturePath = modTable.config.iconTexturePath\n            texturePath = texturePath:gsub(\"//\", \"/\")\n            texturePath = texturePath:gsub(\"\\\\\", \"/\")\n            \n            noInterruptTexture:SetTexture (texturePath)\n            noInterruptTexture:SetTexCoord (0, 1, 0, 1)\n            \n            if (modTable.config.desaturatedTexture) then\n                noInterruptTexture:SetDesaturated (modTable.config.desaturatedTexture)\n            else\n                noInterruptTexture:SetVertexColor (DetailsFramework:ParseColors (modTable.config.textureColor))\n            end\n            \n            noInterruptTexture:SetSize (modTable.config.textureWidth, castBar:GetHeight() + modTable.config.textureHeightMod)\n            noInterruptTexture:ClearAllPoints()\n            noInterruptTexture:SetPoint (\"center\", castBar, \"left\", modTable.config.texturePosition, 0)\n            noInterruptTexture:SetAlpha (modTable.config.textureAlpha)\n        else\n            noInterruptTexture:Hide()\n        end\n    end\nend",
},
["Time"] = 1603130133,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\castbar_icon",
["Enabled"] = false,
["Revision"] = 353,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Move the icon of the spell cast to the left or right side of the nameplate.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast Bar Icon Settings [P]",
["LastHookEdited"] = "",
["Options"] = {
{
["Type"] = 5,
["Key"] = "option4",
["Value"] = "Icon Settings:",
["Name"] = "Icon Settings",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showIcon",
["Value"] = true,
["Name"] = "Show Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "Show the castbar icon when enabled",
},
{
["Type"] = 4,
["Key"] = "iconOnLeftSide",
["Value"] = true,
["Name"] = "Icon on Left Side",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled it anchor the icon on the left side, right otherwise",
},
{
["Type"] = 4,
["Key"] = "useFullSize",
["Value"] = false,
["Name"] = "Use Big Icon",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled the icon has the size of the cast bar plus the healthbar",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Fine tune the icon size",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 0,
["Key"] = "iconSizeOffset",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Icon Size Offset",
},
{
["Type"] = 2,
["Max"] = 5,
["Desc"] = "Space between the icon and the cast bar",
["Min"] = -5,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "iconPadding",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Icon Padding",
},
{
["Type"] = 6,
["Key"] = "option6",
["Value"] = 0,
["Name"] = "Blank Space",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_blank",
["Desc"] = "",
},
{
["Type"] = 5,
["Key"] = "option5",
["Value"] = "Can't Interrupt Texture:",
["Name"] = "Interrupt Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_label",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "showTexture",
["Value"] = true,
["Name"] = "Show Texture",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enabled show a texture to tell the cast can't be interrupted",
},
{
["Type"] = 3,
["Key"] = "iconTexturePath",
["Value"] = "Interface\\GROUPFRAME\\UI-GROUP-MAINTANKICON",
["Name"] = "Texture Path",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_text",
["Desc"] = "Insert the path for the texture",
},
{
["Type"] = 4,
["Key"] = "desaturatedTexture",
["Value"] = true,
["Name"] = "Texture Desaturated",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "If enbaled, texture is shown in black & white",
},
{
["Type"] = 1,
["Key"] = "textureColor",
["Value"] = {
1,
1,
1,
0.30567157268524,
},
["Name"] = "Texture Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "Select the color of the texture",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture width",
["Min"] = 1,
["Fraction"] = false,
["Value"] = 10,
["Key"] = "textureWidth",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Width",
},
{
["Type"] = 2,
["Max"] = 16,
["Desc"] = "The texture is set to be the same size as the cast bar, fine tune the height as wanted",
["Min"] = -16,
["Fraction"] = true,
["Value"] = 0,
["Key"] = "textureHeightMod",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Height Mod",
},
{
["Type"] = 2,
["Max"] = 32,
["Desc"] = "Adjust the texture position",
["Min"] = -32,
["Fraction"] = false,
["Value"] = 0,
["Key"] = "texturePosition",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Position",
},
{
["Type"] = 2,
["Max"] = 1,
["Desc"] = "Adjust the texture transparency",
["Min"] = 0,
["Fraction"] = true,
["Value"] = 1,
["Key"] = "textureAlpha",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_number",
["Name"] = "Texture Alpha",
},
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --Important: lines starting with double dashes are comments and are not part of the script\n    \n    --set this to true if you are not using threat colors in the health bar\n    envTable.ForceRefreshNameplateColor = true\n    \n    --if the unit does not have any of the following auras, it will be painted with the color listed below\n    --list of spells to track, can be the spell name (case-sensitive) or the spellID\n    envTable.TrackingAuras = {\n        --[\"Nightblade\"] = true, --this is an example using the spell name\n        --[195452] = true, --this is an example using the spellID\n        \n    }\n    \n    --which color the nameplate wil be changed\n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    --you may also use /plater colors\n    envTable.NameplateColor = \"pink\"\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --do nothing if the player isn't in combat\n    if (not Plater.IsInCombat()) then\n        return \n    end\n    \n    --do nothing if the unit isn't in combat\n    if (not unitFrame.InCombat) then\n        return\n    end\n    \n    --do nothing if the unit is the player it self\n    if (unitFrame.IsSelf) then\n        return\n    end\n    \n    --check the auras\n    local hasAura = false\n    \n    for auraName, _ in pairs (envTable.TrackingAuras) do\n        if (Plater.NameplateHasAura (unitFrame, auraName)) then\n            hasAura = true\n            break\n        end\n    end\n    \n    if (not hasAura) then\n        Plater.SetNameplateColor (unitFrame, envTable.NameplateColor)\n    else\n        if (envTable.ForceRefreshNameplateColor) then\n            Plater.RefreshNameplateColor (unitFrame) \n        end\n    end    \n    \nend",
},
["Time"] = 1605755016,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 136207,
["Enabled"] = false,
["Revision"] = 60,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Change the nameplate color when a nameplate does not have the auras set in the constructor script.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Don't Have Aura [Plater]",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --execute detection, if true the script will handle the execute percent\n    --while false Plater will automatically trigger the execute range\n    --you only want to set this to true in case of Plater not detecting the execute range correctly\n    envTable.UseCustomExecutePercent = false\n    --execute percent, if not detecting automatic, this is the percent to active the execute range\n    --use from zero to one, 0.20 is equal to 20% of the unit life\n    envTable.ExecutePercent = 0.20\n    \n    --allow this script to change the nameplate color when the unit is in execute range\n    envTable.CanChangeColor = true\n    --change the health bar color to this color when the unit is in execute range\n    --color can be set as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}\n    envTable.ExecuteColor = \"green\"\n    \n    --border color\n    envTable.CanChangeBorderColor = false\n    envTable.BorderColor = \"red\"\n    \n    --hide the default health divisor and the health execute indicator\n    envTable.HideHealthDivisor = false\n    --if not hidden, adjust the health divisor settings and the health execute indicator\n    envTable.HealthDivisorAlpha = 0.5\n    envTable.HealthDivisorColor = \"white\"\n    envTable.HealthExecuteIndicatorAlpha = 0.15\n    envTable.HealthExecuteIndicatorColor = \"darkred\"\n    \n    \n    --private (internal functions)\n    do\n        function envTable.UnitInExecuteRange (unitFrame)\n            --check if can change the execute color\n            if (envTable.CanChangeColor) then\n                Plater.SetNameplateColor (unitFrame, envTable.ExecuteColor)\n            end\n            \n            if (envTable.CanChangeBorderColor) then\n                Plater.SetBorderColor (unitFrame, envTable.BorderColor)\n            end\n            \n            if (envTable.HideHealthDivisor) then\n                unitFrame.healthBar.healthCutOff:Hide() \n                unitFrame.healthBar.executeRange:Hide()\n                \n            else\n                envTable.UpdateHealthDivisor (unitFrame)\n                \n            end\n        end\n        \n        function envTable.UpdateHealthDivisor (unitFrame)\n            local healthBar = unitFrame.healthBar\n            \n            healthBar.healthCutOff:Show()\n            healthBar.healthCutOff:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthDivisorColor))\n            healthBar.healthCutOff:SetAlpha (envTable.HealthDivisorAlpha)\n            \n            healthBar.executeRange:Show()\n            healthBar.executeRange:SetVertexColor (DetailsFramework:ParseColors (envTable.HealthExecuteIndicatorColor))\n            healthBar.executeRange:SetAlpha (envTable.HealthExecuteIndicatorAlpha)\n            \n            if (envTable.UseCustomExecutePercent) then\n                healthBar.healthCutOff:ClearAllPoints()\n                healthBar.executeRange:ClearAllPoints()\n                \n                healthBar.healthCutOff:SetSize (healthBar:GetHeight(), healthBar:GetHeight())\n                healthBar.healthCutOff:SetPoint (\"center\", healthBar, \"left\", healthBar:GetWidth() * envTable.ExecutePercent, 0)\n                \n                healthBar.executeRange:SetTexCoord (0, envTable.ExecutePercent, 0, 1)\n                healthBar.executeRange:SetHeight (healthBar:GetHeight())\n                healthBar.executeRange:SetPoint (\"left\", healthBar, \"left\", 0, 0)\n                healthBar.executeRange:SetPoint (\"right\", healthBar.healthCutOff, \"center\")\n            end\n            \n        end\n    end\n    \nend",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    if (envTable.UseCustomExecutePercent) then\n        \n        --manual detection\n        local healthBar = unitFrame.healthBar\n        if (healthBar.CurrentHealth / healthBar.CurrentHealthMax <= envTable.ExecutePercent) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end        \n        \n    else\n        \n        --auto detection\n        if (unitFrame.InExecuteRange) then\n            envTable.UnitInExecuteRange (unitFrame)\n        end\n        \n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1605755274,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 135358,
["Enabled"] = false,
["Revision"] = 85,
["semver"] = "",
["Author"] = "Ahwa-Azralon",
["Desc"] = "Add extra effects to execute range. See the constructor script for options.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Execute Range [Plater]",
["LastHookEdited"] = "",
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Added"] = "\n\n-- exported function Plater.UpdatePlateSize() from Plater.lua\n--this is for advanced users which wants to reorder the nameplate frame at their desire\n\n\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --check if there's a type of unit on this nameplate\n    local plateFrame = unitFrame:GetParent()\n    if (not plateFrame.actorType) then\n        return\n    end\n    \n    --get all the frames and cache some variables\n    local ACTORTYPE_ENEMY_PLAYER = \"enemyplayer\"\n    local profile = Plater.db.profile\n    local DB_PLATE_CONFIG = profile.plate_config\n    local isInCombat = Plater.IsInCombat()\n    local actorType = plateFrame.actorType\n    \n    local unitFrame = plateFrame.unitFrame\n    local healthBar = unitFrame.healthBar\n    local castBar = unitFrame.castBar\n    local powerBar = unitFrame.powerBar\n    local buffFrame1 = unitFrame.BuffFrame\n    local buffFrame2 = unitFrame.BuffFrame2\n    \n    --use in combat bars when in pvp\n    if (plateFrame.actorType == ACTORTYPE_ENEMY_PLAYER) then\n        if ((Plater.ZoneInstanceType == \"pvp\" or Plater.ZoneInstanceType == \"arena\") and DB_PLATE_CONFIG.player.pvp_always_incombat) then\n            isInCombat = true\n        end\n    end\n    \n    --get the config for this actor type\n    local plateConfigs = DB_PLATE_CONFIG [actorType]\n    --get the config key based if the player is in combat\n    local castBarConfigKey, healthBarConfigKey, manaConfigKey = Plater.GetHashKey (isInCombat)\n    \n    --get the width and height from what the user set in the options panel\n    local healthBarWidth, healthBarHeight = unitFrame.customHealthBarWidth or plateConfigs [healthBarConfigKey][1], unitFrame.customHealthBarHeight or plateConfigs [healthBarConfigKey][2]\n    local castBarWidth, castBarHeight = unitFrame.customCastBarWidth or plateConfigs [castBarConfigKey][1], unitFrame.customCastBarHeight or plateConfigs [castBarConfigKey][2]\n    local powerBarWidth, powerBarHeight = unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][1], unitFrame.customPowerBarHeight or plateConfigs [manaConfigKey][2]\n    \n    --calculate the offset for the cast bar, this is done due to the cast bar be anchored to topleft and topright\n    local castBarOffSetX = (healthBarWidth - castBarWidth) / 2\n    local castBarOffSetY = plateConfigs.castbar_offset\n    \n    --calculate offsets for the power bar\n    local powerBarOffSetX = (healthBarWidth - powerBarWidth) / 2\n    local powerBarOffSetY = 0\n    \n    --calculate the size deviation for pets\n    local unitType = Plater.GetUnitType (plateFrame)\n    if (unitType == \"pet\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.pet_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.pet_width_scale\n        \n    elseif (unitType == \"minus\") then\n        healthBarHeight = healthBarHeight * Plater.db.profile.minor_height_scale\n        healthBarWidth = healthBarWidth * Plater.db.profile.minor_width_scale\n    end\n    \n    --unit frame - is set to be the same size as the plateFrame\n    unitFrame:ClearAllPoints()\n    unitFrame:SetAllPoints()\n    \n    --calculates the health bar anchor points\n    --it will always be placed in the center of the nameplate area (where it accepts mouse clicks) \n    local xOffSet = (plateFrame:GetWidth() - healthBarWidth) / 2\n    local yOffSet = (plateFrame:GetHeight() - healthBarHeight) / 2\n    \n    --set the health bar point\n    healthBar:ClearAllPoints()\n    PixelUtil.SetPoint (healthBar, \"topleft\", unitFrame, \"topleft\", xOffSet + profile.global_offset_x, -yOffSet + profile.global_offset_y)\n    PixelUtil.SetPoint (healthBar, \"bottomright\", unitFrame, \"bottomright\", -xOffSet + profile.global_offset_x, yOffSet + profile.global_offset_y)\n    \n    --set the cast bar point and size\n    castBar:ClearAllPoints()\n    PixelUtil.SetPoint (castBar, \"topleft\", healthBar, \"bottomleft\", castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetPoint (castBar, \"topright\", healthBar, \"bottomright\", -castBarOffSetX, castBarOffSetY)\n    PixelUtil.SetHeight (castBar, castBarHeight)\n    PixelUtil.SetSize (castBar.Icon, castBarHeight, castBarHeight)\n    PixelUtil.SetSize (castBar.BorderShield, castBarHeight * 1.4, castBarHeight * 1.4)\n    \n    --set the power bar point and size\n    powerBar:ClearAllPoints()\n    PixelUtil.SetPoint (powerBar, \"topleft\", healthBar, \"bottomleft\", powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetPoint (powerBar, \"topright\", healthBar, \"bottomright\", -powerBarOffSetX, powerBarOffSetY)\n    PixelUtil.SetHeight (powerBar, powerBarHeight)\n    \n    --power bar are hidden by default, show it if there's a custom size for it\n    if (unitFrame.customPowerBarWidth and unitFrame.customPowerBarHeight) then\n        powerBar:SetUnit (unitFrame.unit)\n    end\n    \n    --aura frames\n    local bf1Anchor = Plater.db.profile.aura_frame1_anchor\n    Plater.SetAnchor (buffFrame1, {side = bf1Anchor.side, x = bf1Anchor.x, y = bf1Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura_grow_direction or 2) == 2)\n    \n    local bf2Anchor = Plater.db.profile.aura_frame2_anchor\n    Plater.SetAnchor (buffFrame2, {side = bf2Anchor.side, x = bf2Anchor.x, y = bf2Anchor.y + plateConfigs.buff_frame_y_offset}, unitFrame.healthBar, (Plater.db.profile.aura2_grow_direction or 2) == 2)\n    \nend\n\n\n",
},
["Time"] = 1596791840,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 574574,
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Function Plater.UpdatePlateSize from Plater.lua exported to scritps.",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Reorder Nameplate [Plater]",
["HooksTemp"] = {
},
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    --list of npcs and their colors, can be inserted:\n    --name of the unit\n    --name of the unit in lower case\n    --npcID of the unit\n    \n    --color can be added as:\n    --color names: \"red\", \"yellow\"\n    --color hex: \"#FF0000\", \"#FFFF00\"\n    --color table: {1, 0, 0}, {1, 1, 0}    \n    \n    modTable.changeBarColor = modTable.config.changeBarColor\n    modTable.changeBorderColor = modTable.config.changeBorderColor\n    modTable.resetColors = modTable.config.resetColors\n    \n    modTable.ListOfNpcs = {\n        [61146] = modTable.config.color, --\"olive\", --monk statue npcID\n        [103822] = modTable.config.color, --\"olive\", --druid treant npcID\n        [15352] = modTable.config.color, --\"olive\", --shaman elemental\n        [95072] = modTable.config.color, --\"olive\", --shaman greater earth elemental npcID\n        [61056] = modTable.config.color, --\"olive\", --shaman primal earth elemental npcID\n        \n    }\nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable, modTable)\n    if not unitId then\n        return\n    end\n    --get the GUID of the target of the unit\n    local targetGUID = UnitGUID (unitId .. \"target\")\n    \n    if (targetGUID) then\n        \n        --get the npcID of the target\n        local npcID = Plater.GetNpcIDFromGUID (targetGUID)\n        local unitName = UnitName (unitId .. \"target\")\n        local unitNameLower = string.lower (unitName)\n        \n        --check if the npcID of this unit is in the npc list \n        local color = modTable.ListOfNpcs [npcID] or modTable.ListOfNpcs [unitName] or modTable.ListOfNpcs [unitNameLower]\n        \n        if color then\n            if modTable.changeBarColor then\n                Plater.SetNameplateColor (unitFrame, color)\n            end\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame, color)\n            end\n            unitFrame.attackingSpecificUnitFromMod = true\n        elseif unitFrame.attackingSpecificUnitFromMod and modTable.resetColors then\n            if modTable.changeBorderColor then\n                Plater.SetBorderColor (unitFrame)\n            end\n            if modTable.changeBarColor then\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n            unitFrame.attackingSpecificUnitFromMod = false\n        end\n    end\nend",
},
["Time"] = 1620377377,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_attacking_unit",
["Enabled"] = false,
["Revision"] = 363,
["semver"] = "",
["Author"] = "Kastfall-Azralon",
["Desc"] = "Change the nameplate color if the unit is attacking a specific unit like Monk's Ox Statue or Druid's Treants. You may edit which units it track in the constructor script.",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Attacking Specific Unit [Plater]",
["HooksTemp"] = {
},
["Options"] = {
{
["Type"] = 1,
["Key"] = "color",
["Value"] = {
0.50196078431373,
0.50196078431373,
0,
1,
},
["Name"] = "Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_color",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBarColor",
["Value"] = true,
["Name"] = "Change Bar Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "changeBorderColor",
["Value"] = false,
["Name"] = "Change Border Color",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
{
["Type"] = 4,
["Key"] = "resetColors",
["Value"] = true,
["Name"] = "Reset Colors",
["Icon"] = "Interface\\AddOns\\Plater\\images\\option_bool",
["Desc"] = "",
},
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    if (envTable.IsEnabled) then\n        if (unitFrame.IsSelf) then\n            if (envTable.ShowOnPersonalBar) then\n                envTable.BorderFrame:Show()\n            else\n                envTable.BorderFrame:Hide() \n            end\n        else\n            envTable.BorderFrame:Show()\n        end   \n    end\n    \nend   \n\n\n\n",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.BorderFrame:Hide()\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --border color\n    local borderColor = \"yellow\"\n    \n    --size of the border\n    local borderSize = 1\n    \n    --transparency\n    local borderAlpha = 1\n    \n    --enabled (set to false it you only want to use the extra border in other scripts)\n    local isEnabled = true\n    \n    --export border (allow the border to be used by other scripts)\n    --other scripts can use:\n    --unitFrame.healthBar.extraBorder:Show()\n    --unitFrame.healthBar.extraBorder:SetVertexColor (r, g, b)\n    --unitFrame.healthBar.extraBorder:SetBorderSizes (borderSize)\n    local canExportBorder = true\n    \n    --do not add the border to personal bar\n    local noPersonalBar = true\n    \n    --private\n    do\n        \n        local newBorder = CreateFrame (\"frame\", nil, unitFrame.healthBar, \"PlaterNamePlateFullBorderTemplate\")\n        envTable.BorderFrame = newBorder\n        \n        newBorder:SetBorderSizes (borderSize, borderSize, borderSize, borderSize)\n        newBorder:UpdateSizes()\n        \n        local r, g, b = DetailsFramework:ParseColors (borderColor)\n        newBorder:SetVertexColor (r, g, b, borderAlpha)\n        \n        envTable.ShowOnPersonalBar = not noPersonalBar\n        \n        if (canExportBorder) then\n            unitFrame.healthBar.extraBorder = newBorder\n        end\n        \n        if (not isEnabled) then\n            envTable.IsEnabled = false\n        else\n            envTable.IsEnabled = true\n        end\n    end\n    \nend\n\n\n",
},
["Time"] = 1567879805,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 133689,
["Enabled"] = false,
["Revision"] = 178,
["semver"] = "",
["Author"] = "Tecno-Azralon",
["Desc"] = "Add another border with more customizations. This border can also be manipulated by other scripts.",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Extra Border [Plater]",
["HooksTemp"] = {
},
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Created"] = "function (self, unitId, unitFrame, envTable)\n    \n    --run constructor!\n    --constructor is executed only once when any script of the hook runs.\n    \nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if need update the amount of combo points shown\n    if (envTable.LastPlayerTalentUpdate > envTable.LastUpdate) then\n        envTable.UpdateComboPointAmount()\n    end    \n    \n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n        \n    else\n        envTable.ComboPointFrame:Hide()\n    end    \n    \nend\n\n\n",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if this nameplate is the current target\n    if (unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.ComboPointFrame:Show()\n        envTable.UpdateComboPoints()\n    else\n        envTable.ComboPointFrame:Hide()\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
["Player Power Update"] = "function (self, unitId, unitFrame, envTable, modTable, ...)\n    local powerType = ...\n    \n    if (powerType and powerType == \"COMBO_POINTS\" and unitFrame.namePlateIsTarget and not unitFrame.IsSelf) then\n        envTable.UpdateComboPoints()\n    end\n    \n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.ComboPointFrame:Hide()\n    \nend\n\n\n\n\n",
["Player Talent Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    --update the amount of comboo points shown when the player changes talents or specialization\n    envTable.UpdateComboPointAmount()\n    \n    --save the time of the last talent change\n    envTable.LastPlayerTalentUpdate = GetTime()\n    \n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    --settings\n    local anchors = {\n        {\"bottom\", unitFrame.healthBar, \"top\", 0, 24},\n    }\n    \n    local sizes = {\n        width = 12,\n        height = 12,\n        scale = 1,\n    }\n    \n    local textures = {\n        backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        backgroundTexCoords = {0/128, 21/128, 101/128, 122/128},\n        \n        comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n        comboPointTexCoords = {3/128, 18/128, 81/128, 96/128},\n    }\n    if WOW_PROJECT_ID ~= WOW_PROJECT_MAINLINE then\n        textures = {\n            backgroundTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            backgroundTexCoords = {78/128, 98/128, 21/64, 41/64},\n            \n            comboPointTexture = [[Interface\\PLAYERFRAME\\ClassOverlayComboPoints]],\n            comboPointTexCoords = {100/128, 120/128, 21/64, 41/64},\n        }\n    end\n    \n    local frameLevel = 1000\n    local frameStrata = \"high\"    \n    \n    --private\n    do\n        --store combo points frames on this table\n        envTable.ComboPoints = {}\n        --save when the player changed talents or spec\n        envTable.LastPlayerTalentUpdate = GetTime()\n        --save when this nameplate got a combo point amount and alignment update        \n        \n        --build combo points frame anchor (combo point are anchored to this)\n        if (not unitFrame.PlaterComboPointFrame) then\n            local hostFrame = CreateFrame (\"frame\", nil, unitFrame)\n            hostFrame.ComboPointFramesPool = {}\n            unitFrame.PlaterComboPointFrame = hostFrame\n            envTable.ComboPointFrame = hostFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            \n            --DetailsFramework:ApplyStandardBackdrop (envTable.ComboPointFrame) --debug anchor size\n            \n            --animations\n            local onPlayShowAnimation = function (animation)\n                --stop the hide animation if it's playing\n                if (animation:GetParent():GetParent().HideAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().HideAnimation:Stop()\n                end\n                \n                animation:GetParent():Show()\n            end\n            \n            local onPlayHideAnimation = function (animation)\n                --stop the show animation if it's playing\n                if (animation:GetParent():GetParent().ShowAnimation:IsPlaying()) then\n                    animation:GetParent():GetParent().ShowAnimation:Stop()\n                end\n            end        \n            local onStopHideAnimation = function (animation)\n                animation:GetParent():Hide()       \n            end\n            \n            local createAnimations = function (comboPoint)\n                --on show\n                comboPoint.ShowAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayShowAnimation, nil)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 1, 0.1, 0, 0, 1, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"alpha\", 1, 0.1, .5, 1)\n                Plater:CreateAnimation (comboPoint.ShowAnimation, \"scale\", 2, 0.1, 1.2, 1.2, 1, 1)\n                \n                --on hide\n                comboPoint.HideAnimation = Plater:CreateAnimationHub (comboPoint.comboPointTexture, onPlayHideAnimation, onStopHideAnimation)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"scale\", 1, 0.1, 1, 1, 0, 0)\n                Plater:CreateAnimation (comboPoint.HideAnimation, \"alpha\", 1, 0.1, 1, 0)\n            end\n            \n            --build combo point frame        \n            for i =1, 10 do \n                local f = CreateFrame (\"frame\", nil, envTable.ComboPointFrame)\n                f:SetSize (sizes.width, sizes.height)\n                tinsert (envTable.ComboPoints, f)\n                tinsert (unitFrame.PlaterComboPointFrame.ComboPointFramesPool, f)\n                \n                local backgroundTexture = f:CreateTexture (nil, \"background\")\n                backgroundTexture:SetTexture (textures.backgroundTexture)\n                backgroundTexture:SetTexCoord (unpack (textures.backgroundTexCoords))\n                backgroundTexture:SetSize (sizes.width, sizes.height)\n                backgroundTexture:SetPoint (\"center\")\n                \n                local comboPointTexture = f:CreateTexture (nil, \"artwork\")\n                comboPointTexture:SetTexture (textures.comboPointTexture)\n                comboPointTexture:SetTexCoord (unpack (textures.comboPointTexCoords))\n                \n                comboPointTexture:SetSize (sizes.width, sizes.height)\n                comboPointTexture:SetPoint (\"center\")\n                comboPointTexture:Hide()            \n                \n                f.IsActive = false\n                \n                f.backgroundTexture = backgroundTexture\n                f.comboPointTexture = comboPointTexture\n                \n                createAnimations (f)\n            end\n            \n        else\n            envTable.ComboPointFrame = unitFrame.PlaterComboPointFrame\n            envTable.ComboPointFrame:SetScale (sizes.scale)\n            envTable.ComboPoints = unitFrame.PlaterComboPointFrame.ComboPointFramesPool\n            \n        end            \n        \n        envTable.ComboPointFrame:SetFrameLevel (frameLevel)\n        envTable.ComboPointFrame:SetFrameStrata (frameStrata)\n        \n        function envTable.UpdateComboPoints()\n            local comboPoints = GetComboPoints(\"player\", \"target\")\n            --UnitPower (\"player\", Enum.PowerType.ComboPoints)\n            \n            for i = 1, envTable.TotalComboPoints do\n                local thisComboPoint = envTable.ComboPoints [i]\n                \n                if (i <= comboPoints ) then\n                    --combo point enabled\n                    if (not thisComboPoint.IsActive) then\n                        thisComboPoint.ShowAnimation:Play()\n                        thisComboPoint.IsActive = true\n                        \n                    end\n                    \n                else\n                    --combo point disabled\n                    if (thisComboPoint.IsActive) then\n                        thisComboPoint.HideAnimation:Play()\n                        thisComboPoint.IsActive = false\n                        \n                    end\n                end\n            end\n            \n            \n        end\n        \n        function envTable.UpdateComboPointAmount()\n            local namePlateWidth = Plater.db.profile.plate_config.enemynpc.health_incombat[1]\n            local comboPoints = UnitPowerMax (\"player\", Enum.PowerType.ComboPoints)\n            local reservedSpace = (namePlateWidth - sizes.width * comboPoints)  / comboPoints \n            \n            --store the total amount of combo points\n            envTable.TotalComboPoints = comboPoints\n            \n            --update anchor frame\n            envTable.ComboPointFrame:SetWidth (namePlateWidth)\n            envTable.ComboPointFrame:SetHeight (20)\n            envTable.ComboPointFrame:ClearAllPoints()\n            for i = 1, #anchors do\n                local anchor = anchors[i]\n                envTable.ComboPointFrame:SetPoint (unpack (anchor))\n            end        \n            \n            --\n            for i = 1, #envTable.ComboPoints do\n                envTable.ComboPoints[i]:Hide()\n                envTable.ComboPoints[i]:ClearAllPoints()\n            end\n            \n            for i = 1, comboPoints do\n                local comboPoint = envTable.ComboPoints[i]\n                if i == 1 then\n                    comboPoint:SetPoint (\"left\", envTable.ComboPointFrame, \"left\", reservedSpace/2, 0)\n                else\n                    comboPoint:SetPoint (\"left\", envTable.ComboPoints[i-1], \"right\", reservedSpace, 0)\n                end\n                \n                comboPoint:Show()\n            end\n            \n            envTable.LastUpdate = GetTime()\n            \n            envTable.UpdateComboPoints()\n        end\n        \n        --initialize\n        envTable.UpdateComboPointAmount()\n        envTable.ComboPointFrame:Hide()\n    end\n    \n    \nend",
},
["Time"] = 1621935143,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
["Enabled"] = true,
["DRUID"] = true,
["ROGUE"] = true,
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
["103"] = true,
["Enabled"] = true,
},
},
["url"] = "",
["Icon"] = 135426,
["Enabled"] = false,
["Revision"] = 284,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show combo points above the nameplate for Druid Feral and Rogues.",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Combo Points [Plater]",
["HooksTemp"] = {
},
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Leave Combat"] = "function (self, unitId, unitFrame, envTable)\n    envTable.CanShow = false;\n    envTable.TargetAmount:SetText (\"\")\nend\n\n\n",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    \n    --when a nameplate is added to the screen check if the player is in combat\n    if (InCombatLockdown()) then\n        --player is in combat, check if can check amount of targets\n        envTable.CanShow = envTable.CanShowTargetAmount();\n        \n    else\n        envTable.CanShow = false; \n    end\n    \n    envTable.TargetAmount:SetText (\"\");\n    \nend",
["Nameplate Removed"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.TargetAmount:SetText (\"\");\n    envTable.CanShow = false;\n    \nend\n\n\n",
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    \n    --if the script is allowed to show the amount of targets\n    --also check if the unit is in combat\n    if (envTable.CanShow and UnitAffectingCombat (unitId)) then\n        \n        --check if can update the amount of targets following the cooldown set in the constructor script\n        --by default Plater updates the nameplate every 250ms, by default the cooldown is 2, so it'll update the amuont of target every 1/2 of a second\n        envTable.UpdateCooldown = envTable.UpdateCooldown + 1\n        if (envTable.UpdateCooldown < envTable.UpdateInterval) then\n            return\n        else\n            \n            --reset the cooldown interval to check the amount of target again\n            envTable.UpdateCooldown = 0\n            \n            --get the amount of targets\n            local amount;\n            if (envTable.InRaid) then\n                amount = envTable.NumTargetsInRaid (unitFrame)      \n                \n            elseif (envTable.InParty) then\n                amount = envTable.NumTargetsInParty (unitFrame)   \n                \n            else\n                envTable.TargetAmount:SetText (\"\")\n                return\n            end\n            \n            --update the amount text\n            if (amount == 0) then\n                envTable.TargetAmount:SetText (\"\")\n            else\n                envTable.TargetAmount:SetText (amount)\n            end\n            \n        end\n    end\nend\n\n\n",
["Enter Combat"] = "function (self, unitId, unitFrame, envTable)\n    \n    --check if can show the amount of targets\n    envTable.CanShow = envTable.CanShowTargetAmount();\n    \n    if (not envTable.CanShow) then\n        envTable.TargetAmount:SetText (\"\") \n    end\nend\n\n\n\n\n",
["Constructor"] = "--all gray text like this are comments and do not run as code\n--build the settings and basic functions for the hook\n\nfunction (self, unitId, unitFrame, envTable)\n    \n    --declare setting variables:\n    local textColor = \"orange\";\n    local textSize = 12;\n    \n    local showInRaid = true;\n    local showInDungeon = true;\n    local showInArena = false;\n    local showInBattleground = false;\n    local showInOpenWorld = true;\n    \n    envTable.UpdateInterval = 2; --each 2 updates in the nameplate it'll update the amount of targets\n    \n    local anchor = {\n        side = 6, --1 = topleft 2 = left 3 = bottomleft 4 = bottom 5 = bottom right 6 = right 7 = topright 8 = top\n        x = 4, --x offset\n        y = 0, --y offset\n    };\n    \n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------\n    \n    \n    --frames:\n    \n    --create the text that will show the amount of people targeting the unit\n    if (not  unitFrame.healthBar.TargetAmount) then\n        envTable.TargetAmount = Plater:CreateLabel (unitFrame.healthBar, \"\", textSize, textColor);\n        Plater.SetAnchor (envTable.TargetAmount, anchor);\n        unitFrame.healthBar.TargetAmount = envTable.TargetAmount\n    end\n    \n    --in case Plater wipes the envTable\n    envTable.TargetAmount = unitFrame.healthBar.TargetAmount\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --private variables (they will be used in the other scripts within this hook)\n    envTable.CanShow = false;\n    envTable.UpdateCooldown = 0;\n    envTable.InRaid = false;\n    envTable.InParty = false;\n    \n    ---------------------------------------------------------------------------------------------------------------------------------------------           \n    --functions\n    \n    --update the InRaid or InParty proprieties\n    function envTable.UpdateGroupType()\n        if (IsInRaid()) then\n            envTable.InRaid = true;\n            envTable.InParty = false;     \n            \n        elseif (IsInGroup()) then\n            envTable.InRaid = false;\n            envTable.InParty = true;   \n            \n        else\n            envTable.InRaid = false;            \n            envTable.InParty = false;\n        end\n    end\n    \n    --this function controls if the amount of targets can show following the settings in the top of this script\n    function envTable.CanShowTargetAmount()\n        \n        local _, instanceType, difficultyID, _, _, _, _, instanceMapID, instanceGroupSize = GetInstanceInfo()\n        \n        if (showInRaid and instanceType == \"raid\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInDungeon and instanceType == \"party\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInArena and instanceType == \"arena\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInBattleground and instanceType == \"pvp\") then\n            envTable.UpdateGroupType()\n            return true\n        end\n        \n        if (showInOpenWorld and instanceType == \"none\") then\n            envTable.UpdateGroupType()\n            if (envTable.InRaid or envTable.InParty) then\n                return true\n            end\n        end\n        \n        return false\n    end\n    \n    --get the amount of player targetting the unit in raid or party\n    function envTable.NumTargetsInRaid (unitFrame)\n        local amount = 0\n        for i = 1, GetNumGroupMembers() do\n            local unit = \"raid\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        return amount\n    end\n    \n    function envTable.NumTargetsInParty()\n        local amount = 0\n        for i = 1, GetNumGroupMembers() - 1 do\n            local unit = \"party\" .. i .. \"target\"\n            if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n                amount = amount + 1\n            end\n        end\n        \n        local unit = \"playertarget\"\n        if (UnitGUID (unit) == unitFrame.namePlateUnitGUID) then\n            amount = amount + 1\n        end        \n        \n        return amount\n    end\n    \nend",
},
["Time"] = 1548278227,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 1966587,
["Enabled"] = false,
["Revision"] = 182,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Show how many raid members are targeting the unit",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Players Targeting a Target [Plater]",
["HooksTemp"] = {
},
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Nameplate Updated"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Nameplate Added"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend",
["Target Changed"] = "function (self, unitId, unitFrame, envTable)\n    envTable.UpdateColor (unitFrame)\nend\n\n\n\n\n\n\n\n\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --usage: color name e.g \"red\" \"yellow\"; color table e.g {1, 0, 0} {1, 1, 0}; hex string e.g. \"#FF0000\" \"FFFF00\"\n    \n    envTable.TargetColor = \"purple\"\n    --envTable.TargetColor = \"#FF00FF\"\n    --envTable.TargetColor = {252/255, 0/255, 254/255}\n    \n    function envTable.UpdateColor (unitFrame)\n        --do not change the color of the personal bar\n        if (not unitFrame.IsSelf) then\n            \n            --if this nameplate the current target of the player?\n            if (unitFrame.namePlateIsTarget) then\n                Plater.SetNameplateColor (unitFrame, envTable.TargetColor)  --rgb\n            else\n                --refresh the nameplate color\n                Plater.RefreshNameplateColor (unitFrame)\n            end\n        end\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1552354619,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 878211,
["Enabled"] = false,
["Revision"] = 93,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Changes the target color to the color set in the constructor script.",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Current Target Color [Plater]",
["HooksTemp"] = {
},
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["LastHookEdited"] = "",
["Hooks"] = {
["Initialization"] = "function (modTable)\n    \n    --ATTENTION: after enabling this mod, you may have to adjust the anchor point at the Buff Settings tab\n    \n    local sortByTime = false\n    local invertSort = false\n    \n    --which auras goes first, assign a value (any number), bigger value goes first\n    local priority = {\n        [\"Vampiric Touch\"] = 50,\n        [\"Shadow Word: Pain\"] = 22,\n        [\"Mind Flay\"] = 5,\n        [\"Pistol Shot\"] = 50,\n        [\"Marked for Death\"] = 99,\n    }\n    \n    -- Sort function - do not touch\n    Plater.db.profile.aura_sort = true\n    \n    \n    function Plater.AuraIconsSortFunction (aura1, aura2)\n        local p1 = priority[aura1.SpellId] or priority[aura1.SpellName] or 1\n        local p2 = priority[aura2.SpellId] or priority[aura2.SpellName] or 1\n        \n        if sortByTime and p1 == p2 then\n            if invertSort then\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) > (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            else\n                return (aura1.Duration == 0 and 99999999 or aura1.RemainingTime or 0) < (aura2.Duration == 0 and 99999999 or aura2.RemainingTime or 0)\n            end\n        else\n            if invertSort then\n                 return p1 < p2\n            else\n                return p1 > p2\n            end\n        end\n    end\n    \nend\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
},
["Time"] = 1608663128,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = "Interface\\AddOns\\Plater\\images\\icon_aura_reorder",
["Enabled"] = false,
["Revision"] = 356,
["semver"] = "",
["Author"] = "Ditador-Azralon",
["Desc"] = "Reorder buffs and debuffs following the settings set in the constructor.",
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Aura Reorder [Plater]",
["HooksTemp"] = {
},
["Options"] = {
},
},
{
["OptionsValues"] = {
},
["HooksTemp"] = {
},
["Hooks"] = {
["Cast Start"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Destructor"] = "function (self, unitId, unitFrame, envTable)\n    if (unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder:Hide()\n    end    \nend",
["Cast Update"] = "function (self, unitId, unitFrame, envTable)\n    \n    envTable.UpdateBorder (unitFrame)\n    \nend\n\n\n",
["Constructor"] = "function (self, unitId, unitFrame, envTable)\n    \n    --settings\n    \n    --hide the icon of the spell, may require /reload after changing\n    envTable.HideIcon = false\n    \n    --border settings\n    envTable.BorderThickness = 0.5\n    envTable.BorderColor = \"black\"\n    \n    --private\n    --create the border\n    if (not unitFrame.castBar.CastBarBorder) then\n        unitFrame.castBar.CastBarBorder = CreateFrame (\"frame\", nil, unitFrame.castBar, \"NamePlateFullBorderTemplate\")\n        unitFrame.castBar.CastBarBorder:SetIgnoreParentScale(false)\n        \n    end    \n    \n    --update the border\n    function envTable.UpdateBorder (unitFrame)\n        local castBar = unitFrame.castBar\n        \n        local r, g, b, a = DetailsFramework:ParseColors (envTable.BorderColor)\n        castBar.CastBarBorder:SetVertexColor (r, g, b, a)\n        \n        local size = envTable.BorderThickness\n        castBar.CastBarBorder:SetBorderSizes (size, size, size, size)\n        castBar.CastBarBorder:UpdateSizes()        \n        \n        if (envTable.HideIcon) then\n            castBar.Icon:Hide()\n        end\n        \n        castBar.CastBarBorder:Show()\n    end\n    \nend\n\n\n\n\n",
},
["Time"] = 1603130989,
["LoadConditions"] = {
["talent"] = {
},
["group"] = {
},
["class"] = {
},
["map_ids"] = {
},
["role"] = {
},
["pvptalent"] = {
},
["affix"] = {
},
["race"] = {
},
["encounter_ids"] = {
},
["spec"] = {
},
},
["url"] = "",
["Icon"] = 133004,
["Enabled"] = false,
["Revision"] = 132,
["semver"] = "",
["Author"] = "Izimode-Azralon",
["Desc"] = "Adds a pixels perfect border around the cast bar.",
["Prio"] = 99,
["version"] = -1,
["PlaterCore"] = 1,
["Name"] = "Cast Bar Border",
["LastHookEdited"] = "Constructor",
["Options"] = {
},
},
},
["aura_show_buff_by_the_unit"] = false,
["auto_toggle_stacking_enabled"] = true,
["cast_statusbar_fadeout_time"] = 0.009999999776482582,
["patch_version_profile"] = 1,
["aura_stack_size"] = 24,
["indicator_pet"] = false,
["target_shady_alpha"] = 0,
["disable_omnicc_on_auras"] = true,
["target_highlight_alpha"] = 1,
["aura_width"] = 21,
["aura_height2"] = 15,
["saved_cvars"] = {
["ShowClassColorInNameplate"] = "1",
["nameplateOverlapV"] = "1.1",
["nameplateLargeTopInset"] = "0.079999998211861",
["nameplateShowEnemyMinus"] = "1",
["nameplateShowFriendlyTotems"] = "1",
["nameplatePersonalHideDelaySeconds"] = "0.2",
["nameplateShowFriendlyPets"] = "0",
["nameplatePersonalShowInCombat"] = "1",
["nameplatePersonalShowWithTarget"] = "0",
["nameplateMinAlpha"] = "0.90135484",
["nameplateResourceOnTarget"] = "0",
["nameplateNotSelectedAlpha"] = "1",
["nameplateShowAll"] = "1",
["nameplateMaxDistance"] = "41",
["nameplateShowFriendlyMinions"] = "0",
["nameplateSelfScale"] = "1.0",
["nameplateShowEnemies"] = "1",
["NamePlateVerticalScale"] = "1",
["nameplateSelectedAlpha"] = "1",
["nameplatePersonalShowAlways"] = "0",
["nameplateMotionSpeed"] = "0.05",
["nameplateGlobalScale"] = "1.0",
["nameplateShowEnemyMinions"] = "1",
["nameplateShowFriendlyNPCs"] = "0",
["nameplateSelectedScale"] = "1",
["nameplateShowFriends"] = "0",
["nameplateMotion"] = "1",
["nameplateMinScale"] = "1",
["nameplateRemovalAnimation"] = "1",
["nameplateOtherTopInset"] = "0.085",
["NamePlateHorizontalScale"] = "1",
["nameplateSelfBottomInset"] = ".2",
["nameplateShowEnemyTotems"] = "1",
["nameplateShowFriendlyGuardians"] = "0",
["nameplateOccludedAlphaMult"] = "1",
["nameplateSelfTopInset"] = ".5",
["nameplateShowEnemyGuardians"] = "1",
["nameplateSelfAlpha"] = "0.75",
["nameplateMinAlphaDistance"] = "-158489.31924611",
},
["ghost_auras"] = {
["auras"] = {
["WARLOCK"] = {
{
[980] = true,
[172] = true,
},
},
},
},
["first_run3"] = true,
["aggro_can_check_notank"] = true,
["login_counter"] = 41956,
["extra_icon_caster_name"] = false,
["aura2_grow_direction"] = 3,
["pet_width_scale"] = 0.94999998807907,
["aura_border_colors"] = {
["is_show_all"] = {
0.7843137254902,
0.031372549019608,
1,
},
},
["version"] = 6,
["target_highlight_height"] = 12,
["castbar_target_anchor"] = {
["side"] = 11,
},
["class_colors"] = {
["DEATHKNIGHT"] = {
["colorStr"] = "ffc31d3a",
},
["WARRIOR"] = {
["colorStr"] = "ffc69a6d",
},
["PALADIN"] = {
["colorStr"] = "fff48bb9",
},
["WARLOCK"] = {
["colorStr"] = "ff8687ed",
},
["DEMONHUNTER"] = {
["colorStr"] = "ffa22fc8",
},
["SHAMAN"] = {
["colorStr"] = "ff006fdd",
},
["DRUID"] = {
["colorStr"] = "ffff7c09",
},
["EVOKER"] = {
["colorStr"] = "ff33937e",
},
["ROGUE"] = {
["colorStr"] = "fffff467",
},
},
["aura_timer_text_size"] = 11,
["aura_stack_font"] = "2002 Bold",
["script_auto_imported"] = {
["Aura - Buff Alert"] = 15,
["Cast - Effect After Cast [P]"] = 2,
["Explosion Affix M+"] = 14,
["Aura - Debuff Alert"] = 12,
["Cast - Castbar is Timer [P]"] = 2,
["Cast - Ultra Important"] = 14,
["Add - Health Markers [P]"] = 2,
["Cast - Small Alert"] = 12,
["Aura - Invalidate Unit"] = 1,
["Add - Important [P]"] = 4,
["Unit - Main Target"] = 11,
["Aura - Blink Time Left"] = 13,
["Add - Tag Number [P]"] = 2,
["Unit Power"] = 1,
["Cast - Glowing [P]"] = 10,
["Cast - Important Target [P]"] = 2,
["Fixate On You"] = 11,
["Cast - Very Important"] = 15,
["Cast - Alert + Timer [P]"] = 4,
["Cast - Shield Interrupt"] = 2,
["Relics 9.2 M Dungeons"] = 2,
["Aura is Shield [P]"] = 2,
["Add - Warning [P]"] = 5,
["Unit - Important"] = 11,
["Aura While Casting [P]"] = 1,
["Cast - Big Alert"] = 14,
["Add - Explode on Die [P]"] = 1,
["Cast - On Going Cast [P]"] = 2,
["Auto Set Skull"] = 11,
["Cast - Stop Casting"] = 4,
["Color Change"] = 1,
["Spiteful Affix"] = 3,
["Add - Non Elite Trash [P]"] = 4,
["Cast - Quick Flash"] = 2,
["Aura Border Color"] = 1,
["Countdown"] = 11,
["Fixate by Unit Buff [P]"] = 2,
["Cast - Frontal Cone"] = 15,
["Fixate"] = 11,
["Cast - Circular Swipe"] = 4,
["Unit - Health Markers"] = 12,
["Cast - Tank Interrupt"] = 12,
["Unit - Show Energy"] = 11,
},
["target_highlight_color"] = {
0.98039215686275,
1,
0.9843137254902,
},
["range_check_in_range_or_target_alpha"] = 1,
["extra_icon_anchor"] = {
["y"] = -3.5,
["x"] = -5,
["side"] = 11,
},
["extra_icon_wide_icon"] = false,
["focus_indicator_enabled"] = false,
["number_region_first_run"] = true,
["aura_tracker"] = {
["buff_tracked"] = {
["227931"] = true,
["25596"] = true,
["297133"] = true,
["163689"] = true,
["233210"] = true,
["209859"] = true,
},
["debuff_banned"] = {
["12721"] = true,
["71001"] = true,
["22959"] = true,
["58438"] = true,
["51735"] = true,
["214968"] = true,
["199721"] = true,
["279956"] = true,
["32394"] = true,
["46466"] = true,
["68766"] = true,
["295367"] = true,
["30070"] = true,
},
["buff_banned"] = {
["206150"] = true,
["333553"] = true,
["61574"] = true,
["61573"] = true,
["311202"] = true,
},
["debuff_tracked"] = {
["25596"] = true,
},
},
["patch_version"] = 35,
["range_check_alpha"] = 0.699999988079071,
["ui_parent_scale_tune"] = 1.111111140545504,
["indicator_raidmark_scale"] = 0.8999999761581421,
["hide_friendly_castbars"] = true,
["OptionsPanelDB"] = {
["PlaterOptionsPanelFrame"] = {
["scale"] = 1,
},
},
["semver"] = "1.0.5",
["health_statusbar_bgcolor"] = {
0.11372549019608,
0.11372549019608,
0.11372549019608,
1,
},
["health_selection_overlay"] = "Melli",
["dps"] = {
["colors"] = {
["notontank"] = {
0.082352941176471,
0.15294117647059,
},
},
},
["aura_width2"] = 25,
["aura_frame2_anchor"] = {
["y"] = 42,
["side"] = 1,
},
["ignore_softinteract_objects"] = true,
["cast_statusbar_color"] = {
0.98823529411765,
0.77647058823529,
0.27450980392157,
0.96000000089407,
},
["cast_statusbar_texture"] = "Solid",
["aura_show_dispellable"] = false,
["indicator_rare"] = false,
["aura_border_colors_by_type"] = true,
["cast_statusbar_spark_width"] = 15,
["auto_toggle_friendly"] = {
["cities"] = false,
["world"] = false,
},
},
},
}
PlaterLanguage = {
["language"] = "enUS",
["version"] = 1,
}
PlaterLogs = {
["_general_logs"] = {
"2025-06-23 17:25:48 | INIT | Plater-v609-Mists | Framework v609 | 4.4.2 | enUS | Wunderful",
"2025-06-18 20:41:52 | INIT | Plater-v609-Mists | Framework v609 | 4.4.2 | enUS | Wunderful",
"2025-06-16 17:01:57 | INIT | Plater-v609-Mists | Framework v609 | 4.4.2 | enUS | Wunderful",
"2025-06-15 14:40:48 | INIT | Plater-v609-Mists | Framework v609 | 4.4.2 | enUS | Wunderful",
"2025-06-14 14:52:21 | INIT | Plater-v609-Mists | Framework v609 | 4.4.2 | enUS | Aiwa",
"2025-06-14 14:11:19 | INIT | Plater-v609-Mists | Framework v609 | 4.4.2 | enUS | Wunderful",
"2025-06-14 01:31:03 | INIT | Plater-v609-Mists | Framework v609 | 4.4.2 | enUS | Aiwa",
"2025-06-14 00:48:58 | INIT | Plater-v609-Mists | Framework v609 | 4.4.2 | enUS | Wunderful",
"2025-06-06 01:35:02 | INIT | Plater-v609-Mists | Framework v609 | 4.4.2 | enUS | Ostreicher",
"2025-06-06 00:08:53 | INIT | Plater-v609-Mists | Framework v609 | 4.4.2 | enUS | Ostreicher",
"2025-06-04 01:25:21 | INIT | Plater-v609-Mists | Framework v609 | 4.4.2 | enUS | Ostreicher",
"2025-06-03 17:42:59 | INIT | Plater-v609-Mists | Framework v609 | 4.4.2 | enUS | Ostreicher",
"2025-06-03 17:30:32 | INIT | Plater-v609-Mists | Framework v609 | 4.4.2 | enUS | Wunderful",
"2025-06-03 17:06:06 | INIT | Plater-v609-Mists | Framework v609 | 4.4.2 | enUS | Wunderful",
"2025-06-03 01:44:25 | INIT | Plater-v609-Mists | Framework v609 | 4.4.2 | enUS | Wunderful",
"2025-06-03 01:38:05 | INIT | Plater-v609-Mists | Framework v609 | 4.4.2 | enUS | Aiwa",
"2025-06-03 01:34:34 | INIT | Plater-v609-Mists | Framework v609 | 4.4.2 | enUS | Ostreicher",
"2025-06-03 00:48:39 | INIT | Plater-v609-Mists | Framework v609 | 4.4.2 | enUS | Wunderful",
"2025-06-03 00:46:29 | INIT | Plater-v609-Mists | Framework v609 | 4.4.2 | enUS | Aiwa",
},
["_error_logs"] = {
},
}
PlaterBackup = {
}
